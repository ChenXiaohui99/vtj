const d="(function(){"use strict";class ps{constructor(){this.listeners=[],this.unexpectedErrorHandler=function(t){setTimeout(()=>{throw t.stack?rt.isErrorNoTelemetry(t)?new rt(t.message+`

`+t.stack):new Error(t.message+`

`+t.stack):t},0)}}emit(t){this.listeners.forEach(n=>{n(t)})}onUnexpectedError(t){this.unexpectedErrorHandler(t),this.emit(t)}onUnexpectedExternalError(t){this.unexpectedErrorHandler(t)}}const gs=new ps;function mi(e){bs(e)||gs.onUnexpectedError(e)}function fi(e){if(e instanceof Error){const{name:t,message:n}=e,i=e.stacktrace||e.stack;return{$isError:!0,name:t,message:n,stack:i,noTelemetry:rt.isErrorNoTelemetry(e)}}return e}const bn="Canceled";function bs(e){return e instanceof vs?!0:e instanceof Error&&e.name===bn&&e.message===bn}class vs extends Error{constructor(){super(bn),this.name=this.message}}class rt extends Error{constructor(t){super(t),this.name="CodeExpectedError"}static fromError(t){if(t instanceof rt)return t;const n=new rt;return n.message=t.message,n.stack=t.stack,n}static isErrorNoTelemetry(t){return t.name==="CodeExpectedError"}}class Ue extends Error{constructor(t){super(t||"An unexpected bug occurred."),Object.setPrototypeOf(this,Ue.prototype)}}function _s(e,t){const n=this;let i=!1,r;return function(){return i||(i=!0,r=e.apply(n,arguments)),r}}var Wt;(function(e){function t(y){return y&&typeof y=="object"&&typeof y[Symbol.iterator]=="function"}e.is=t;const n=Object.freeze([]);function i(){return n}e.empty=i;function*r(y){yield y}e.single=r;function a(y){return t(y)?y:r(y)}e.wrap=a;function s(y){return y||n}e.from=s;function*o(y){for(let E=y.length-1;E>=0;E--)yield y[E]}e.reverse=o;function l(y){return!y||y[Symbol.iterator]().next().done===!0}e.isEmpty=l;function u(y){return y[Symbol.iterator]().next().value}e.first=u;function c(y,E){for(const R of y)if(E(R))return!0;return!1}e.some=c;function d(y,E){for(const R of y)if(E(R))return R}e.find=d;function*m(y,E){for(const R of y)E(R)&&(yield R)}e.filter=m;function*f(y,E){let R=0;for(const P of y)yield E(P,R++)}e.map=f;function*b(...y){for(const E of y)yield*E}e.concat=b;function p(y,E,R){let P=R;for(const v of y)P=E(P,v);return P}e.reduce=p;function*w(y,E,R=y.length){for(E<0&&(E+=y.length),R<0?R+=y.length:R>y.length&&(R=y.length);E<R;E++)yield y[E]}e.slice=w;function x(y,E=Number.POSITIVE_INFINITY){const R=[];if(E===0)return[R,y];const P=y[Symbol.iterator]();for(let v=0;v<E;v++){const g=P.next();if(g.done)return[R,e.empty()];R.push(g.value)}return[R,{[Symbol.iterator](){return P}}]}e.consume=x;async function _(y){const E=[];for await(const R of y)E.push(R);return Promise.resolve(E)}e.asyncToArray=_})(Wt||(Wt={}));function sc(e){return e}function oc(e,t){}function pi(e){if(Wt.is(e)){const t=[];for(const n of e)if(n)try{n.dispose()}catch(i){t.push(i)}if(t.length===1)throw t[0];if(t.length>1)throw new AggregateError(t,"Encountered errors while disposing of store");return Array.isArray(e)?[]:e}else if(e)return e.dispose(),e}function ws(...e){return Ft(()=>pi(e))}function Ft(e){return{dispose:_s(()=>{e()})}}class at{constructor(){this._toDispose=new Set,this._isDisposed=!1}dispose(){this._isDisposed||(this._isDisposed=!0,this.clear())}get isDisposed(){return this._isDisposed}clear(){if(this._toDispose.size!==0)try{pi(this._toDispose)}finally{this._toDispose.clear()}}add(t){if(!t)return t;if(t===this)throw new Error("Cannot register a disposable on itself!");return this._isDisposed?at.DISABLE_DISPOSED_WARNING||console.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack):this._toDispose.add(t),t}deleteAndLeak(t){t&&this._toDispose.has(t)&&this._toDispose.delete(t)}}at.DISABLE_DISPOSED_WARNING=!1;class yt{constructor(){this._store=new at,this._store}dispose(){this._store.dispose()}_register(t){if(t===this)throw new Error("Cannot register a disposable on itself!");return this._store.add(t)}}yt.None=Object.freeze({dispose(){}});let te=class hi{constructor(t){this.element=t,this.next=hi.Undefined,this.prev=hi.Undefined}};te.Undefined=new te(void 0);class ys{constructor(){this._first=te.Undefined,this._last=te.Undefined,this._size=0}get size(){return this._size}isEmpty(){return this._first===te.Undefined}clear(){let t=this._first;for(;t!==te.Undefined;){const n=t.next;t.prev=te.Undefined,t.next=te.Undefined,t=n}this._first=te.Undefined,this._last=te.Undefined,this._size=0}unshift(t){return this._insert(t,!1)}push(t){return this._insert(t,!0)}_insert(t,n){const i=new te(t);if(this._first===te.Undefined)this._first=i,this._last=i;else if(n){const a=this._last;this._last=i,i.prev=a,a.next=i}else{const a=this._first;this._first=i,i.next=a,a.prev=i}this._size+=1;let r=!1;return()=>{r||(r=!0,this._remove(i))}}shift(){if(this._first!==te.Undefined){const t=this._first.element;return this._remove(this._first),t}}pop(){if(this._last!==te.Undefined){const t=this._last.element;return this._remove(this._last),t}}_remove(t){if(t.prev!==te.Undefined&&t.next!==te.Undefined){const n=t.prev;n.next=t.next,t.next.prev=n}else t.prev===te.Undefined&&t.next===te.Undefined?(this._first=te.Undefined,this._last=te.Undefined):t.next===te.Undefined?(this._last=this._last.prev,this._last.next=te.Undefined):t.prev===te.Undefined&&(this._first=this._first.next,this._first.prev=te.Undefined);this._size-=1}*[Symbol.iterator](){let t=this._first;for(;t!==te.Undefined;)yield t.element,t=t.next}}const xs=globalThis.performance&&typeof globalThis.performance.now=="function";class Pt{static create(t){return new Pt(t)}constructor(t){this._now=xs&&t===!1?Date.now:globalThis.performance.now.bind(globalThis.performance),this._startTime=this._now(),this._stopTime=-1}stop(){this._stopTime=this._now()}reset(){this._startTime=this._now(),this._stopTime=-1}elapsed(){return this._stopTime!==-1?this._stopTime-this._startTime:this._now()-this._startTime}}var vn;(function(e){e.None=()=>yt.None;function t(S,k){return d(S,()=>{},0,void 0,!0,void 0,k)}e.defer=t;function n(S){return(k,N=null,D)=>{let H=!1,F;return F=S(L=>{if(!H)return F?F.dispose():H=!0,k.call(N,L)},null,D),H&&F.dispose(),F}}e.once=n;function i(S,k,N){return u((D,H=null,F)=>S(L=>D.call(H,k(L)),null,F),N)}e.map=i;function r(S,k,N){return u((D,H=null,F)=>S(L=>{k(L),D.call(H,L)},null,F),N)}e.forEach=r;function a(S,k,N){return u((D,H=null,F)=>S(L=>k(L)&&D.call(H,L),null,F),N)}e.filter=a;function s(S){return S}e.signal=s;function o(...S){return(k,N=null,D)=>{const H=ws(...S.map(F=>F(L=>k.call(N,L))));return c(H,D)}}e.any=o;function l(S,k,N,D){let H=N;return i(S,F=>(H=k(H,F),H),D)}e.reduce=l;function u(S,k){let N;const D={onWillAddFirstListener(){N=S(H.fire,H)},onDidRemoveLastListener(){N?.dispose()}},H=new Ae(D);return k?.add(H),H.event}function c(S,k){return k instanceof Array?k.push(S):k&&k.add(S),S}function d(S,k,N=100,D=!1,H=!1,F,L){let A,M,W,I=0,z;const B={leakWarningThreshold:F,onWillAddFirstListener(){A=S(Q=>{I++,M=k(M,Q),D&&!W&&(X.fire(M),M=void 0),z=()=>{const J=M;M=void 0,W=void 0,(!D||I>1)&&X.fire(J),I=0},typeof N=="number"?(clearTimeout(W),W=setTimeout(z,N)):W===void 0&&(W=0,queueMicrotask(z))})},onWillRemoveListener(){H&&I>0&&z?.()},onDidRemoveLastListener(){z=void 0,A.dispose()}},X=new Ae(B);return L?.add(X),X.event}e.debounce=d;function m(S,k=0,N){return e.debounce(S,(D,H)=>D?(D.push(H),D):[H],k,void 0,!0,void 0,N)}e.accumulate=m;function f(S,k=(D,H)=>D===H,N){let D=!0,H;return a(S,F=>{const L=D||!k(F,H);return D=!1,H=F,L},N)}e.latch=f;function b(S,k,N){return[e.filter(S,k,N),e.filter(S,D=>!k(D),N)]}e.split=b;function p(S,k=!1,N=[],D){let H=N.slice(),F=S(M=>{H?H.push(M):A.fire(M)});D&&D.add(F);const L=()=>{H?.forEach(M=>A.fire(M)),H=null},A=new Ae({onWillAddFirstListener(){F||(F=S(M=>A.fire(M)),D&&D.add(F))},onDidAddFirstListener(){H&&(k?setTimeout(L):L())},onDidRemoveLastListener(){F&&F.dispose(),F=null}});return D&&D.add(A),A.event}e.buffer=p;function w(S,k){return(D,H,F)=>{const L=k(new _);return S(function(A){const M=L.evaluate(A);M!==x&&D.call(H,M)},void 0,F)}}e.chain=w;const x=Symbol("HaltChainable");class _{constructor(){this.steps=[]}map(k){return this.steps.push(k),this}forEach(k){return this.steps.push(N=>(k(N),N)),this}filter(k){return this.steps.push(N=>k(N)?N:x),this}reduce(k,N){let D=N;return this.steps.push(H=>(D=k(D,H),D)),this}latch(k=(N,D)=>N===D){let N=!0,D;return this.steps.push(H=>{const F=N||!k(H,D);return N=!1,D=H,F?H:x}),this}evaluate(k){for(const N of this.steps)if(k=N(k),k===x)break;return k}}function y(S,k,N=D=>D){const D=(...A)=>L.fire(N(...A)),H=()=>S.on(k,D),F=()=>S.removeListener(k,D),L=new Ae({onWillAddFirstListener:H,onDidRemoveLastListener:F});return L.event}e.fromNodeEventEmitter=y;function E(S,k,N=D=>D){const D=(...A)=>L.fire(N(...A)),H=()=>S.addEventListener(k,D),F=()=>S.removeEventListener(k,D),L=new Ae({onWillAddFirstListener:H,onDidRemoveLastListener:F});return L.event}e.fromDOMEventEmitter=E;function R(S){return new Promise(k=>n(S)(k))}e.toPromise=R;function P(S){const k=new Ae;return S.then(N=>{k.fire(N)},()=>{k.fire(void 0)}).finally(()=>{k.dispose()}),k.event}e.fromPromise=P;function v(S,k,N){return k(N),S(D=>k(D))}e.runAndSubscribe=v;class g{constructor(k,N){this._observable=k,this._counter=0,this._hasChanged=!1;const D={onWillAddFirstListener:()=>{k.addObserver(this)},onDidRemoveLastListener:()=>{k.removeObserver(this)}};this.emitter=new Ae(D),N&&N.add(this.emitter)}beginUpdate(k){this._counter++}handlePossibleChange(k){}handleChange(k,N){this._hasChanged=!0}endUpdate(k){this._counter--,this._counter===0&&(this._observable.reportChanges(),this._hasChanged&&(this._hasChanged=!1,this.emitter.fire(this._observable.get())))}}function T(S,k){return new g(S,k).emitter.event}e.fromObservable=T;function q(S){return(k,N,D)=>{let H=0,F=!1;const L={beginUpdate(){H++},endUpdate(){H--,H===0&&(S.reportChanges(),F&&(F=!1,k.call(N)))},handlePossibleChange(){},handleChange(){F=!0}};S.addObserver(L),S.reportChanges();const A={dispose(){S.removeObserver(L)}};return D instanceof at?D.add(A):Array.isArray(D)&&D.push(A),A}}e.fromObservableLight=q})(vn||(vn={}));class st{constructor(t){this.listenerCount=0,this.invocationCount=0,this.elapsedOverall=0,this.durations=[],this.name=`${t}_${st._idPool++}`,st.all.add(this)}start(t){this._stopWatch=new Pt,this.listenerCount=t}stop(){if(this._stopWatch){const t=this._stopWatch.elapsed();this.durations.push(t),this.elapsedOverall+=t,this.invocationCount+=1,this._stopWatch=void 0}}}st.all=new Set,st._idPool=0;let Ts=-1;class ks{constructor(t,n=Math.random().toString(18).slice(2,5)){this.threshold=t,this.name=n,this._warnCountdown=0}dispose(){var t;(t=this._stacks)===null||t===void 0||t.clear()}check(t,n){const i=this.threshold;if(i<=0||n<i)return;this._stacks||(this._stacks=new Map);const r=this._stacks.get(t.value)||0;if(this._stacks.set(t.value,r+1),this._warnCountdown-=1,this._warnCountdown<=0){this._warnCountdown=i*.5;let a,s=0;for(const[o,l]of this._stacks)(!a||s<l)&&(a=o,s=l);console.warn(`[${this.name}] potential listener LEAK detected, having ${n} listeners already. MOST frequent listener (${s}):`),console.warn(a)}return()=>{const a=this._stacks.get(t.value)||0;this._stacks.set(t.value,a-1)}}}class _n{static create(){var t;return new _n((t=new Error().stack)!==null&&t!==void 0?t:"")}constructor(t){this.value=t}print(){console.warn(this.value.split(`
`).slice(2).join(`
`))}}class wn{constructor(t){this.value=t}}const As=2;class Ae{constructor(t){var n,i,r,a,s;this._size=0,this._options=t,this._leakageMon=!((n=this._options)===null||n===void 0)&&n.leakWarningThreshold?new ks((r=(i=this._options)===null||i===void 0?void 0:i.leakWarningThreshold)!==null&&r!==void 0?r:Ts):void 0,this._perfMon=!((a=this._options)===null||a===void 0)&&a._profName?new st(this._options._profName):void 0,this._deliveryQueue=(s=this._options)===null||s===void 0?void 0:s.deliveryQueue}dispose(){var t,n,i,r;this._disposed||(this._disposed=!0,((t=this._deliveryQueue)===null||t===void 0?void 0:t.current)===this&&this._deliveryQueue.reset(),this._listeners&&(this._listeners=void 0,this._size=0),(i=(n=this._options)===null||n===void 0?void 0:n.onDidRemoveLastListener)===null||i===void 0||i.call(n),(r=this._leakageMon)===null||r===void 0||r.dispose())}get event(){var t;return(t=this._event)!==null&&t!==void 0||(this._event=(n,i,r)=>{var a,s,o,l,u;if(this._leakageMon&&this._size>this._leakageMon.threshold*3)return console.warn(`[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far`),yt.None;if(this._disposed)return yt.None;i&&(n=n.bind(i));const c=new wn(n);let d;this._leakageMon&&this._size>=Math.ceil(this._leakageMon.threshold*.2)&&(c.stack=_n.create(),d=this._leakageMon.check(c.stack,this._size+1)),this._listeners?this._listeners instanceof wn?((u=this._deliveryQueue)!==null&&u!==void 0||(this._deliveryQueue=new Ss),this._listeners=[this._listeners,c]):this._listeners.push(c):((s=(a=this._options)===null||a===void 0?void 0:a.onWillAddFirstListener)===null||s===void 0||s.call(a,this),this._listeners=c,(l=(o=this._options)===null||o===void 0?void 0:o.onDidAddFirstListener)===null||l===void 0||l.call(o,this)),this._size++;const m=Ft(()=>{d?.(),this._removeListener(c)});return r instanceof at?r.add(m):Array.isArray(r)&&r.push(m),m}),this._event}_removeListener(t){var n,i,r,a;if((i=(n=this._options)===null||n===void 0?void 0:n.onWillRemoveListener)===null||i===void 0||i.call(n,this),!this._listeners)return;if(this._size===1){this._listeners=void 0,(a=(r=this._options)===null||r===void 0?void 0:r.onDidRemoveLastListener)===null||a===void 0||a.call(r,this),this._size=0;return}const s=this._listeners,o=s.indexOf(t);if(o===-1)throw console.log("disposed?",this._disposed),console.log("size?",this._size),console.log("arr?",JSON.stringify(this._listeners)),new Error("Attempted to dispose unknown listener");this._size--,s[o]=void 0;const l=this._deliveryQueue.current===this;if(this._size*As<=s.length){let u=0;for(let c=0;c<s.length;c++)s[c]?s[u++]=s[c]:l&&(this._deliveryQueue.end--,u<this._deliveryQueue.i&&this._deliveryQueue.i--);s.length=u}}_deliver(t,n){var i;if(!t)return;const r=((i=this._options)===null||i===void 0?void 0:i.onListenerError)||mi;if(!r){t.value(n);return}try{t.value(n)}catch(a){r(a)}}_deliverQueue(t){const n=t.current._listeners;for(;t.i<t.end;)this._deliver(n[t.i++],t.value);t.reset()}fire(t){var n,i,r,a;if(!((n=this._deliveryQueue)===null||n===void 0)&&n.current&&(this._deliverQueue(this._deliveryQueue),(i=this._perfMon)===null||i===void 0||i.stop()),(r=this._perfMon)===null||r===void 0||r.start(this._size),this._listeners)if(this._listeners instanceof wn)this._deliver(this._listeners,t);else{const s=this._deliveryQueue;s.enqueue(this,t,this._listeners.length),this._deliverQueue(s)}(a=this._perfMon)===null||a===void 0||a.stop()}hasListeners(){return this._size>0}}class Ss{constructor(){this.i=-1,this.end=0}enqueue(t,n,i){this.i=0,this.end=i,this.current=t,this.value=n}reset(){this.i=this.end,this.current=void 0,this.value=void 0}}function Ls(e){return typeof e=="string"}function Cs(e){let t=[];for(;Object.prototype!==e;)t=t.concat(Object.getOwnPropertyNames(e)),e=Object.getPrototypeOf(e);return t}function yn(e){const t=[];for(const n of Cs(e))typeof e[n]=="function"&&t.push(n);return t}function Es(e,t){const n=r=>function(){const a=Array.prototype.slice.call(arguments,0);return t(r,a)},i={};for(const r of e)i[r]=n(r);return i}let Rs=typeof document<"u"&&document.location&&document.location.hash.indexOf("pseudo=true")>=0;function Ms(e,t){let n;return t.length===0?n=e:n=e.replace(/\{(\d+)\}/g,(i,r)=>{const a=r[0],s=t[a];let o=i;return typeof s=="string"?o=s:(typeof s=="number"||typeof s=="boolean"||s===void 0||s===null)&&(o=String(s)),o}),Rs&&(n="［"+n.replace(/[aouei]/g,"$&$&")+"］"),n}function K(e,t,...n){return Ms(t,n)}function lc(e){}var xn,Tn;const ot="en";let kn=!1,An=!1,Sn=!1,Bt,Ln=ot,gi=ot,Ds,Se;const Ze=globalThis;let he;typeof Ze.vscode<"u"&&typeof Ze.vscode.process<"u"?he=Ze.vscode.process:typeof process<"u"&&typeof((xn=process==null?void 0:process.versions)===null||xn===void 0?void 0:xn.node)=="string"&&(he=process);const Ns=typeof((Tn=he?.versions)===null||Tn===void 0?void 0:Tn.electron)=="string"&&he?.type==="renderer";if(typeof he=="object"){kn=he.platform==="win32",An=he.platform==="darwin",Sn=he.platform==="linux",Sn&&he.env.SNAP&&he.env.SNAP_REVISION,he.env.CI||he.env.BUILD_ARTIFACTSTAGINGDIRECTORY,Bt=ot,Ln=ot;const e=he.env.VSCODE_NLS_CONFIG;if(e)try{const t=JSON.parse(e),n=t.availableLanguages["*"];Bt=t.locale,gi=t.osLocale,Ln=n||ot,Ds=t._translationsConfigFile}catch{}}else typeof navigator=="object"&&!Ns?(Se=navigator.userAgent,kn=Se.indexOf("Windows")>=0,An=Se.indexOf("Macintosh")>=0,(Se.indexOf("Macintosh")>=0||Se.indexOf("iPad")>=0||Se.indexOf("iPhone")>=0)&&navigator.maxTouchPoints&&navigator.maxTouchPoints>0,Sn=Se.indexOf("Linux")>=0,Se?.indexOf("Mobi")>=0,K({key:"ensureLoaderPluginIsLoaded",comment:["{Locked}"]},"_"),Bt=ot,Ln=Bt,gi=navigator.language):console.error("Unable to resolve platform.");const xt=kn,Is=An,De=Se,zs=typeof Ze.postMessage=="function"&&!Ze.importScripts;(()=>{if(zs){const e=[];Ze.addEventListener("message",n=>{if(n.data&&n.data.vscodeScheduleAsyncWork)for(let i=0,r=e.length;i<r;i++){const a=e[i];if(a.id===n.data.vscodeScheduleAsyncWork){e.splice(i,1),a.callback();return}}});let t=0;return n=>{const i=++t;e.push({id:i,callback:n}),Ze.postMessage({vscodeScheduleAsyncWork:i},"*")}}return e=>setTimeout(e)})();const Hs=!!(De&&De.indexOf("Chrome")>=0);De&&De.indexOf("Firefox")>=0,!Hs&&De&&De.indexOf("Safari")>=0,De&&De.indexOf("Edg/")>=0,De&&De.indexOf("Android")>=0;class Us{constructor(t,n=JSON.stringify){this.fn=t,this._computeKey=n,this.lastCache=void 0,this.lastArgKey=void 0}get(t){const n=this._computeKey(t);return this.lastArgKey!==n&&(this.lastArgKey=n,this.lastCache=this.fn(t)),this.lastCache}}class bi{constructor(t){this.executor=t,this._didRun=!1}get value(){if(!this._didRun)try{this._value=this.executor()}catch(t){this._error=t}finally{this._didRun=!0}if(this._error)throw this._error;return this._value}get rawValue(){return this._value}}var lt;function Ws(e){return e.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g,"\\$&")}function Fs(e){return e.split(/\r\n|\r|\n/)}function Ps(e){for(let t=0,n=e.length;t<n;t++){const i=e.charCodeAt(t);if(i!==32&&i!==9)return t}return-1}function Bs(e,t=e.length-1){for(let n=t;n>=0;n--){const i=e.charCodeAt(n);if(i!==32&&i!==9)return n}return-1}function vi(e){return e>=65&&e<=90}function Cn(e){return 55296<=e&&e<=56319}function qs(e){return 56320<=e&&e<=57343}function Os(e,t){return(e-55296<<10)+(t-56320)+65536}function Vs(e,t,n){const i=e.charCodeAt(n);if(Cn(i)&&n+1<t){const r=e.charCodeAt(n+1);if(qs(r))return Os(i,r)}return i}const js=/^[\t\n\r\x20-\x7E]*$/;function Gs(e){return js.test(e)}class Ke{static getInstance(t){return lt.cache.get(Array.from(t))}static getLocales(){return lt._locales.value}constructor(t){this.confusableDictionary=t}isAmbiguous(t){return this.confusableDictionary.has(t)}getPrimaryConfusable(t){return this.confusableDictionary.get(t)}getConfusableCodePoints(){return new Set(this.confusableDictionary.keys())}}lt=Ke,Ke.ambiguousCharacterData=new bi(()=>JSON.parse('{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"cs":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"es":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"fr":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"it":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ja":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],"ko":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pt-BR":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ru":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"zh-hans":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],"zh-hant":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}')),Ke.cache=new Us(e=>{function t(u){const c=new Map;for(let d=0;d<u.length;d+=2)c.set(u[d],u[d+1]);return c}function n(u,c){const d=new Map(u);for(const[m,f]of c)d.set(m,f);return d}function i(u,c){if(!u)return c;const d=new Map;for(const[m,f]of u)c.has(m)&&d.set(m,f);return d}const r=lt.ambiguousCharacterData.value;let a=e.filter(u=>!u.startsWith("_")&&u in r);a.length===0&&(a=["_default"]);let s;for(const u of a){const c=t(r[u]);s=i(s,c)}const o=t(r._common),l=n(o,s);return new lt(l)}),Ke._locales=new bi(()=>Object.keys(lt.ambiguousCharacterData.value).filter(e=>!e.startsWith("_")));class Pe{static getRawData(){return JSON.parse("[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]")}static getData(){return this._data||(this._data=new Set(Pe.getRawData())),this._data}static isInvisibleCharacter(t){return Pe.getData().has(t)}static get codePoints(){return Pe.getData()}}Pe._data=void 0;const $s="$initialize";class Xs{constructor(t,n,i,r){this.vsWorker=t,this.req=n,this.method=i,this.args=r,this.type=0}}class _i{constructor(t,n,i,r){this.vsWorker=t,this.seq=n,this.res=i,this.err=r,this.type=1}}class Js{constructor(t,n,i,r){this.vsWorker=t,this.req=n,this.eventName=i,this.arg=r,this.type=2}}class Qs{constructor(t,n,i){this.vsWorker=t,this.req=n,this.event=i,this.type=3}}class Ys{constructor(t,n){this.vsWorker=t,this.req=n,this.type=4}}class Zs{constructor(t){this._workerId=-1,this._handler=t,this._lastSentReq=0,this._pendingReplies=Object.create(null),this._pendingEmitters=new Map,this._pendingEvents=new Map}setWorkerId(t){this._workerId=t}sendMessage(t,n){const i=String(++this._lastSentReq);return new Promise((r,a)=>{this._pendingReplies[i]={resolve:r,reject:a},this._send(new Xs(this._workerId,i,t,n))})}listen(t,n){let i=null;const r=new Ae({onWillAddFirstListener:()=>{i=String(++this._lastSentReq),this._pendingEmitters.set(i,r),this._send(new Js(this._workerId,i,t,n))},onDidRemoveLastListener:()=>{this._pendingEmitters.delete(i),this._send(new Ys(this._workerId,i)),i=null}});return r.event}handleMessage(t){!t||!t.vsWorker||this._workerId!==-1&&t.vsWorker!==this._workerId||this._handleMessage(t)}_handleMessage(t){switch(t.type){case 1:return this._handleReplyMessage(t);case 0:return this._handleRequestMessage(t);case 2:return this._handleSubscribeEventMessage(t);case 3:return this._handleEventMessage(t);case 4:return this._handleUnsubscribeEventMessage(t)}}_handleReplyMessage(t){if(!this._pendingReplies[t.seq]){console.warn("Got reply to unknown seq");return}const n=this._pendingReplies[t.seq];if(delete this._pendingReplies[t.seq],t.err){let i=t.err;t.err.$isError&&(i=new Error,i.name=t.err.name,i.message=t.err.message,i.stack=t.err.stack),n.reject(i);return}n.resolve(t.res)}_handleRequestMessage(t){const n=t.req;this._handler.handleMessage(t.method,t.args).then(r=>{this._send(new _i(this._workerId,n,r,void 0))},r=>{r.detail instanceof Error&&(r.detail=fi(r.detail)),this._send(new _i(this._workerId,n,void 0,fi(r)))})}_handleSubscribeEventMessage(t){const n=t.req,i=this._handler.handleEvent(t.eventName,t.arg)(r=>{this._send(new Qs(this._workerId,n,r))});this._pendingEvents.set(n,i)}_handleEventMessage(t){if(!this._pendingEmitters.has(t.req)){console.warn("Got event for unknown req");return}this._pendingEmitters.get(t.req).fire(t.event)}_handleUnsubscribeEventMessage(t){if(!this._pendingEvents.has(t.req)){console.warn("Got unsubscribe for unknown req");return}this._pendingEvents.get(t.req).dispose(),this._pendingEvents.delete(t.req)}_send(t){const n=[];if(t.type===0)for(let i=0;i<t.args.length;i++)t.args[i]instanceof ArrayBuffer&&n.push(t.args[i]);else t.type===1&&t.res instanceof ArrayBuffer&&n.push(t.res);this._handler.sendMessage(t,n)}}function wi(e){return e[0]==="o"&&e[1]==="n"&&vi(e.charCodeAt(2))}function yi(e){return/^onDynamic/.test(e)&&vi(e.charCodeAt(9))}function Ks(e,t,n){const i=s=>function(){const o=Array.prototype.slice.call(arguments,0);return t(s,o)},r=s=>function(o){return n(s,o)},a={};for(const s of e){if(yi(s)){a[s]=r(s);continue}if(wi(s)){a[s]=n(s,void 0);continue}a[s]=i(s)}return a}class eo{constructor(t,n){this._requestHandlerFactory=n,this._requestHandler=null,this._protocol=new Zs({sendMessage:(i,r)=>{t(i,r)},handleMessage:(i,r)=>this._handleMessage(i,r),handleEvent:(i,r)=>this._handleEvent(i,r)})}onmessage(t){this._protocol.handleMessage(t)}_handleMessage(t,n){if(t===$s)return this.initialize(n[0],n[1],n[2],n[3]);if(!this._requestHandler||typeof this._requestHandler[t]!="function")return Promise.reject(new Error("Missing requestHandler or method: "+t));try{return Promise.resolve(this._requestHandler[t].apply(this._requestHandler,n))}catch(i){return Promise.reject(i)}}_handleEvent(t,n){if(!this._requestHandler)throw new Error("Missing requestHandler");if(yi(t)){const i=this._requestHandler[t].call(this._requestHandler,n);if(typeof i!="function")throw new Error(`Missing dynamic event ${t} on request handler.`);return i}if(wi(t)){const i=this._requestHandler[t];if(typeof i!="function")throw new Error(`Missing event ${t} on request handler.`);return i}throw new Error(`Malformed event name ${t}`)}initialize(t,n,i,r){this._protocol.setWorkerId(t);const o=Ks(r,(l,u)=>this._protocol.sendMessage(l,u),(l,u)=>this._protocol.listen(l,u));return this._requestHandlerFactory?(this._requestHandler=this._requestHandlerFactory(o),Promise.resolve(yn(this._requestHandler))):(n&&(typeof n.baseUrl<"u"&&delete n.baseUrl,typeof n.paths<"u"&&typeof n.paths.vs<"u"&&delete n.paths.vs,typeof n.trustedTypesPolicy<"u"&&delete n.trustedTypesPolicy,n.catchError=!0,globalThis.require.config(n)),new Promise((l,u)=>{const c=globalThis.require;c([i],d=>{if(this._requestHandler=d.create(o),!this._requestHandler){u(new Error("No RequestHandler!"));return}l(yn(this._requestHandler))},u)}))}}class Be{constructor(t,n,i,r){this.originalStart=t,this.originalLength=n,this.modifiedStart=i,this.modifiedLength=r}getOriginalEnd(){return this.originalStart+this.originalLength}getModifiedEnd(){return this.modifiedStart+this.modifiedLength}}function xi(e,t){return(t<<5)-t+e|0}function to(e,t){t=xi(149417,t);for(let n=0,i=e.length;n<i;n++)t=xi(e.charCodeAt(n),t);return t}class Ti{constructor(t){this.source=t}getElements(){const t=this.source,n=new Int32Array(t.length);for(let i=0,r=t.length;i<r;i++)n[i]=t.charCodeAt(i);return n}}function no(e,t,n){return new qe(new Ti(e),new Ti(t)).ComputeDiff(n).changes}class ut{static Assert(t,n){if(!t)throw new Error(n)}}class ct{static Copy(t,n,i,r,a){for(let s=0;s<a;s++)i[r+s]=t[n+s]}static Copy2(t,n,i,r,a){for(let s=0;s<a;s++)i[r+s]=t[n+s]}}class ki{constructor(){this.m_changes=[],this.m_originalStart=1073741824,this.m_modifiedStart=1073741824,this.m_originalCount=0,this.m_modifiedCount=0}MarkNextChange(){(this.m_originalCount>0||this.m_modifiedCount>0)&&this.m_changes.push(new Be(this.m_originalStart,this.m_originalCount,this.m_modifiedStart,this.m_modifiedCount)),this.m_originalCount=0,this.m_modifiedCount=0,this.m_originalStart=1073741824,this.m_modifiedStart=1073741824}AddOriginalElement(t,n){this.m_originalStart=Math.min(this.m_originalStart,t),this.m_modifiedStart=Math.min(this.m_modifiedStart,n),this.m_originalCount++}AddModifiedElement(t,n){this.m_originalStart=Math.min(this.m_originalStart,t),this.m_modifiedStart=Math.min(this.m_modifiedStart,n),this.m_modifiedCount++}getChanges(){return(this.m_originalCount>0||this.m_modifiedCount>0)&&this.MarkNextChange(),this.m_changes}getReverseChanges(){return(this.m_originalCount>0||this.m_modifiedCount>0)&&this.MarkNextChange(),this.m_changes.reverse(),this.m_changes}}class qe{constructor(t,n,i=null){this.ContinueProcessingPredicate=i,this._originalSequence=t,this._modifiedSequence=n;const[r,a,s]=qe._getElements(t),[o,l,u]=qe._getElements(n);this._hasStrings=s&&u,this._originalStringElements=r,this._originalElementsOrHash=a,this._modifiedStringElements=o,this._modifiedElementsOrHash=l,this.m_forwardHistory=[],this.m_reverseHistory=[]}static _isStringArray(t){return t.length>0&&typeof t[0]=="string"}static _getElements(t){const n=t.getElements();if(qe._isStringArray(n)){const i=new Int32Array(n.length);for(let r=0,a=n.length;r<a;r++)i[r]=to(n[r],0);return[n,i,!0]}return n instanceof Int32Array?[[],n,!1]:[[],new Int32Array(n),!1]}ElementsAreEqual(t,n){return this._originalElementsOrHash[t]!==this._modifiedElementsOrHash[n]?!1:this._hasStrings?this._originalStringElements[t]===this._modifiedStringElements[n]:!0}ElementsAreStrictEqual(t,n){if(!this.ElementsAreEqual(t,n))return!1;const i=qe._getStrictElement(this._originalSequence,t),r=qe._getStrictElement(this._modifiedSequence,n);return i===r}static _getStrictElement(t,n){return typeof t.getStrictElement=="function"?t.getStrictElement(n):null}OriginalElementsAreEqual(t,n){return this._originalElementsOrHash[t]!==this._originalElementsOrHash[n]?!1:this._hasStrings?this._originalStringElements[t]===this._originalStringElements[n]:!0}ModifiedElementsAreEqual(t,n){return this._modifiedElementsOrHash[t]!==this._modifiedElementsOrHash[n]?!1:this._hasStrings?this._modifiedStringElements[t]===this._modifiedStringElements[n]:!0}ComputeDiff(t){return this._ComputeDiff(0,this._originalElementsOrHash.length-1,0,this._modifiedElementsOrHash.length-1,t)}_ComputeDiff(t,n,i,r,a){const s=[!1];let o=this.ComputeDiffRecursive(t,n,i,r,s);return a&&(o=this.PrettifyChanges(o)),{quitEarly:s[0],changes:o}}ComputeDiffRecursive(t,n,i,r,a){for(a[0]=!1;t<=n&&i<=r&&this.ElementsAreEqual(t,i);)t++,i++;for(;n>=t&&r>=i&&this.ElementsAreEqual(n,r);)n--,r--;if(t>n||i>r){let d;return i<=r?(ut.Assert(t===n+1,"originalStart should only be one more than originalEnd"),d=[new Be(t,0,i,r-i+1)]):t<=n?(ut.Assert(i===r+1,"modifiedStart should only be one more than modifiedEnd"),d=[new Be(t,n-t+1,i,0)]):(ut.Assert(t===n+1,"originalStart should only be one more than originalEnd"),ut.Assert(i===r+1,"modifiedStart should only be one more than modifiedEnd"),d=[]),d}const s=[0],o=[0],l=this.ComputeRecursionPoint(t,n,i,r,s,o,a),u=s[0],c=o[0];if(l!==null)return l;if(!a[0]){const d=this.ComputeDiffRecursive(t,u,i,c,a);let m=[];return a[0]?m=[new Be(u+1,n-(u+1)+1,c+1,r-(c+1)+1)]:m=this.ComputeDiffRecursive(u+1,n,c+1,r,a),this.ConcatenateChanges(d,m)}return[new Be(t,n-t+1,i,r-i+1)]}WALKTRACE(t,n,i,r,a,s,o,l,u,c,d,m,f,b,p,w,x,_){let y=null,E=null,R=new ki,P=n,v=i,g=f[0]-w[0]-r,T=-1073741824,q=this.m_forwardHistory.length-1;do{const S=g+t;S===P||S<v&&u[S-1]<u[S+1]?(d=u[S+1],b=d-g-r,d<T&&R.MarkNextChange(),T=d,R.AddModifiedElement(d+1,b),g=S+1-t):(d=u[S-1]+1,b=d-g-r,d<T&&R.MarkNextChange(),T=d-1,R.AddOriginalElement(d,b+1),g=S-1-t),q>=0&&(u=this.m_forwardHistory[q],t=u[0],P=1,v=u.length-1)}while(--q>=-1);if(y=R.getReverseChanges(),_[0]){let S=f[0]+1,k=w[0]+1;if(y!==null&&y.length>0){const N=y[y.length-1];S=Math.max(S,N.getOriginalEnd()),k=Math.max(k,N.getModifiedEnd())}E=[new Be(S,m-S+1,k,p-k+1)]}else{R=new ki,P=s,v=o,g=f[0]-w[0]-l,T=1073741824,q=x?this.m_reverseHistory.length-1:this.m_reverseHistory.length-2;do{const S=g+a;S===P||S<v&&c[S-1]>=c[S+1]?(d=c[S+1]-1,b=d-g-l,d>T&&R.MarkNextChange(),T=d+1,R.AddOriginalElement(d+1,b+1),g=S+1-a):(d=c[S-1],b=d-g-l,d>T&&R.MarkNextChange(),T=d,R.AddModifiedElement(d+1,b+1),g=S-1-a),q>=0&&(c=this.m_reverseHistory[q],a=c[0],P=1,v=c.length-1)}while(--q>=-1);E=R.getChanges()}return this.ConcatenateChanges(y,E)}ComputeRecursionPoint(t,n,i,r,a,s,o){let l=0,u=0,c=0,d=0,m=0,f=0;t--,i--,a[0]=0,s[0]=0,this.m_forwardHistory=[],this.m_reverseHistory=[];const b=n-t+(r-i),p=b+1,w=new Int32Array(p),x=new Int32Array(p),_=r-i,y=n-t,E=t-i,R=n-r,v=(y-_)%2===0;w[_]=t,x[y]=n,o[0]=!1;for(let g=1;g<=b/2+1;g++){let T=0,q=0;c=this.ClipDiagonalBound(_-g,g,_,p),d=this.ClipDiagonalBound(_+g,g,_,p);for(let k=c;k<=d;k+=2){k===c||k<d&&w[k-1]<w[k+1]?l=w[k+1]:l=w[k-1]+1,u=l-(k-_)-E;const N=l;for(;l<n&&u<r&&this.ElementsAreEqual(l+1,u+1);)l++,u++;if(w[k]=l,l+u>T+q&&(T=l,q=u),!v&&Math.abs(k-y)<=g-1&&l>=x[k])return a[0]=l,s[0]=u,N<=x[k]&&g<=1448?this.WALKTRACE(_,c,d,E,y,m,f,R,w,x,l,n,a,u,r,s,v,o):null}const S=(T-t+(q-i)-g)/2;if(this.ContinueProcessingPredicate!==null&&!this.ContinueProcessingPredicate(T,S))return o[0]=!0,a[0]=T,s[0]=q,S>0&&g<=1448?this.WALKTRACE(_,c,d,E,y,m,f,R,w,x,l,n,a,u,r,s,v,o):(t++,i++,[new Be(t,n-t+1,i,r-i+1)]);m=this.ClipDiagonalBound(y-g,g,y,p),f=this.ClipDiagonalBound(y+g,g,y,p);for(let k=m;k<=f;k+=2){k===m||k<f&&x[k-1]>=x[k+1]?l=x[k+1]-1:l=x[k-1],u=l-(k-y)-R;const N=l;for(;l>t&&u>i&&this.ElementsAreEqual(l,u);)l--,u--;if(x[k]=l,v&&Math.abs(k-_)<=g&&l<=w[k])return a[0]=l,s[0]=u,N>=w[k]&&g<=1448?this.WALKTRACE(_,c,d,E,y,m,f,R,w,x,l,n,a,u,r,s,v,o):null}if(g<=1447){let k=new Int32Array(d-c+2);k[0]=_-c+1,ct.Copy2(w,c,k,1,d-c+1),this.m_forwardHistory.push(k),k=new Int32Array(f-m+2),k[0]=y-m+1,ct.Copy2(x,m,k,1,f-m+1),this.m_reverseHistory.push(k)}}return this.WALKTRACE(_,c,d,E,y,m,f,R,w,x,l,n,a,u,r,s,v,o)}PrettifyChanges(t){for(let n=0;n<t.length;n++){const i=t[n],r=n<t.length-1?t[n+1].originalStart:this._originalElementsOrHash.length,a=n<t.length-1?t[n+1].modifiedStart:this._modifiedElementsOrHash.length,s=i.originalLength>0,o=i.modifiedLength>0;for(;i.originalStart+i.originalLength<r&&i.modifiedStart+i.modifiedLength<a&&(!s||this.OriginalElementsAreEqual(i.originalStart,i.originalStart+i.originalLength))&&(!o||this.ModifiedElementsAreEqual(i.modifiedStart,i.modifiedStart+i.modifiedLength));){const u=this.ElementsAreStrictEqual(i.originalStart,i.modifiedStart);if(this.ElementsAreStrictEqual(i.originalStart+i.originalLength,i.modifiedStart+i.modifiedLength)&&!u)break;i.originalStart++,i.modifiedStart++}const l=[null];if(n<t.length-1&&this.ChangesOverlap(t[n],t[n+1],l)){t[n]=l[0],t.splice(n+1,1),n--;continue}}for(let n=t.length-1;n>=0;n--){const i=t[n];let r=0,a=0;if(n>0){const d=t[n-1];r=d.originalStart+d.originalLength,a=d.modifiedStart+d.modifiedLength}const s=i.originalLength>0,o=i.modifiedLength>0;let l=0,u=this._boundaryScore(i.originalStart,i.originalLength,i.modifiedStart,i.modifiedLength);for(let d=1;;d++){const m=i.originalStart-d,f=i.modifiedStart-d;if(m<r||f<a||s&&!this.OriginalElementsAreEqual(m,m+i.originalLength)||o&&!this.ModifiedElementsAreEqual(f,f+i.modifiedLength))break;const p=(m===r&&f===a?5:0)+this._boundaryScore(m,i.originalLength,f,i.modifiedLength);p>u&&(u=p,l=d)}i.originalStart-=l,i.modifiedStart-=l;const c=[null];if(n>0&&this.ChangesOverlap(t[n-1],t[n],c)){t[n-1]=c[0],t.splice(n,1),n++;continue}}if(this._hasStrings)for(let n=1,i=t.length;n<i;n++){const r=t[n-1],a=t[n],s=a.originalStart-r.originalStart-r.originalLength,o=r.originalStart,l=a.originalStart+a.originalLength,u=l-o,c=r.modifiedStart,d=a.modifiedStart+a.modifiedLength,m=d-c;if(s<5&&u<20&&m<20){const f=this._findBetterContiguousSequence(o,u,c,m,s);if(f){const[b,p]=f;(b!==r.originalStart+r.originalLength||p!==r.modifiedStart+r.modifiedLength)&&(r.originalLength=b-r.originalStart,r.modifiedLength=p-r.modifiedStart,a.originalStart=b+s,a.modifiedStart=p+s,a.originalLength=l-a.originalStart,a.modifiedLength=d-a.modifiedStart)}}}return t}_findBetterContiguousSequence(t,n,i,r,a){if(n<a||r<a)return null;const s=t+n-a+1,o=i+r-a+1;let l=0,u=0,c=0;for(let d=t;d<s;d++)for(let m=i;m<o;m++){const f=this._contiguousSequenceScore(d,m,a);f>0&&f>l&&(l=f,u=d,c=m)}return l>0?[u,c]:null}_contiguousSequenceScore(t,n,i){let r=0;for(let a=0;a<i;a++){if(!this.ElementsAreEqual(t+a,n+a))return 0;r+=this._originalStringElements[t+a].length}return r}_OriginalIsBoundary(t){return t<=0||t>=this._originalElementsOrHash.length-1?!0:this._hasStrings&&/^\s*$/.test(this._originalStringElements[t])}_OriginalRegionIsBoundary(t,n){if(this._OriginalIsBoundary(t)||this._OriginalIsBoundary(t-1))return!0;if(n>0){const i=t+n;if(this._OriginalIsBoundary(i-1)||this._OriginalIsBoundary(i))return!0}return!1}_ModifiedIsBoundary(t){return t<=0||t>=this._modifiedElementsOrHash.length-1?!0:this._hasStrings&&/^\s*$/.test(this._modifiedStringElements[t])}_ModifiedRegionIsBoundary(t,n){if(this._ModifiedIsBoundary(t)||this._ModifiedIsBoundary(t-1))return!0;if(n>0){const i=t+n;if(this._ModifiedIsBoundary(i-1)||this._ModifiedIsBoundary(i))return!0}return!1}_boundaryScore(t,n,i,r){const a=this._OriginalRegionIsBoundary(t,n)?1:0,s=this._ModifiedRegionIsBoundary(i,r)?1:0;return a+s}ConcatenateChanges(t,n){const i=[];if(t.length===0||n.length===0)return n.length>0?n:t;if(this.ChangesOverlap(t[t.length-1],n[0],i)){const r=new Array(t.length+n.length-1);return ct.Copy(t,0,r,0,t.length-1),r[t.length-1]=i[0],ct.Copy(n,1,r,t.length,n.length-1),r}else{const r=new Array(t.length+n.length);return ct.Copy(t,0,r,0,t.length),ct.Copy(n,0,r,t.length,n.length),r}}ChangesOverlap(t,n,i){if(ut.Assert(t.originalStart<=n.originalStart,"Left change is not less than or equal to right change"),ut.Assert(t.modifiedStart<=n.modifiedStart,"Left change is not less than or equal to right change"),t.originalStart+t.originalLength>=n.originalStart||t.modifiedStart+t.modifiedLength>=n.modifiedStart){const r=t.originalStart;let a=t.originalLength;const s=t.modifiedStart;let o=t.modifiedLength;return t.originalStart+t.originalLength>=n.originalStart&&(a=n.originalStart+n.originalLength-t.originalStart),t.modifiedStart+t.modifiedLength>=n.modifiedStart&&(o=n.modifiedStart+n.modifiedLength-t.modifiedStart),i[0]=new Be(r,a,s,o),!0}else return i[0]=null,!1}ClipDiagonalBound(t,n,i,r){if(t>=0&&t<r)return t;const a=i,s=r-i-1,o=n%2===0;if(t<0){const l=a%2===0;return o===l?0:1}else{const l=s%2===0;return o===l?r-1:r-2}}}var Ai={ENV_TYPE:"local",NODE_ENV:"production"};let ht;const En=globalThis.vscode;if(typeof En<"u"&&typeof En.process<"u"){const e=En.process;ht={get platform(){return e.platform},get arch(){return e.arch},get env(){return e.env},cwd(){return e.cwd()}}}else typeof process<"u"?ht={get platform(){return process.platform},get arch(){return process.arch},get env(){return Ai},cwd(){return Ai.VSCODE_CWD||process.cwd()}}:ht={get platform(){return xt?"win32":Is?"darwin":"linux"},get arch(){},get env(){return{}},cwd(){return"/"}};const qt=ht.cwd,io=ht.env,ro=ht.platform,ao=65,so=97,oo=90,lo=122,Oe=46,ue=47,pe=92,Ve=58,uo=63;class Si extends Error{constructor(t,n,i){let r;typeof n=="string"&&n.indexOf("not ")===0?(r="must not be",n=n.replace(/^not /,"")):r="must be";const a=t.indexOf(".")!==-1?"property":"argument";let s=`The "${t}" ${a} ${r} of type ${n}`;s+=`. Received type ${typeof i}`,super(s),this.code="ERR_INVALID_ARG_TYPE"}}function co(e,t){if(e===null||typeof e!="object")throw new Si(t,"Object",e)}function ie(e,t){if(typeof e!="string")throw new Si(t,"string",e)}const je=ro==="win32";function j(e){return e===ue||e===pe}function Rn(e){return e===ue}function Ge(e){return e>=ao&&e<=oo||e>=so&&e<=lo}function Ot(e,t,n,i){let r="",a=0,s=-1,o=0,l=0;for(let u=0;u<=e.length;++u){if(u<e.length)l=e.charCodeAt(u);else{if(i(l))break;l=ue}if(i(l)){if(!(s===u-1||o===1))if(o===2){if(r.length<2||a!==2||r.charCodeAt(r.length-1)!==Oe||r.charCodeAt(r.length-2)!==Oe){if(r.length>2){const c=r.lastIndexOf(n);c===-1?(r="",a=0):(r=r.slice(0,c),a=r.length-1-r.lastIndexOf(n)),s=u,o=0;continue}else if(r.length!==0){r="",a=0,s=u,o=0;continue}}t&&(r+=r.length>0?`${n}..`:"..",a=2)}else r.length>0?r+=`${n}${e.slice(s+1,u)}`:r=e.slice(s+1,u),a=u-s-1;s=u,o=0}else l===Oe&&o!==-1?++o:o=-1}return r}function Li(e,t){co(t,"pathObject");const n=t.dir||t.root,i=t.base||`${t.name||""}${t.ext||""}`;return n?n===t.root?`${n}${i}`:`${n}${e}${i}`:i}const me={resolve(...e){let t="",n="",i=!1;for(let r=e.length-1;r>=-1;r--){let a;if(r>=0){if(a=e[r],ie(a,"path"),a.length===0)continue}else t.length===0?a=qt():(a=io[`=${t}`]||qt(),(a===void 0||a.slice(0,2).toLowerCase()!==t.toLowerCase()&&a.charCodeAt(2)===pe)&&(a=`${t}\\`));const s=a.length;let o=0,l="",u=!1;const c=a.charCodeAt(0);if(s===1)j(c)&&(o=1,u=!0);else if(j(c))if(u=!0,j(a.charCodeAt(1))){let d=2,m=d;for(;d<s&&!j(a.charCodeAt(d));)d++;if(d<s&&d!==m){const f=a.slice(m,d);for(m=d;d<s&&j(a.charCodeAt(d));)d++;if(d<s&&d!==m){for(m=d;d<s&&!j(a.charCodeAt(d));)d++;(d===s||d!==m)&&(l=`\\\\${f}\\${a.slice(m,d)}`,o=d)}}}else o=1;else Ge(c)&&a.charCodeAt(1)===Ve&&(l=a.slice(0,2),o=2,s>2&&j(a.charCodeAt(2))&&(u=!0,o=3));if(l.length>0)if(t.length>0){if(l.toLowerCase()!==t.toLowerCase())continue}else t=l;if(i){if(t.length>0)break}else if(n=`${a.slice(o)}\\${n}`,i=u,u&&t.length>0)break}return n=Ot(n,!i,"\\",j),i?`${t}\\${n}`:`${t}${n}`||"."},normalize(e){ie(e,"path");const t=e.length;if(t===0)return".";let n=0,i,r=!1;const a=e.charCodeAt(0);if(t===1)return Rn(a)?"\\":e;if(j(a))if(r=!0,j(e.charCodeAt(1))){let o=2,l=o;for(;o<t&&!j(e.charCodeAt(o));)o++;if(o<t&&o!==l){const u=e.slice(l,o);for(l=o;o<t&&j(e.charCodeAt(o));)o++;if(o<t&&o!==l){for(l=o;o<t&&!j(e.charCodeAt(o));)o++;if(o===t)return`\\\\${u}\\${e.slice(l)}\\`;o!==l&&(i=`\\\\${u}\\${e.slice(l,o)}`,n=o)}}}else n=1;else Ge(a)&&e.charCodeAt(1)===Ve&&(i=e.slice(0,2),n=2,t>2&&j(e.charCodeAt(2))&&(r=!0,n=3));let s=n<t?Ot(e.slice(n),!r,"\\",j):"";return s.length===0&&!r&&(s="."),s.length>0&&j(e.charCodeAt(t-1))&&(s+="\\"),i===void 0?r?`\\${s}`:s:r?`${i}\\${s}`:`${i}${s}`},isAbsolute(e){ie(e,"path");const t=e.length;if(t===0)return!1;const n=e.charCodeAt(0);return j(n)||t>2&&Ge(n)&&e.charCodeAt(1)===Ve&&j(e.charCodeAt(2))},join(...e){if(e.length===0)return".";let t,n;for(let a=0;a<e.length;++a){const s=e[a];ie(s,"path"),s.length>0&&(t===void 0?t=n=s:t+=`\\${s}`)}if(t===void 0)return".";let i=!0,r=0;if(typeof n=="string"&&j(n.charCodeAt(0))){++r;const a=n.length;a>1&&j(n.charCodeAt(1))&&(++r,a>2&&(j(n.charCodeAt(2))?++r:i=!1))}if(i){for(;r<t.length&&j(t.charCodeAt(r));)r++;r>=2&&(t=`\\${t.slice(r)}`)}return me.normalize(t)},relative(e,t){if(ie(e,"from"),ie(t,"to"),e===t)return"";const n=me.resolve(e),i=me.resolve(t);if(n===i||(e=n.toLowerCase(),t=i.toLowerCase(),e===t))return"";let r=0;for(;r<e.length&&e.charCodeAt(r)===pe;)r++;let a=e.length;for(;a-1>r&&e.charCodeAt(a-1)===pe;)a--;const s=a-r;let o=0;for(;o<t.length&&t.charCodeAt(o)===pe;)o++;let l=t.length;for(;l-1>o&&t.charCodeAt(l-1)===pe;)l--;const u=l-o,c=s<u?s:u;let d=-1,m=0;for(;m<c;m++){const b=e.charCodeAt(r+m);if(b!==t.charCodeAt(o+m))break;b===pe&&(d=m)}if(m!==c){if(d===-1)return i}else{if(u>c){if(t.charCodeAt(o+m)===pe)return i.slice(o+m+1);if(m===2)return i.slice(o+m)}s>c&&(e.charCodeAt(r+m)===pe?d=m:m===2&&(d=3)),d===-1&&(d=0)}let f="";for(m=r+d+1;m<=a;++m)(m===a||e.charCodeAt(m)===pe)&&(f+=f.length===0?"..":"\\..");return o+=d,f.length>0?`${f}${i.slice(o,l)}`:(i.charCodeAt(o)===pe&&++o,i.slice(o,l))},toNamespacedPath(e){if(typeof e!="string"||e.length===0)return e;const t=me.resolve(e);if(t.length<=2)return e;if(t.charCodeAt(0)===pe){if(t.charCodeAt(1)===pe){const n=t.charCodeAt(2);if(n!==uo&&n!==Oe)return`\\\\?\\UNC\\${t.slice(2)}`}}else if(Ge(t.charCodeAt(0))&&t.charCodeAt(1)===Ve&&t.charCodeAt(2)===pe)return`\\\\?\\${t}`;return e},dirname(e){ie(e,"path");const t=e.length;if(t===0)return".";let n=-1,i=0;const r=e.charCodeAt(0);if(t===1)return j(r)?e:".";if(j(r)){if(n=i=1,j(e.charCodeAt(1))){let o=2,l=o;for(;o<t&&!j(e.charCodeAt(o));)o++;if(o<t&&o!==l){for(l=o;o<t&&j(e.charCodeAt(o));)o++;if(o<t&&o!==l){for(l=o;o<t&&!j(e.charCodeAt(o));)o++;if(o===t)return e;o!==l&&(n=i=o+1)}}}}else Ge(r)&&e.charCodeAt(1)===Ve&&(n=t>2&&j(e.charCodeAt(2))?3:2,i=n);let a=-1,s=!0;for(let o=t-1;o>=i;--o)if(j(e.charCodeAt(o))){if(!s){a=o;break}}else s=!1;if(a===-1){if(n===-1)return".";a=n}return e.slice(0,a)},basename(e,t){t!==void 0&&ie(t,"ext"),ie(e,"path");let n=0,i=-1,r=!0,a;if(e.length>=2&&Ge(e.charCodeAt(0))&&e.charCodeAt(1)===Ve&&(n=2),t!==void 0&&t.length>0&&t.length<=e.length){if(t===e)return"";let s=t.length-1,o=-1;for(a=e.length-1;a>=n;--a){const l=e.charCodeAt(a);if(j(l)){if(!r){n=a+1;break}}else o===-1&&(r=!1,o=a+1),s>=0&&(l===t.charCodeAt(s)?--s===-1&&(i=a):(s=-1,i=o))}return n===i?i=o:i===-1&&(i=e.length),e.slice(n,i)}for(a=e.length-1;a>=n;--a)if(j(e.charCodeAt(a))){if(!r){n=a+1;break}}else i===-1&&(r=!1,i=a+1);return i===-1?"":e.slice(n,i)},extname(e){ie(e,"path");let t=0,n=-1,i=0,r=-1,a=!0,s=0;e.length>=2&&e.charCodeAt(1)===Ve&&Ge(e.charCodeAt(0))&&(t=i=2);for(let o=e.length-1;o>=t;--o){const l=e.charCodeAt(o);if(j(l)){if(!a){i=o+1;break}continue}r===-1&&(a=!1,r=o+1),l===Oe?n===-1?n=o:s!==1&&(s=1):n!==-1&&(s=-1)}return n===-1||r===-1||s===0||s===1&&n===r-1&&n===i+1?"":e.slice(n,r)},format:Li.bind(null,"\\"),parse(e){ie(e,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(e.length===0)return t;const n=e.length;let i=0,r=e.charCodeAt(0);if(n===1)return j(r)?(t.root=t.dir=e,t):(t.base=t.name=e,t);if(j(r)){if(i=1,j(e.charCodeAt(1))){let d=2,m=d;for(;d<n&&!j(e.charCodeAt(d));)d++;if(d<n&&d!==m){for(m=d;d<n&&j(e.charCodeAt(d));)d++;if(d<n&&d!==m){for(m=d;d<n&&!j(e.charCodeAt(d));)d++;d===n?i=d:d!==m&&(i=d+1)}}}}else if(Ge(r)&&e.charCodeAt(1)===Ve){if(n<=2)return t.root=t.dir=e,t;if(i=2,j(e.charCodeAt(2))){if(n===3)return t.root=t.dir=e,t;i=3}}i>0&&(t.root=e.slice(0,i));let a=-1,s=i,o=-1,l=!0,u=e.length-1,c=0;for(;u>=i;--u){if(r=e.charCodeAt(u),j(r)){if(!l){s=u+1;break}continue}o===-1&&(l=!1,o=u+1),r===Oe?a===-1?a=u:c!==1&&(c=1):a!==-1&&(c=-1)}return o!==-1&&(a===-1||c===0||c===1&&a===o-1&&a===s+1?t.base=t.name=e.slice(s,o):(t.name=e.slice(s,a),t.base=e.slice(s,o),t.ext=e.slice(a,o))),s>0&&s!==i?t.dir=e.slice(0,s-1):t.dir=t.root,t},sep:"\\",delimiter:";",win32:null,posix:null},ho=(()=>{if(je){const e=/\\/g;return()=>{const t=qt().replace(e,"/");return t.slice(t.indexOf("/"))}}return()=>qt()})(),ge={resolve(...e){let t="",n=!1;for(let i=e.length-1;i>=-1&&!n;i--){const r=i>=0?e[i]:ho();ie(r,"path"),r.length!==0&&(t=`${r}/${t}`,n=r.charCodeAt(0)===ue)}return t=Ot(t,!n,"/",Rn),n?`/${t}`:t.length>0?t:"."},normalize(e){if(ie(e,"path"),e.length===0)return".";const t=e.charCodeAt(0)===ue,n=e.charCodeAt(e.length-1)===ue;return e=Ot(e,!t,"/",Rn),e.length===0?t?"/":n?"./":".":(n&&(e+="/"),t?`/${e}`:e)},isAbsolute(e){return ie(e,"path"),e.length>0&&e.charCodeAt(0)===ue},join(...e){if(e.length===0)return".";let t;for(let n=0;n<e.length;++n){const i=e[n];ie(i,"path"),i.length>0&&(t===void 0?t=i:t+=`/${i}`)}return t===void 0?".":ge.normalize(t)},relative(e,t){if(ie(e,"from"),ie(t,"to"),e===t||(e=ge.resolve(e),t=ge.resolve(t),e===t))return"";const n=1,i=e.length,r=i-n,a=1,s=t.length-a,o=r<s?r:s;let l=-1,u=0;for(;u<o;u++){const d=e.charCodeAt(n+u);if(d!==t.charCodeAt(a+u))break;d===ue&&(l=u)}if(u===o)if(s>o){if(t.charCodeAt(a+u)===ue)return t.slice(a+u+1);if(u===0)return t.slice(a+u)}else r>o&&(e.charCodeAt(n+u)===ue?l=u:u===0&&(l=0));let c="";for(u=n+l+1;u<=i;++u)(u===i||e.charCodeAt(u)===ue)&&(c+=c.length===0?"..":"/..");return`${c}${t.slice(a+l)}`},toNamespacedPath(e){return e},dirname(e){if(ie(e,"path"),e.length===0)return".";const t=e.charCodeAt(0)===ue;let n=-1,i=!0;for(let r=e.length-1;r>=1;--r)if(e.charCodeAt(r)===ue){if(!i){n=r;break}}else i=!1;return n===-1?t?"/":".":t&&n===1?"//":e.slice(0,n)},basename(e,t){t!==void 0&&ie(t,"ext"),ie(e,"path");let n=0,i=-1,r=!0,a;if(t!==void 0&&t.length>0&&t.length<=e.length){if(t===e)return"";let s=t.length-1,o=-1;for(a=e.length-1;a>=0;--a){const l=e.charCodeAt(a);if(l===ue){if(!r){n=a+1;break}}else o===-1&&(r=!1,o=a+1),s>=0&&(l===t.charCodeAt(s)?--s===-1&&(i=a):(s=-1,i=o))}return n===i?i=o:i===-1&&(i=e.length),e.slice(n,i)}for(a=e.length-1;a>=0;--a)if(e.charCodeAt(a)===ue){if(!r){n=a+1;break}}else i===-1&&(r=!1,i=a+1);return i===-1?"":e.slice(n,i)},extname(e){ie(e,"path");let t=-1,n=0,i=-1,r=!0,a=0;for(let s=e.length-1;s>=0;--s){const o=e.charCodeAt(s);if(o===ue){if(!r){n=s+1;break}continue}i===-1&&(r=!1,i=s+1),o===Oe?t===-1?t=s:a!==1&&(a=1):t!==-1&&(a=-1)}return t===-1||i===-1||a===0||a===1&&t===i-1&&t===n+1?"":e.slice(t,i)},format:Li.bind(null,"/"),parse(e){ie(e,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(e.length===0)return t;const n=e.charCodeAt(0)===ue;let i;n?(t.root="/",i=1):i=0;let r=-1,a=0,s=-1,o=!0,l=e.length-1,u=0;for(;l>=i;--l){const c=e.charCodeAt(l);if(c===ue){if(!o){a=l+1;break}continue}s===-1&&(o=!1,s=l+1),c===Oe?r===-1?r=l:u!==1&&(u=1):r!==-1&&(u=-1)}if(s!==-1){const c=a===0&&n?1:a;r===-1||u===0||u===1&&r===s-1&&r===a+1?t.base=t.name=e.slice(c,s):(t.name=e.slice(c,r),t.base=e.slice(c,s),t.ext=e.slice(r,s))}return a>0?t.dir=e.slice(0,a-1):n&&(t.dir="/"),t},sep:"/",delimiter:":",win32:null,posix:null};ge.win32=me.win32=me,ge.posix=me.posix=ge,je?me.normalize:ge.normalize,je?me.resolve:ge.resolve,je?me.relative:ge.relative,je?me.dirname:ge.dirname,je?me.basename:ge.basename,je?me.extname:ge.extname,je?me.sep:ge.sep;const mo=/^\w[\w\d+.-]*$/,fo=/^\//,po=/^\/\//;function go(e,t){if(!e.scheme&&t)throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${e.authority}", path: "${e.path}", query: "${e.query}", fragment: "${e.fragment}"}`);if(e.scheme&&!mo.test(e.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(e.path){if(e.authority){if(!fo.test(e.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(po.test(e.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}}function bo(e,t){return!e&&!t?"file":e}function vo(e,t){switch(e){case"https":case"http":case"file":t?t[0]!==Le&&(t=Le+t):t=Le;break}return t}const ee="",Le="/",_o=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;let Mn=class gn{static isUri(t){return t instanceof gn?!0:t?typeof t.authority=="string"&&typeof t.fragment=="string"&&typeof t.path=="string"&&typeof t.query=="string"&&typeof t.scheme=="string"&&typeof t.fsPath=="string"&&typeof t.with=="function"&&typeof t.toString=="function":!1}constructor(t,n,i,r,a,s=!1){typeof t=="object"?(this.scheme=t.scheme||ee,this.authority=t.authority||ee,this.path=t.path||ee,this.query=t.query||ee,this.fragment=t.fragment||ee):(this.scheme=bo(t,s),this.authority=n||ee,this.path=vo(this.scheme,i||ee),this.query=r||ee,this.fragment=a||ee,go(this,s))}get fsPath(){return Dn(this,!1)}with(t){if(!t)return this;let{scheme:n,authority:i,path:r,query:a,fragment:s}=t;return n===void 0?n=this.scheme:n===null&&(n=ee),i===void 0?i=this.authority:i===null&&(i=ee),r===void 0?r=this.path:r===null&&(r=ee),a===void 0?a=this.query:a===null&&(a=ee),s===void 0?s=this.fragment:s===null&&(s=ee),n===this.scheme&&i===this.authority&&r===this.path&&a===this.query&&s===this.fragment?this:new dt(n,i,r,a,s)}static parse(t,n=!1){const i=_o.exec(t);return i?new dt(i[2]||ee,Vt(i[4]||ee),Vt(i[5]||ee),Vt(i[7]||ee),Vt(i[9]||ee),n):new dt(ee,ee,ee,ee,ee)}static file(t){let n=ee;if(xt&&(t=t.replace(/\\/g,Le)),t[0]===Le&&t[1]===Le){const i=t.indexOf(Le,2);i===-1?(n=t.substring(2),t=Le):(n=t.substring(2,i),t=t.substring(i)||Le)}return new dt("file",n,t,ee,ee)}static from(t,n){return new dt(t.scheme,t.authority,t.path,t.query,t.fragment,n)}static joinPath(t,...n){if(!t.path)throw new Error("[UriError]: cannot call joinPath on URI without path");let i;return xt&&t.scheme==="file"?i=gn.file(me.join(Dn(t,!0),...n)).path:i=ge.join(t.path,...n),t.with({path:i})}toString(t=!1){return Nn(this,t)}toJSON(){return this}static revive(t){var n,i;if(t){if(t instanceof gn)return t;{const r=new dt(t);return r._formatted=(n=t.external)!==null&&n!==void 0?n:null,r._fsPath=t._sep===Ci&&(i=t.fsPath)!==null&&i!==void 0?i:null,r}}else return t}};const Ci=xt?1:void 0;class dt extends Mn{constructor(){super(...arguments),this._formatted=null,this._fsPath=null}get fsPath(){return this._fsPath||(this._fsPath=Dn(this,!1)),this._fsPath}toString(t=!1){return t?Nn(this,!0):(this._formatted||(this._formatted=Nn(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=Ci),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const Ei={58:"%3A",47:"%2F",63:"%3F",35:"%23",91:"%5B",93:"%5D",64:"%40",33:"%21",36:"%24",38:"%26",39:"%27",40:"%28",41:"%29",42:"%2A",43:"%2B",44:"%2C",59:"%3B",61:"%3D",32:"%20"};function Ri(e,t,n){let i,r=-1;for(let a=0;a<e.length;a++){const s=e.charCodeAt(a);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||s===45||s===46||s===95||s===126||t&&s===47||n&&s===91||n&&s===93||n&&s===58)r!==-1&&(i+=encodeURIComponent(e.substring(r,a)),r=-1),i!==void 0&&(i+=e.charAt(a));else{i===void 0&&(i=e.substr(0,a));const o=Ei[s];o!==void 0?(r!==-1&&(i+=encodeURIComponent(e.substring(r,a)),r=-1),i+=o):r===-1&&(r=a)}}return r!==-1&&(i+=encodeURIComponent(e.substring(r))),i!==void 0?i:e}function wo(e){let t;for(let n=0;n<e.length;n++){const i=e.charCodeAt(n);i===35||i===63?(t===void 0&&(t=e.substr(0,n)),t+=Ei[i]):t!==void 0&&(t+=e[n])}return t!==void 0?t:e}function Dn(e,t){let n;return e.authority&&e.path.length>1&&e.scheme==="file"?n=`//${e.authority}${e.path}`:e.path.charCodeAt(0)===47&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&e.path.charCodeAt(2)===58?t?n=e.path.substr(1):n=e.path[1].toLowerCase()+e.path.substr(2):n=e.path,xt&&(n=n.replace(/\//g,"\\")),n}function Nn(e,t){const n=t?wo:Ri;let i="",{scheme:r,authority:a,path:s,query:o,fragment:l}=e;if(r&&(i+=r,i+=":"),(a||r==="file")&&(i+=Le,i+=Le),a){let u=a.indexOf("@");if(u!==-1){const c=a.substr(0,u);a=a.substr(u+1),u=c.lastIndexOf(":"),u===-1?i+=n(c,!1,!1):(i+=n(c.substr(0,u),!1,!1),i+=":",i+=n(c.substr(u+1),!1,!0)),i+="@"}a=a.toLowerCase(),u=a.lastIndexOf(":"),u===-1?i+=n(a,!1,!0):(i+=n(a.substr(0,u),!1,!0),i+=a.substr(u))}if(s){if(s.length>=3&&s.charCodeAt(0)===47&&s.charCodeAt(2)===58){const u=s.charCodeAt(1);u>=65&&u<=90&&(s=`/${String.fromCharCode(u+32)}:${s.substr(3)}`)}else if(s.length>=2&&s.charCodeAt(1)===58){const u=s.charCodeAt(0);u>=65&&u<=90&&(s=`${String.fromCharCode(u+32)}:${s.substr(2)}`)}i+=n(s,!0,!1)}return o&&(i+="?",i+=n(o,!1,!1)),l&&(i+="#",i+=t?l:Ri(l,!1,!1)),i}function Mi(e){try{return decodeURIComponent(e)}catch{return e.length>3?e.substr(0,3)+Mi(e.substr(3)):e}}const Di=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function Vt(e){return e.match(Di)?e.replace(Di,t=>Mi(t)):e}let Ne=class it{constructor(t,n){this.lineNumber=t,this.column=n}with(t=this.lineNumber,n=this.column){return t===this.lineNumber&&n===this.column?this:new it(t,n)}delta(t=0,n=0){return this.with(this.lineNumber+t,this.column+n)}equals(t){return it.equals(this,t)}static equals(t,n){return!t&&!n?!0:!!t&&!!n&&t.lineNumber===n.lineNumber&&t.column===n.column}isBefore(t){return it.isBefore(this,t)}static isBefore(t,n){return t.lineNumber<n.lineNumber?!0:n.lineNumber<t.lineNumber?!1:t.column<n.column}isBeforeOrEqual(t){return it.isBeforeOrEqual(this,t)}static isBeforeOrEqual(t,n){return t.lineNumber<n.lineNumber?!0:n.lineNumber<t.lineNumber?!1:t.column<=n.column}static compare(t,n){const i=t.lineNumber|0,r=n.lineNumber|0;if(i===r){const a=t.column|0,s=n.column|0;return a-s}return i-r}clone(){return new it(this.lineNumber,this.column)}toString(){return"("+this.lineNumber+","+this.column+")"}static lift(t){return new it(t.lineNumber,t.column)}static isIPosition(t){return t&&typeof t.lineNumber=="number"&&typeof t.column=="number"}toJSON(){return{lineNumber:this.lineNumber,column:this.column}}},oe=class re{constructor(t,n,i,r){t>i||t===i&&n>r?(this.startLineNumber=i,this.startColumn=r,this.endLineNumber=t,this.endColumn=n):(this.startLineNumber=t,this.startColumn=n,this.endLineNumber=i,this.endColumn=r)}isEmpty(){return re.isEmpty(this)}static isEmpty(t){return t.startLineNumber===t.endLineNumber&&t.startColumn===t.endColumn}containsPosition(t){return re.containsPosition(this,t)}static containsPosition(t,n){return!(n.lineNumber<t.startLineNumber||n.lineNumber>t.endLineNumber||n.lineNumber===t.startLineNumber&&n.column<t.startColumn||n.lineNumber===t.endLineNumber&&n.column>t.endColumn)}static strictContainsPosition(t,n){return!(n.lineNumber<t.startLineNumber||n.lineNumber>t.endLineNumber||n.lineNumber===t.startLineNumber&&n.column<=t.startColumn||n.lineNumber===t.endLineNumber&&n.column>=t.endColumn)}containsRange(t){return re.containsRange(this,t)}static containsRange(t,n){return!(n.startLineNumber<t.startLineNumber||n.endLineNumber<t.startLineNumber||n.startLineNumber>t.endLineNumber||n.endLineNumber>t.endLineNumber||n.startLineNumber===t.startLineNumber&&n.startColumn<t.startColumn||n.endLineNumber===t.endLineNumber&&n.endColumn>t.endColumn)}strictContainsRange(t){return re.strictContainsRange(this,t)}static strictContainsRange(t,n){return!(n.startLineNumber<t.startLineNumber||n.endLineNumber<t.startLineNumber||n.startLineNumber>t.endLineNumber||n.endLineNumber>t.endLineNumber||n.startLineNumber===t.startLineNumber&&n.startColumn<=t.startColumn||n.endLineNumber===t.endLineNumber&&n.endColumn>=t.endColumn)}plusRange(t){return re.plusRange(this,t)}static plusRange(t,n){let i,r,a,s;return n.startLineNumber<t.startLineNumber?(i=n.startLineNumber,r=n.startColumn):n.startLineNumber===t.startLineNumber?(i=n.startLineNumber,r=Math.min(n.startColumn,t.startColumn)):(i=t.startLineNumber,r=t.startColumn),n.endLineNumber>t.endLineNumber?(a=n.endLineNumber,s=n.endColumn):n.endLineNumber===t.endLineNumber?(a=n.endLineNumber,s=Math.max(n.endColumn,t.endColumn)):(a=t.endLineNumber,s=t.endColumn),new re(i,r,a,s)}intersectRanges(t){return re.intersectRanges(this,t)}static intersectRanges(t,n){let i=t.startLineNumber,r=t.startColumn,a=t.endLineNumber,s=t.endColumn;const o=n.startLineNumber,l=n.startColumn,u=n.endLineNumber,c=n.endColumn;return i<o?(i=o,r=l):i===o&&(r=Math.max(r,l)),a>u?(a=u,s=c):a===u&&(s=Math.min(s,c)),i>a||i===a&&r>s?null:new re(i,r,a,s)}equalsRange(t){return re.equalsRange(this,t)}static equalsRange(t,n){return!t&&!n?!0:!!t&&!!n&&t.startLineNumber===n.startLineNumber&&t.startColumn===n.startColumn&&t.endLineNumber===n.endLineNumber&&t.endColumn===n.endColumn}getEndPosition(){return re.getEndPosition(this)}static getEndPosition(t){return new Ne(t.endLineNumber,t.endColumn)}getStartPosition(){return re.getStartPosition(this)}static getStartPosition(t){return new Ne(t.startLineNumber,t.startColumn)}toString(){return"["+this.startLineNumber+","+this.startColumn+" -> "+this.endLineNumber+","+this.endColumn+"]"}setEndPosition(t,n){return new re(this.startLineNumber,this.startColumn,t,n)}setStartPosition(t,n){return new re(t,n,this.endLineNumber,this.endColumn)}collapseToStart(){return re.collapseToStart(this)}static collapseToStart(t){return new re(t.startLineNumber,t.startColumn,t.startLineNumber,t.startColumn)}collapseToEnd(){return re.collapseToEnd(this)}static collapseToEnd(t){return new re(t.endLineNumber,t.endColumn,t.endLineNumber,t.endColumn)}delta(t){return new re(this.startLineNumber+t,this.startColumn,this.endLineNumber+t,this.endColumn)}static fromPositions(t,n=t){return new re(t.lineNumber,t.column,n.lineNumber,n.column)}static lift(t){return t?new re(t.startLineNumber,t.startColumn,t.endLineNumber,t.endColumn):null}static isIRange(t){return t&&typeof t.startLineNumber=="number"&&typeof t.startColumn=="number"&&typeof t.endLineNumber=="number"&&typeof t.endColumn=="number"}static areIntersectingOrTouching(t,n){return!(t.endLineNumber<n.startLineNumber||t.endLineNumber===n.startLineNumber&&t.endColumn<n.startColumn||n.endLineNumber<t.startLineNumber||n.endLineNumber===t.startLineNumber&&n.endColumn<t.startColumn)}static areIntersecting(t,n){return!(t.endLineNumber<n.startLineNumber||t.endLineNumber===n.startLineNumber&&t.endColumn<=n.startColumn||n.endLineNumber<t.startLineNumber||n.endLineNumber===t.startLineNumber&&n.endColumn<=t.startColumn)}static compareRangesUsingStarts(t,n){if(t&&n){const a=t.startLineNumber|0,s=n.startLineNumber|0;if(a===s){const o=t.startColumn|0,l=n.startColumn|0;if(o===l){const u=t.endLineNumber|0,c=n.endLineNumber|0;if(u===c){const d=t.endColumn|0,m=n.endColumn|0;return d-m}return u-c}return o-l}return a-s}return(t?1:0)-(n?1:0)}static compareRangesUsingEnds(t,n){return t.endLineNumber===n.endLineNumber?t.endColumn===n.endColumn?t.startLineNumber===n.startLineNumber?t.startColumn-n.startColumn:t.startLineNumber-n.startLineNumber:t.endColumn-n.endColumn:t.endLineNumber-n.endLineNumber}static spansMultipleLines(t){return t.endLineNumber>t.startLineNumber}toJSON(){return this}};function yo(e,t,n=(i,r)=>i===r){if(e===t)return!0;if(!e||!t||e.length!==t.length)return!1;for(let i=0,r=e.length;i<r;i++)if(!n(e[i],t[i]))return!1;return!0}function*xo(e,t){let n,i;for(const r of e)i!==void 0&&t(i,r)?n.push(r):(n&&(yield n),n=[r]),i=r;n&&(yield n)}function To(e,t){for(let n=0;n<=e.length;n++)t(n===0?void 0:e[n-1],n===e.length?void 0:e[n])}function ko(e,t){for(let n=0;n<e.length;n++)t(n===0?void 0:e[n-1],e[n],n+1===e.length?void 0:e[n+1])}function Ao(e,t){for(const n of t)e.push(n)}var Ni;(function(e){function t(a){return a<0}e.isLessThan=t;function n(a){return a<=0}e.isLessThanOrEqual=n;function i(a){return a>0}e.isGreaterThan=i;function r(a){return a===0}e.isNeitherLessOrGreaterThan=r,e.greaterThan=1,e.lessThan=-1,e.neitherLessOrGreaterThan=0})(Ni||(Ni={}));function jt(e,t){return(n,i)=>t(e(n),e(i))}const Gt=(e,t)=>e-t;function So(e){return(t,n)=>-e(t,n)}function Ii(e){return e<0?0:e>255?255:e|0}function mt(e){return e<0?0:e>4294967295?4294967295:e|0}class Lo{constructor(t){this.values=t,this.prefixSum=new Uint32Array(t.length),this.prefixSumValidIndex=new Int32Array(1),this.prefixSumValidIndex[0]=-1}insertValues(t,n){t=mt(t);const i=this.values,r=this.prefixSum,a=n.length;return a===0?!1:(this.values=new Uint32Array(i.length+a),this.values.set(i.subarray(0,t),0),this.values.set(i.subarray(t),t+a),this.values.set(n,t),t-1<this.prefixSumValidIndex[0]&&(this.prefixSumValidIndex[0]=t-1),this.prefixSum=new Uint32Array(this.values.length),this.prefixSumValidIndex[0]>=0&&this.prefixSum.set(r.subarray(0,this.prefixSumValidIndex[0]+1)),!0)}setValue(t,n){return t=mt(t),n=mt(n),this.values[t]===n?!1:(this.values[t]=n,t-1<this.prefixSumValidIndex[0]&&(this.prefixSumValidIndex[0]=t-1),!0)}removeValues(t,n){t=mt(t),n=mt(n);const i=this.values,r=this.prefixSum;if(t>=i.length)return!1;const a=i.length-t;return n>=a&&(n=a),n===0?!1:(this.values=new Uint32Array(i.length-n),this.values.set(i.subarray(0,t),0),this.values.set(i.subarray(t+n),t),this.prefixSum=new Uint32Array(this.values.length),t-1<this.prefixSumValidIndex[0]&&(this.prefixSumValidIndex[0]=t-1),this.prefixSumValidIndex[0]>=0&&this.prefixSum.set(r.subarray(0,this.prefixSumValidIndex[0]+1)),!0)}getTotalSum(){return this.values.length===0?0:this._getPrefixSum(this.values.length-1)}getPrefixSum(t){return t<0?0:(t=mt(t),this._getPrefixSum(t))}_getPrefixSum(t){if(t<=this.prefixSumValidIndex[0])return this.prefixSum[t];let n=this.prefixSumValidIndex[0]+1;n===0&&(this.prefixSum[0]=this.values[0],n++),t>=this.values.length&&(t=this.values.length-1);for(let i=n;i<=t;i++)this.prefixSum[i]=this.prefixSum[i-1]+this.values[i];return this.prefixSumValidIndex[0]=Math.max(this.prefixSumValidIndex[0],t),this.prefixSum[t]}getIndexOf(t){t=Math.floor(t),this.getTotalSum();let n=0,i=this.values.length-1,r=0,a=0,s=0;for(;n<=i;)if(r=n+(i-n)/2|0,a=this.prefixSum[r],s=a-this.values[r],t<s)i=r-1;else if(t>=a)n=r+1;else break;return new Co(r,t-s)}}class Co{constructor(t,n){this.index=t,this.remainder=n,this._prefixSumIndexOfResultBrand=void 0,this.index=t,this.remainder=n}}class Eo{constructor(t,n,i,r){this._uri=t,this._lines=n,this._eol=i,this._versionId=r,this._lineStarts=null,this._cachedTextValue=null}dispose(){this._lines.length=0}get version(){return this._versionId}getText(){return this._cachedTextValue===null&&(this._cachedTextValue=this._lines.join(this._eol)),this._cachedTextValue}onEvents(t){t.eol&&t.eol!==this._eol&&(this._eol=t.eol,this._lineStarts=null);const n=t.changes;for(const i of n)this._acceptDeleteRange(i.range),this._acceptInsertText(new Ne(i.range.startLineNumber,i.range.startColumn),i.text);this._versionId=t.versionId,this._cachedTextValue=null}_ensureLineStarts(){if(!this._lineStarts){const t=this._eol.length,n=this._lines.length,i=new Uint32Array(n);for(let r=0;r<n;r++)i[r]=this._lines[r].length+t;this._lineStarts=new Lo(i)}}_setLineText(t,n){this._lines[t]=n,this._lineStarts&&this._lineStarts.setValue(t,this._lines[t].length+this._eol.length)}_acceptDeleteRange(t){if(t.startLineNumber===t.endLineNumber){if(t.startColumn===t.endColumn)return;this._setLineText(t.startLineNumber-1,this._lines[t.startLineNumber-1].substring(0,t.startColumn-1)+this._lines[t.startLineNumber-1].substring(t.endColumn-1));return}this._setLineText(t.startLineNumber-1,this._lines[t.startLineNumber-1].substring(0,t.startColumn-1)+this._lines[t.endLineNumber-1].substring(t.endColumn-1)),this._lines.splice(t.startLineNumber,t.endLineNumber-t.startLineNumber),this._lineStarts&&this._lineStarts.removeValues(t.startLineNumber,t.endLineNumber-t.startLineNumber)}_acceptInsertText(t,n){if(n.length===0)return;const i=Fs(n);if(i.length===1){this._setLineText(t.lineNumber-1,this._lines[t.lineNumber-1].substring(0,t.column-1)+i[0]+this._lines[t.lineNumber-1].substring(t.column-1));return}i[i.length-1]+=this._lines[t.lineNumber-1].substring(t.column-1),this._setLineText(t.lineNumber-1,this._lines[t.lineNumber-1].substring(0,t.column-1)+i[0]);const r=new Uint32Array(i.length-1);for(let a=1;a<i.length;a++)this._lines.splice(t.lineNumber+a-1,0,i[a]),r[a-1]=i[a].length+this._eol.length;this._lineStarts&&this._lineStarts.insertValues(t.lineNumber,r)}}const Ro="`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?";function Mo(e=""){let t="(-?\\d*\\.\\d\\w*)|([^";for(const n of Ro)e.indexOf(n)>=0||(t+="\\"+n);return t+="\\s]+)",new RegExp(t,"g")}const zi=Mo();function Hi(e){let t=zi;if(e&&e instanceof RegExp)if(e.global)t=e;else{let n="g";e.ignoreCase&&(n+="i"),e.multiline&&(n+="m"),e.unicode&&(n+="u"),t=new RegExp(e.source,n)}return t.lastIndex=0,t}const Ui=new ys;Ui.unshift({maxLen:1e3,windowSize:15,timeBudget:150});function In(e,t,n,i,r){if(t=Hi(t),r||(r=Wt.first(Ui)),n.length>r.maxLen){let u=e-r.maxLen/2;return u<0?u=0:i+=u,n=n.substring(u,e+r.maxLen/2),In(e,t,n,i,r)}const a=Date.now(),s=e-1-i;let o=-1,l=null;for(let u=1;!(Date.now()-a>=r.timeBudget);u++){const c=s-r.windowSize*u;t.lastIndex=Math.max(0,c);const d=Do(t,n,s,o);if(!d&&l||(l=d,c<=0))break;o=c}if(l){const u={word:l[0],startColumn:i+1+l.index,endColumn:i+1+l.index+l[0].length};return t.lastIndex=0,u}return null}function Do(e,t,n,i){let r;for(;r=e.exec(t);){const a=r.index||0;if(a<=n&&e.lastIndex>=n)return r;if(i>0&&a>i)return null}return null}class zn{constructor(t){const n=Ii(t);this._defaultValue=n,this._asciiMap=zn._createAsciiMap(n),this._map=new Map}static _createAsciiMap(t){const n=new Uint8Array(256);return n.fill(t),n}set(t,n){const i=Ii(n);t>=0&&t<256?this._asciiMap[t]=i:this._map.set(t,i)}get(t){return t>=0&&t<256?this._asciiMap[t]:this._map.get(t)||this._defaultValue}clear(){this._asciiMap.fill(this._defaultValue),this._map.clear()}}class No{constructor(t,n,i){const r=new Uint8Array(t*n);for(let a=0,s=t*n;a<s;a++)r[a]=i;this._data=r,this.rows=t,this.cols=n}get(t,n){return this._data[t*this.cols+n]}set(t,n,i){this._data[t*this.cols+n]=i}}class Io{constructor(t){let n=0,i=0;for(let a=0,s=t.length;a<s;a++){const[o,l,u]=t[a];l>n&&(n=l),o>i&&(i=o),u>i&&(i=u)}n++,i++;const r=new No(i,n,0);for(let a=0,s=t.length;a<s;a++){const[o,l,u]=t[a];r.set(o,l,u)}this._states=r,this._maxCharCode=n}nextState(t,n){return n<0||n>=this._maxCharCode?0:this._states.get(t,n)}}let Hn=null;function zo(){return Hn===null&&(Hn=new Io([[1,104,2],[1,72,2],[1,102,6],[1,70,6],[2,116,3],[2,84,3],[3,116,4],[3,84,4],[4,112,5],[4,80,5],[5,115,9],[5,83,9],[5,58,10],[6,105,7],[6,73,7],[7,108,8],[7,76,8],[8,101,9],[8,69,9],[9,58,10],[10,47,11],[11,47,12]])),Hn}let Tt=null;function Ho(){if(Tt===null){Tt=new zn(0);const e=` 	<>'"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…`;for(let n=0;n<e.length;n++)Tt.set(e.charCodeAt(n),1);const t=".,;:";for(let n=0;n<t.length;n++)Tt.set(t.charCodeAt(n),2)}return Tt}class $t{static _createLink(t,n,i,r,a){let s=a-1;do{const o=n.charCodeAt(s);if(t.get(o)!==2)break;s--}while(s>r);if(r>0){const o=n.charCodeAt(r-1),l=n.charCodeAt(s);(o===40&&l===41||o===91&&l===93||o===123&&l===125)&&s--}return{range:{startLineNumber:i,startColumn:r+1,endLineNumber:i,endColumn:s+2},url:n.substring(r,s+1)}}static computeLinks(t,n=zo()){const i=Ho(),r=[];for(let a=1,s=t.getLineCount();a<=s;a++){const o=t.getLineContent(a),l=o.length;let u=0,c=0,d=0,m=1,f=!1,b=!1,p=!1,w=!1;for(;u<l;){let x=!1;const _=o.charCodeAt(u);if(m===13){let y;switch(_){case 40:f=!0,y=0;break;case 41:y=f?0:1;break;case 91:p=!0,b=!0,y=0;break;case 93:p=!1,y=b?0:1;break;case 123:w=!0,y=0;break;case 125:y=w?0:1;break;case 39:case 34:case 96:d===_?y=1:d===39||d===34||d===96?y=0:y=1;break;case 42:y=d===42?1:0;break;case 124:y=d===124?1:0;break;case 32:y=p?0:1;break;default:y=i.get(_)}y===1&&(r.push($t._createLink(i,o,a,c,u)),x=!0)}else if(m===12){let y;_===91?(b=!0,y=0):y=i.get(_),y===1?x=!0:m=13}else m=n.nextState(m,_),m===0&&(x=!0);x&&(m=1,f=!1,b=!1,w=!1,c=u+1,d=_),u++}m===13&&r.push($t._createLink(i,o,a,c,l))}return r}}function Uo(e){return!e||typeof e.getLineCount!="function"||typeof e.getLineContent!="function"?[]:$t.computeLinks(e)}class Un{constructor(){this._defaultValueSet=[["true","false"],["True","False"],["Private","Public","Friend","ReadOnly","Partial","Protected","WriteOnly"],["public","protected","private"]]}navigateValueSet(t,n,i,r,a){if(t&&n){const s=this.doNavigateValueSet(n,a);if(s)return{range:t,value:s}}if(i&&r){const s=this.doNavigateValueSet(r,a);if(s)return{range:i,value:s}}return null}doNavigateValueSet(t,n){const i=this.numberReplace(t,n);return i!==null?i:this.textReplace(t,n)}numberReplace(t,n){const i=Math.pow(10,t.length-(t.lastIndexOf(".")+1));let r=Number(t);const a=parseFloat(t);return!isNaN(r)&&!isNaN(a)&&r===a?r===0&&!n?null:(r=Math.floor(r*i),r+=n?i:-i,String(r/i)):null}textReplace(t,n){return this.valueSetsReplace(this._defaultValueSet,t,n)}valueSetsReplace(t,n,i){let r=null;for(let a=0,s=t.length;r===null&&a<s;a++)r=this.valueSetReplace(t[a],n,i);return r}valueSetReplace(t,n,i){let r=t.indexOf(n);return r>=0?(r+=i?1:-1,r<0?r=t.length-1:r%=t.length,t[r]):null}}Un.INSTANCE=new Un;const Wi=Object.freeze(function(e,t){const n=setTimeout(e.bind(t),0);return{dispose(){clearTimeout(n)}}});var Xt;(function(e){function t(n){return n===e.None||n===e.Cancelled||n instanceof Jt?!0:!n||typeof n!="object"?!1:typeof n.isCancellationRequested=="boolean"&&typeof n.onCancellationRequested=="function"}e.isCancellationToken=t,e.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:vn.None}),e.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:Wi})})(Xt||(Xt={}));class Jt{constructor(){this._isCancelled=!1,this._emitter=null}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?Wi:(this._emitter||(this._emitter=new Ae),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=null)}}class Wo{constructor(t){this._token=void 0,this._parentListener=void 0,this._parentListener=t&&t.onCancellationRequested(this.cancel,this)}get token(){return this._token||(this._token=new Jt),this._token}cancel(){this._token?this._token instanceof Jt&&this._token.cancel():this._token=Xt.Cancelled}dispose(t=!1){var n;t&&this.cancel(),(n=this._parentListener)===null||n===void 0||n.dispose(),this._token?this._token instanceof Jt&&this._token.dispose():this._token=Xt.None}}class Wn{constructor(){this._keyCodeToStr=[],this._strToKeyCode=Object.create(null)}define(t,n){this._keyCodeToStr[t]=n,this._strToKeyCode[n.toLowerCase()]=t}keyCodeToStr(t){return this._keyCodeToStr[t]}strToKeyCode(t){return this._strToKeyCode[t.toLowerCase()]||0}}const Qt=new Wn,Fn=new Wn,Pn=new Wn,Fo=new Array(230),Po=Object.create(null),Bo=Object.create(null);(function(){const e="",t=[[1,0,"None",0,"unknown",0,"VK_UNKNOWN",e,e],[1,1,"Hyper",0,e,0,e,e,e],[1,2,"Super",0,e,0,e,e,e],[1,3,"Fn",0,e,0,e,e,e],[1,4,"FnLock",0,e,0,e,e,e],[1,5,"Suspend",0,e,0,e,e,e],[1,6,"Resume",0,e,0,e,e,e],[1,7,"Turbo",0,e,0,e,e,e],[1,8,"Sleep",0,e,0,"VK_SLEEP",e,e],[1,9,"WakeUp",0,e,0,e,e,e],[0,10,"KeyA",31,"A",65,"VK_A",e,e],[0,11,"KeyB",32,"B",66,"VK_B",e,e],[0,12,"KeyC",33,"C",67,"VK_C",e,e],[0,13,"KeyD",34,"D",68,"VK_D",e,e],[0,14,"KeyE",35,"E",69,"VK_E",e,e],[0,15,"KeyF",36,"F",70,"VK_F",e,e],[0,16,"KeyG",37,"G",71,"VK_G",e,e],[0,17,"KeyH",38,"H",72,"VK_H",e,e],[0,18,"KeyI",39,"I",73,"VK_I",e,e],[0,19,"KeyJ",40,"J",74,"VK_J",e,e],[0,20,"KeyK",41,"K",75,"VK_K",e,e],[0,21,"KeyL",42,"L",76,"VK_L",e,e],[0,22,"KeyM",43,"M",77,"VK_M",e,e],[0,23,"KeyN",44,"N",78,"VK_N",e,e],[0,24,"KeyO",45,"O",79,"VK_O",e,e],[0,25,"KeyP",46,"P",80,"VK_P",e,e],[0,26,"KeyQ",47,"Q",81,"VK_Q",e,e],[0,27,"KeyR",48,"R",82,"VK_R",e,e],[0,28,"KeyS",49,"S",83,"VK_S",e,e],[0,29,"KeyT",50,"T",84,"VK_T",e,e],[0,30,"KeyU",51,"U",85,"VK_U",e,e],[0,31,"KeyV",52,"V",86,"VK_V",e,e],[0,32,"KeyW",53,"W",87,"VK_W",e,e],[0,33,"KeyX",54,"X",88,"VK_X",e,e],[0,34,"KeyY",55,"Y",89,"VK_Y",e,e],[0,35,"KeyZ",56,"Z",90,"VK_Z",e,e],[0,36,"Digit1",22,"1",49,"VK_1",e,e],[0,37,"Digit2",23,"2",50,"VK_2",e,e],[0,38,"Digit3",24,"3",51,"VK_3",e,e],[0,39,"Digit4",25,"4",52,"VK_4",e,e],[0,40,"Digit5",26,"5",53,"VK_5",e,e],[0,41,"Digit6",27,"6",54,"VK_6",e,e],[0,42,"Digit7",28,"7",55,"VK_7",e,e],[0,43,"Digit8",29,"8",56,"VK_8",e,e],[0,44,"Digit9",30,"9",57,"VK_9",e,e],[0,45,"Digit0",21,"0",48,"VK_0",e,e],[1,46,"Enter",3,"Enter",13,"VK_RETURN",e,e],[1,47,"Escape",9,"Escape",27,"VK_ESCAPE",e,e],[1,48,"Backspace",1,"Backspace",8,"VK_BACK",e,e],[1,49,"Tab",2,"Tab",9,"VK_TAB",e,e],[1,50,"Space",10,"Space",32,"VK_SPACE",e,e],[0,51,"Minus",88,"-",189,"VK_OEM_MINUS","-","OEM_MINUS"],[0,52,"Equal",86,"=",187,"VK_OEM_PLUS","=","OEM_PLUS"],[0,53,"BracketLeft",92,"[",219,"VK_OEM_4","[","OEM_4"],[0,54,"BracketRight",94,"]",221,"VK_OEM_6","]","OEM_6"],[0,55,"Backslash",93,"\\",220,"VK_OEM_5","\\","OEM_5"],[0,56,"IntlHash",0,e,0,e,e,e],[0,57,"Semicolon",85,";",186,"VK_OEM_1",";","OEM_1"],[0,58,"Quote",95,"'",222,"VK_OEM_7","'","OEM_7"],[0,59,"Backquote",91,"`",192,"VK_OEM_3","`","OEM_3"],[0,60,"Comma",87,",",188,"VK_OEM_COMMA",",","OEM_COMMA"],[0,61,"Period",89,".",190,"VK_OEM_PERIOD",".","OEM_PERIOD"],[0,62,"Slash",90,"/",191,"VK_OEM_2","/","OEM_2"],[1,63,"CapsLock",8,"CapsLock",20,"VK_CAPITAL",e,e],[1,64,"F1",59,"F1",112,"VK_F1",e,e],[1,65,"F2",60,"F2",113,"VK_F2",e,e],[1,66,"F3",61,"F3",114,"VK_F3",e,e],[1,67,"F4",62,"F4",115,"VK_F4",e,e],[1,68,"F5",63,"F5",116,"VK_F5",e,e],[1,69,"F6",64,"F6",117,"VK_F6",e,e],[1,70,"F7",65,"F7",118,"VK_F7",e,e],[1,71,"F8",66,"F8",119,"VK_F8",e,e],[1,72,"F9",67,"F9",120,"VK_F9",e,e],[1,73,"F10",68,"F10",121,"VK_F10",e,e],[1,74,"F11",69,"F11",122,"VK_F11",e,e],[1,75,"F12",70,"F12",123,"VK_F12",e,e],[1,76,"PrintScreen",0,e,0,e,e,e],[1,77,"ScrollLock",84,"ScrollLock",145,"VK_SCROLL",e,e],[1,78,"Pause",7,"PauseBreak",19,"VK_PAUSE",e,e],[1,79,"Insert",19,"Insert",45,"VK_INSERT",e,e],[1,80,"Home",14,"Home",36,"VK_HOME",e,e],[1,81,"PageUp",11,"PageUp",33,"VK_PRIOR",e,e],[1,82,"Delete",20,"Delete",46,"VK_DELETE",e,e],[1,83,"End",13,"End",35,"VK_END",e,e],[1,84,"PageDown",12,"PageDown",34,"VK_NEXT",e,e],[1,85,"ArrowRight",17,"RightArrow",39,"VK_RIGHT","Right",e],[1,86,"ArrowLeft",15,"LeftArrow",37,"VK_LEFT","Left",e],[1,87,"ArrowDown",18,"DownArrow",40,"VK_DOWN","Down",e],[1,88,"ArrowUp",16,"UpArrow",38,"VK_UP","Up",e],[1,89,"NumLock",83,"NumLock",144,"VK_NUMLOCK",e,e],[1,90,"NumpadDivide",113,"NumPad_Divide",111,"VK_DIVIDE",e,e],[1,91,"NumpadMultiply",108,"NumPad_Multiply",106,"VK_MULTIPLY",e,e],[1,92,"NumpadSubtract",111,"NumPad_Subtract",109,"VK_SUBTRACT",e,e],[1,93,"NumpadAdd",109,"NumPad_Add",107,"VK_ADD",e,e],[1,94,"NumpadEnter",3,e,0,e,e,e],[1,95,"Numpad1",99,"NumPad1",97,"VK_NUMPAD1",e,e],[1,96,"Numpad2",100,"NumPad2",98,"VK_NUMPAD2",e,e],[1,97,"Numpad3",101,"NumPad3",99,"VK_NUMPAD3",e,e],[1,98,"Numpad4",102,"NumPad4",100,"VK_NUMPAD4",e,e],[1,99,"Numpad5",103,"NumPad5",101,"VK_NUMPAD5",e,e],[1,100,"Numpad6",104,"NumPad6",102,"VK_NUMPAD6",e,e],[1,101,"Numpad7",105,"NumPad7",103,"VK_NUMPAD7",e,e],[1,102,"Numpad8",106,"NumPad8",104,"VK_NUMPAD8",e,e],[1,103,"Numpad9",107,"NumPad9",105,"VK_NUMPAD9",e,e],[1,104,"Numpad0",98,"NumPad0",96,"VK_NUMPAD0",e,e],[1,105,"NumpadDecimal",112,"NumPad_Decimal",110,"VK_DECIMAL",e,e],[0,106,"IntlBackslash",97,"OEM_102",226,"VK_OEM_102",e,e],[1,107,"ContextMenu",58,"ContextMenu",93,e,e,e],[1,108,"Power",0,e,0,e,e,e],[1,109,"NumpadEqual",0,e,0,e,e,e],[1,110,"F13",71,"F13",124,"VK_F13",e,e],[1,111,"F14",72,"F14",125,"VK_F14",e,e],[1,112,"F15",73,"F15",126,"VK_F15",e,e],[1,113,"F16",74,"F16",127,"VK_F16",e,e],[1,114,"F17",75,"F17",128,"VK_F17",e,e],[1,115,"F18",76,"F18",129,"VK_F18",e,e],[1,116,"F19",77,"F19",130,"VK_F19",e,e],[1,117,"F20",78,"F20",131,"VK_F20",e,e],[1,118,"F21",79,"F21",132,"VK_F21",e,e],[1,119,"F22",80,"F22",133,"VK_F22",e,e],[1,120,"F23",81,"F23",134,"VK_F23",e,e],[1,121,"F24",82,"F24",135,"VK_F24",e,e],[1,122,"Open",0,e,0,e,e,e],[1,123,"Help",0,e,0,e,e,e],[1,124,"Select",0,e,0,e,e,e],[1,125,"Again",0,e,0,e,e,e],[1,126,"Undo",0,e,0,e,e,e],[1,127,"Cut",0,e,0,e,e,e],[1,128,"Copy",0,e,0,e,e,e],[1,129,"Paste",0,e,0,e,e,e],[1,130,"Find",0,e,0,e,e,e],[1,131,"AudioVolumeMute",117,"AudioVolumeMute",173,"VK_VOLUME_MUTE",e,e],[1,132,"AudioVolumeUp",118,"AudioVolumeUp",175,"VK_VOLUME_UP",e,e],[1,133,"AudioVolumeDown",119,"AudioVolumeDown",174,"VK_VOLUME_DOWN",e,e],[1,134,"NumpadComma",110,"NumPad_Separator",108,"VK_SEPARATOR",e,e],[0,135,"IntlRo",115,"ABNT_C1",193,"VK_ABNT_C1",e,e],[1,136,"KanaMode",0,e,0,e,e,e],[0,137,"IntlYen",0,e,0,e,e,e],[1,138,"Convert",0,e,0,e,e,e],[1,139,"NonConvert",0,e,0,e,e,e],[1,140,"Lang1",0,e,0,e,e,e],[1,141,"Lang2",0,e,0,e,e,e],[1,142,"Lang3",0,e,0,e,e,e],[1,143,"Lang4",0,e,0,e,e,e],[1,144,"Lang5",0,e,0,e,e,e],[1,145,"Abort",0,e,0,e,e,e],[1,146,"Props",0,e,0,e,e,e],[1,147,"NumpadParenLeft",0,e,0,e,e,e],[1,148,"NumpadParenRight",0,e,0,e,e,e],[1,149,"NumpadBackspace",0,e,0,e,e,e],[1,150,"NumpadMemoryStore",0,e,0,e,e,e],[1,151,"NumpadMemoryRecall",0,e,0,e,e,e],[1,152,"NumpadMemoryClear",0,e,0,e,e,e],[1,153,"NumpadMemoryAdd",0,e,0,e,e,e],[1,154,"NumpadMemorySubtract",0,e,0,e,e,e],[1,155,"NumpadClear",131,"Clear",12,"VK_CLEAR",e,e],[1,156,"NumpadClearEntry",0,e,0,e,e,e],[1,0,e,5,"Ctrl",17,"VK_CONTROL",e,e],[1,0,e,4,"Shift",16,"VK_SHIFT",e,e],[1,0,e,6,"Alt",18,"VK_MENU",e,e],[1,0,e,57,"Meta",91,"VK_COMMAND",e,e],[1,157,"ControlLeft",5,e,0,"VK_LCONTROL",e,e],[1,158,"ShiftLeft",4,e,0,"VK_LSHIFT",e,e],[1,159,"AltLeft",6,e,0,"VK_LMENU",e,e],[1,160,"MetaLeft",57,e,0,"VK_LWIN",e,e],[1,161,"ControlRight",5,e,0,"VK_RCONTROL",e,e],[1,162,"ShiftRight",4,e,0,"VK_RSHIFT",e,e],[1,163,"AltRight",6,e,0,"VK_RMENU",e,e],[1,164,"MetaRight",57,e,0,"VK_RWIN",e,e],[1,165,"BrightnessUp",0,e,0,e,e,e],[1,166,"BrightnessDown",0,e,0,e,e,e],[1,167,"MediaPlay",0,e,0,e,e,e],[1,168,"MediaRecord",0,e,0,e,e,e],[1,169,"MediaFastForward",0,e,0,e,e,e],[1,170,"MediaRewind",0,e,0,e,e,e],[1,171,"MediaTrackNext",124,"MediaTrackNext",176,"VK_MEDIA_NEXT_TRACK",e,e],[1,172,"MediaTrackPrevious",125,"MediaTrackPrevious",177,"VK_MEDIA_PREV_TRACK",e,e],[1,173,"MediaStop",126,"MediaStop",178,"VK_MEDIA_STOP",e,e],[1,174,"Eject",0,e,0,e,e,e],[1,175,"MediaPlayPause",127,"MediaPlayPause",179,"VK_MEDIA_PLAY_PAUSE",e,e],[1,176,"MediaSelect",128,"LaunchMediaPlayer",181,"VK_MEDIA_LAUNCH_MEDIA_SELECT",e,e],[1,177,"LaunchMail",129,"LaunchMail",180,"VK_MEDIA_LAUNCH_MAIL",e,e],[1,178,"LaunchApp2",130,"LaunchApp2",183,"VK_MEDIA_LAUNCH_APP2",e,e],[1,179,"LaunchApp1",0,e,0,"VK_MEDIA_LAUNCH_APP1",e,e],[1,180,"SelectTask",0,e,0,e,e,e],[1,181,"LaunchScreenSaver",0,e,0,e,e,e],[1,182,"BrowserSearch",120,"BrowserSearch",170,"VK_BROWSER_SEARCH",e,e],[1,183,"BrowserHome",121,"BrowserHome",172,"VK_BROWSER_HOME",e,e],[1,184,"BrowserBack",122,"BrowserBack",166,"VK_BROWSER_BACK",e,e],[1,185,"BrowserForward",123,"BrowserForward",167,"VK_BROWSER_FORWARD",e,e],[1,186,"BrowserStop",0,e,0,"VK_BROWSER_STOP",e,e],[1,187,"BrowserRefresh",0,e,0,"VK_BROWSER_REFRESH",e,e],[1,188,"BrowserFavorites",0,e,0,"VK_BROWSER_FAVORITES",e,e],[1,189,"ZoomToggle",0,e,0,e,e,e],[1,190,"MailReply",0,e,0,e,e,e],[1,191,"MailForward",0,e,0,e,e,e],[1,192,"MailSend",0,e,0,e,e,e],[1,0,e,114,"KeyInComposition",229,e,e,e],[1,0,e,116,"ABNT_C2",194,"VK_ABNT_C2",e,e],[1,0,e,96,"OEM_8",223,"VK_OEM_8",e,e],[1,0,e,0,e,0,"VK_KANA",e,e],[1,0,e,0,e,0,"VK_HANGUL",e,e],[1,0,e,0,e,0,"VK_JUNJA",e,e],[1,0,e,0,e,0,"VK_FINAL",e,e],[1,0,e,0,e,0,"VK_HANJA",e,e],[1,0,e,0,e,0,"VK_KANJI",e,e],[1,0,e,0,e,0,"VK_CONVERT",e,e],[1,0,e,0,e,0,"VK_NONCONVERT",e,e],[1,0,e,0,e,0,"VK_ACCEPT",e,e],[1,0,e,0,e,0,"VK_MODECHANGE",e,e],[1,0,e,0,e,0,"VK_SELECT",e,e],[1,0,e,0,e,0,"VK_PRINT",e,e],[1,0,e,0,e,0,"VK_EXECUTE",e,e],[1,0,e,0,e,0,"VK_SNAPSHOT",e,e],[1,0,e,0,e,0,"VK_HELP",e,e],[1,0,e,0,e,0,"VK_APPS",e,e],[1,0,e,0,e,0,"VK_PROCESSKEY",e,e],[1,0,e,0,e,0,"VK_PACKET",e,e],[1,0,e,0,e,0,"VK_DBE_SBCSCHAR",e,e],[1,0,e,0,e,0,"VK_DBE_DBCSCHAR",e,e],[1,0,e,0,e,0,"VK_ATTN",e,e],[1,0,e,0,e,0,"VK_CRSEL",e,e],[1,0,e,0,e,0,"VK_EXSEL",e,e],[1,0,e,0,e,0,"VK_EREOF",e,e],[1,0,e,0,e,0,"VK_PLAY",e,e],[1,0,e,0,e,0,"VK_ZOOM",e,e],[1,0,e,0,e,0,"VK_NONAME",e,e],[1,0,e,0,e,0,"VK_PA1",e,e],[1,0,e,0,e,0,"VK_OEM_CLEAR",e,e]],n=[],i=[];for(const r of t){const[a,s,o,l,u,c,d,m,f]=r;if(i[s]||(i[s]=!0,Po[o]=s,Bo[o.toLowerCase()]=s),!n[l]){if(n[l]=!0,!u)throw new Error(`String representation missing for key code ${l} around scan code ${o}`);Qt.define(l,u),Fn.define(l,m||u),Pn.define(l,f||m||u)}c&&(Fo[c]=l)}})();var Fi;(function(e){function t(o){return Qt.keyCodeToStr(o)}e.toString=t;function n(o){return Qt.strToKeyCode(o)}e.fromString=n;function i(o){return Fn.keyCodeToStr(o)}e.toUserSettingsUS=i;function r(o){return Pn.keyCodeToStr(o)}e.toUserSettingsGeneral=r;function a(o){return Fn.strToKeyCode(o)||Pn.strToKeyCode(o)}e.fromUserSettings=a;function s(o){if(o>=98&&o<=113)return null;switch(o){case 16:return"Up";case 18:return"Down";case 15:return"Left";case 17:return"Right"}return Qt.keyCodeToStr(o)}e.toElectronAccelerator=s})(Fi||(Fi={}));function qo(e,t){const n=(t&65535)<<16>>>0;return(e|n)>>>0}class ve extends oe{constructor(t,n,i,r){super(t,n,i,r),this.selectionStartLineNumber=t,this.selectionStartColumn=n,this.positionLineNumber=i,this.positionColumn=r}toString(){return"["+this.selectionStartLineNumber+","+this.selectionStartColumn+" -> "+this.positionLineNumber+","+this.positionColumn+"]"}equalsSelection(t){return ve.selectionsEqual(this,t)}static selectionsEqual(t,n){return t.selectionStartLineNumber===n.selectionStartLineNumber&&t.selectionStartColumn===n.selectionStartColumn&&t.positionLineNumber===n.positionLineNumber&&t.positionColumn===n.positionColumn}getDirection(){return this.selectionStartLineNumber===this.startLineNumber&&this.selectionStartColumn===this.startColumn?0:1}setEndPosition(t,n){return this.getDirection()===0?new ve(this.startLineNumber,this.startColumn,t,n):new ve(t,n,this.startLineNumber,this.startColumn)}getPosition(){return new Ne(this.positionLineNumber,this.positionColumn)}getSelectionStart(){return new Ne(this.selectionStartLineNumber,this.selectionStartColumn)}setStartPosition(t,n){return this.getDirection()===0?new ve(t,n,this.endLineNumber,this.endColumn):new ve(this.endLineNumber,this.endColumn,t,n)}static fromPositions(t,n=t){return new ve(t.lineNumber,t.column,n.lineNumber,n.column)}static fromRange(t,n){return n===0?new ve(t.startLineNumber,t.startColumn,t.endLineNumber,t.endColumn):new ve(t.endLineNumber,t.endColumn,t.startLineNumber,t.startColumn)}static liftSelection(t){return new ve(t.selectionStartLineNumber,t.selectionStartColumn,t.positionLineNumber,t.positionColumn)}static selectionsArrEqual(t,n){if(t&&!n||!t&&n)return!1;if(!t&&!n)return!0;if(t.length!==n.length)return!1;for(let i=0,r=t.length;i<r;i++)if(!this.selectionsEqual(t[i],n[i]))return!1;return!0}static isISelection(t){return t&&typeof t.selectionStartLineNumber=="number"&&typeof t.selectionStartColumn=="number"&&typeof t.positionLineNumber=="number"&&typeof t.positionColumn=="number"}static createWithDirection(t,n,i,r,a){return a===0?new ve(t,n,i,r):new ve(i,r,t,n)}}const Pi=Object.create(null);function h(e,t){if(Ls(t)){const n=Pi[t];if(n===void 0)throw new Error(`${e} references an unknown codicon: ${t}`);t=n}return Pi[e]=t,{id:e}}const Oo={add:h("add",6e4),plus:h("plus",6e4),gistNew:h("gist-new",6e4),repoCreate:h("repo-create",6e4),lightbulb:h("lightbulb",60001),lightBulb:h("light-bulb",60001),repo:h("repo",60002),repoDelete:h("repo-delete",60002),gistFork:h("gist-fork",60003),repoForked:h("repo-forked",60003),gitPullRequest:h("git-pull-request",60004),gitPullRequestAbandoned:h("git-pull-request-abandoned",60004),recordKeys:h("record-keys",60005),keyboard:h("keyboard",60005),tag:h("tag",60006),gitPullRequestLabel:h("git-pull-request-label",60006),tagAdd:h("tag-add",60006),tagRemove:h("tag-remove",60006),person:h("person",60007),personFollow:h("person-follow",60007),personOutline:h("person-outline",60007),personFilled:h("person-filled",60007),gitBranch:h("git-branch",60008),gitBranchCreate:h("git-branch-create",60008),gitBranchDelete:h("git-branch-delete",60008),sourceControl:h("source-control",60008),mirror:h("mirror",60009),mirrorPublic:h("mirror-public",60009),star:h("star",60010),starAdd:h("star-add",60010),starDelete:h("star-delete",60010),starEmpty:h("star-empty",60010),comment:h("comment",60011),commentAdd:h("comment-add",60011),alert:h("alert",60012),warning:h("warning",60012),search:h("search",60013),searchSave:h("search-save",60013),logOut:h("log-out",60014),signOut:h("sign-out",60014),logIn:h("log-in",60015),signIn:h("sign-in",60015),eye:h("eye",60016),eyeUnwatch:h("eye-unwatch",60016),eyeWatch:h("eye-watch",60016),circleFilled:h("circle-filled",60017),primitiveDot:h("primitive-dot",60017),closeDirty:h("close-dirty",60017),debugBreakpoint:h("debug-breakpoint",60017),debugBreakpointDisabled:h("debug-breakpoint-disabled",60017),debugHint:h("debug-hint",60017),terminalDecorationSuccess:h("terminal-decoration-success",60017),primitiveSquare:h("primitive-square",60018),edit:h("edit",60019),pencil:h("pencil",60019),info:h("info",60020),issueOpened:h("issue-opened",60020),gistPrivate:h("gist-private",60021),gitForkPrivate:h("git-fork-private",60021),lock:h("lock",60021),mirrorPrivate:h("mirror-private",60021),close:h("close",60022),removeClose:h("remove-close",60022),x:h("x",60022),repoSync:h("repo-sync",60023),sync:h("sync",60023),clone:h("clone",60024),desktopDownload:h("desktop-download",60024),beaker:h("beaker",60025),microscope:h("microscope",60025),vm:h("vm",60026),deviceDesktop:h("device-desktop",60026),file:h("file",60027),fileText:h("file-text",60027),more:h("more",60028),ellipsis:h("ellipsis",60028),kebabHorizontal:h("kebab-horizontal",60028),mailReply:h("mail-reply",60029),reply:h("reply",60029),organization:h("organization",60030),organizationFilled:h("organization-filled",60030),organizationOutline:h("organization-outline",60030),newFile:h("new-file",60031),fileAdd:h("file-add",60031),newFolder:h("new-folder",60032),fileDirectoryCreate:h("file-directory-create",60032),trash:h("trash",60033),trashcan:h("trashcan",60033),history:h("history",60034),clock:h("clock",60034),folder:h("folder",60035),fileDirectory:h("file-directory",60035),symbolFolder:h("symbol-folder",60035),logoGithub:h("logo-github",60036),markGithub:h("mark-github",60036),github:h("github",60036),terminal:h("terminal",60037),console:h("console",60037),repl:h("repl",60037),zap:h("zap",60038),symbolEvent:h("symbol-event",60038),error:h("error",60039),stop:h("stop",60039),variable:h("variable",60040),symbolVariable:h("symbol-variable",60040),array:h("array",60042),symbolArray:h("symbol-array",60042),symbolModule:h("symbol-module",60043),symbolPackage:h("symbol-package",60043),symbolNamespace:h("symbol-namespace",60043),symbolObject:h("symbol-object",60043),symbolMethod:h("symbol-method",60044),symbolFunction:h("symbol-function",60044),symbolConstructor:h("symbol-constructor",60044),symbolBoolean:h("symbol-boolean",60047),symbolNull:h("symbol-null",60047),symbolNumeric:h("symbol-numeric",60048),symbolNumber:h("symbol-number",60048),symbolStructure:h("symbol-structure",60049),symbolStruct:h("symbol-struct",60049),symbolParameter:h("symbol-parameter",60050),symbolTypeParameter:h("symbol-type-parameter",60050),symbolKey:h("symbol-key",60051),symbolText:h("symbol-text",60051),symbolReference:h("symbol-reference",60052),goToFile:h("go-to-file",60052),symbolEnum:h("symbol-enum",60053),symbolValue:h("symbol-value",60053),symbolRuler:h("symbol-ruler",60054),symbolUnit:h("symbol-unit",60054),activateBreakpoints:h("activate-breakpoints",60055),archive:h("archive",60056),arrowBoth:h("arrow-both",60057),arrowDown:h("arrow-down",60058),arrowLeft:h("arrow-left",60059),arrowRight:h("arrow-right",60060),arrowSmallDown:h("arrow-small-down",60061),arrowSmallLeft:h("arrow-small-left",60062),arrowSmallRight:h("arrow-small-right",60063),arrowSmallUp:h("arrow-small-up",60064),arrowUp:h("arrow-up",60065),bell:h("bell",60066),bold:h("bold",60067),book:h("book",60068),bookmark:h("bookmark",60069),debugBreakpointConditionalUnverified:h("debug-breakpoint-conditional-unverified",60070),debugBreakpointConditional:h("debug-breakpoint-conditional",60071),debugBreakpointConditionalDisabled:h("debug-breakpoint-conditional-disabled",60071),debugBreakpointDataUnverified:h("debug-breakpoint-data-unverified",60072),debugBreakpointData:h("debug-breakpoint-data",60073),debugBreakpointDataDisabled:h("debug-breakpoint-data-disabled",60073),debugBreakpointLogUnverified:h("debug-breakpoint-log-unverified",60074),debugBreakpointLog:h("debug-breakpoint-log",60075),debugBreakpointLogDisabled:h("debug-breakpoint-log-disabled",60075),briefcase:h("briefcase",60076),broadcast:h("broadcast",60077),browser:h("browser",60078),bug:h("bug",60079),calendar:h("calendar",60080),caseSensitive:h("case-sensitive",60081),check:h("check",60082),checklist:h("checklist",60083),chevronDown:h("chevron-down",60084),chevronLeft:h("chevron-left",60085),chevronRight:h("chevron-right",60086),chevronUp:h("chevron-up",60087),chromeClose:h("chrome-close",60088),chromeMaximize:h("chrome-maximize",60089),chromeMinimize:h("chrome-minimize",60090),chromeRestore:h("chrome-restore",60091),circleOutline:h("circle-outline",60092),circle:h("circle",60092),debugBreakpointUnverified:h("debug-breakpoint-unverified",60092),terminalDecorationIncomplete:h("terminal-decoration-incomplete",60092),circleSlash:h("circle-slash",60093),circuitBoard:h("circuit-board",60094),clearAll:h("clear-all",60095),clippy:h("clippy",60096),closeAll:h("close-all",60097),cloudDownload:h("cloud-download",60098),cloudUpload:h("cloud-upload",60099),code:h("code",60100),collapseAll:h("collapse-all",60101),colorMode:h("color-mode",60102),commentDiscussion:h("comment-discussion",60103),creditCard:h("credit-card",60105),dash:h("dash",60108),dashboard:h("dashboard",60109),database:h("database",60110),debugContinue:h("debug-continue",60111),debugDisconnect:h("debug-disconnect",60112),debugPause:h("debug-pause",60113),debugRestart:h("debug-restart",60114),debugStart:h("debug-start",60115),debugStepInto:h("debug-step-into",60116),debugStepOut:h("debug-step-out",60117),debugStepOver:h("debug-step-over",60118),debugStop:h("debug-stop",60119),debug:h("debug",60120),deviceCameraVideo:h("device-camera-video",60121),deviceCamera:h("device-camera",60122),deviceMobile:h("device-mobile",60123),diffAdded:h("diff-added",60124),diffIgnored:h("diff-ignored",60125),diffModified:h("diff-modified",60126),diffRemoved:h("diff-removed",60127),diffRenamed:h("diff-renamed",60128),diff:h("diff",60129),diffSidebyside:h("diff-sidebyside",60129),discard:h("discard",60130),editorLayout:h("editor-layout",60131),emptyWindow:h("empty-window",60132),exclude:h("exclude",60133),extensions:h("extensions",60134),eyeClosed:h("eye-closed",60135),fileBinary:h("file-binary",60136),fileCode:h("file-code",60137),fileMedia:h("file-media",60138),filePdf:h("file-pdf",60139),fileSubmodule:h("file-submodule",60140),fileSymlinkDirectory:h("file-symlink-directory",60141),fileSymlinkFile:h("file-symlink-file",60142),fileZip:h("file-zip",60143),files:h("files",60144),filter:h("filter",60145),flame:h("flame",60146),foldDown:h("fold-down",60147),foldUp:h("fold-up",60148),fold:h("fold",60149),folderActive:h("folder-active",60150),folderOpened:h("folder-opened",60151),gear:h("gear",60152),gift:h("gift",60153),gistSecret:h("gist-secret",60154),gist:h("gist",60155),gitCommit:h("git-commit",60156),gitCompare:h("git-compare",60157),compareChanges:h("compare-changes",60157),gitMerge:h("git-merge",60158),githubAction:h("github-action",60159),githubAlt:h("github-alt",60160),globe:h("globe",60161),grabber:h("grabber",60162),graph:h("graph",60163),gripper:h("gripper",60164),heart:h("heart",60165),home:h("home",60166),horizontalRule:h("horizontal-rule",60167),hubot:h("hubot",60168),inbox:h("inbox",60169),issueReopened:h("issue-reopened",60171),issues:h("issues",60172),italic:h("italic",60173),jersey:h("jersey",60174),json:h("json",60175),kebabVertical:h("kebab-vertical",60176),key:h("key",60177),law:h("law",60178),lightbulbAutofix:h("lightbulb-autofix",60179),linkExternal:h("link-external",60180),link:h("link",60181),listOrdered:h("list-ordered",60182),listUnordered:h("list-unordered",60183),liveShare:h("live-share",60184),loading:h("loading",60185),location:h("location",60186),mailRead:h("mail-read",60187),mail:h("mail",60188),markdown:h("markdown",60189),megaphone:h("megaphone",60190),mention:h("mention",60191),milestone:h("milestone",60192),gitPullRequestMilestone:h("git-pull-request-milestone",60192),mortarBoard:h("mortar-board",60193),move:h("move",60194),multipleWindows:h("multiple-windows",60195),mute:h("mute",60196),noNewline:h("no-newline",60197),note:h("note",60198),octoface:h("octoface",60199),openPreview:h("open-preview",60200),package:h("package",60201),paintcan:h("paintcan",60202),pin:h("pin",60203),play:h("play",60204),run:h("run",60204),plug:h("plug",60205),preserveCase:h("preserve-case",60206),preview:h("preview",60207),project:h("project",60208),pulse:h("pulse",60209),question:h("question",60210),quote:h("quote",60211),radioTower:h("radio-tower",60212),reactions:h("reactions",60213),references:h("references",60214),refresh:h("refresh",60215),regex:h("regex",60216),remoteExplorer:h("remote-explorer",60217),remote:h("remote",60218),remove:h("remove",60219),replaceAll:h("replace-all",60220),replace:h("replace",60221),repoClone:h("repo-clone",60222),repoForcePush:h("repo-force-push",60223),repoPull:h("repo-pull",60224),repoPush:h("repo-push",60225),report:h("report",60226),requestChanges:h("request-changes",60227),rocket:h("rocket",60228),rootFolderOpened:h("root-folder-opened",60229),rootFolder:h("root-folder",60230),rss:h("rss",60231),ruby:h("ruby",60232),saveAll:h("save-all",60233),saveAs:h("save-as",60234),save:h("save",60235),screenFull:h("screen-full",60236),screenNormal:h("screen-normal",60237),searchStop:h("search-stop",60238),server:h("server",60240),settingsGear:h("settings-gear",60241),settings:h("settings",60242),shield:h("shield",60243),smiley:h("smiley",60244),sortPrecedence:h("sort-precedence",60245),splitHorizontal:h("split-horizontal",60246),splitVertical:h("split-vertical",60247),squirrel:h("squirrel",60248),starFull:h("star-full",60249),starHalf:h("star-half",60250),symbolClass:h("symbol-class",60251),symbolColor:h("symbol-color",60252),symbolConstant:h("symbol-constant",60253),symbolEnumMember:h("symbol-enum-member",60254),symbolField:h("symbol-field",60255),symbolFile:h("symbol-file",60256),symbolInterface:h("symbol-interface",60257),symbolKeyword:h("symbol-keyword",60258),symbolMisc:h("symbol-misc",60259),symbolOperator:h("symbol-operator",60260),symbolProperty:h("symbol-property",60261),wrench:h("wrench",60261),wrenchSubaction:h("wrench-subaction",60261),symbolSnippet:h("symbol-snippet",60262),tasklist:h("tasklist",60263),telescope:h("telescope",60264),textSize:h("text-size",60265),threeBars:h("three-bars",60266),thumbsdown:h("thumbsdown",60267),thumbsup:h("thumbsup",60268),tools:h("tools",60269),triangleDown:h("triangle-down",60270),triangleLeft:h("triangle-left",60271),triangleRight:h("triangle-right",60272),triangleUp:h("triangle-up",60273),twitter:h("twitter",60274),unfold:h("unfold",60275),unlock:h("unlock",60276),unmute:h("unmute",60277),unverified:h("unverified",60278),verified:h("verified",60279),versions:h("versions",60280),vmActive:h("vm-active",60281),vmOutline:h("vm-outline",60282),vmRunning:h("vm-running",60283),watch:h("watch",60284),whitespace:h("whitespace",60285),wholeWord:h("whole-word",60286),window:h("window",60287),wordWrap:h("word-wrap",60288),zoomIn:h("zoom-in",60289),zoomOut:h("zoom-out",60290),listFilter:h("list-filter",60291),listFlat:h("list-flat",60292),listSelection:h("list-selection",60293),selection:h("selection",60293),listTree:h("list-tree",60294),debugBreakpointFunctionUnverified:h("debug-breakpoint-function-unverified",60295),debugBreakpointFunction:h("debug-breakpoint-function",60296),debugBreakpointFunctionDisabled:h("debug-breakpoint-function-disabled",60296),debugStackframeActive:h("debug-stackframe-active",60297),circleSmallFilled:h("circle-small-filled",60298),debugStackframeDot:h("debug-stackframe-dot",60298),terminalDecorationMark:h("terminal-decoration-mark",60298),debugStackframe:h("debug-stackframe",60299),debugStackframeFocused:h("debug-stackframe-focused",60299),debugBreakpointUnsupported:h("debug-breakpoint-unsupported",60300),symbolString:h("symbol-string",60301),debugReverseContinue:h("debug-reverse-continue",60302),debugStepBack:h("debug-step-back",60303),debugRestartFrame:h("debug-restart-frame",60304),debugAlt:h("debug-alt",60305),callIncoming:h("call-incoming",60306),callOutgoing:h("call-outgoing",60307),menu:h("menu",60308),expandAll:h("expand-all",60309),feedback:h("feedback",60310),gitPullRequestReviewer:h("git-pull-request-reviewer",60310),groupByRefType:h("group-by-ref-type",60311),ungroupByRefType:h("ungroup-by-ref-type",60312),account:h("account",60313),gitPullRequestAssignee:h("git-pull-request-assignee",60313),bellDot:h("bell-dot",60314),debugConsole:h("debug-console",60315),library:h("library",60316),output:h("output",60317),runAll:h("run-all",60318),syncIgnored:h("sync-ignored",60319),pinned:h("pinned",60320),githubInverted:h("github-inverted",60321),serverProcess:h("server-process",60322),serverEnvironment:h("server-environment",60323),pass:h("pass",60324),issueClosed:h("issue-closed",60324),stopCircle:h("stop-circle",60325),playCircle:h("play-circle",60326),record:h("record",60327),debugAltSmall:h("debug-alt-small",60328),vmConnect:h("vm-connect",60329),cloud:h("cloud",60330),merge:h("merge",60331),export:h("export",60332),graphLeft:h("graph-left",60333),magnet:h("magnet",60334),notebook:h("notebook",60335),redo:h("redo",60336),checkAll:h("check-all",60337),pinnedDirty:h("pinned-dirty",60338),passFilled:h("pass-filled",60339),circleLargeFilled:h("circle-large-filled",60340),circleLarge:h("circle-large",60341),circleLargeOutline:h("circle-large-outline",60341),combine:h("combine",60342),gather:h("gather",60342),table:h("table",60343),variableGroup:h("variable-group",60344),typeHierarchy:h("type-hierarchy",60345),typeHierarchySub:h("type-hierarchy-sub",60346),typeHierarchySuper:h("type-hierarchy-super",60347),gitPullRequestCreate:h("git-pull-request-create",60348),runAbove:h("run-above",60349),runBelow:h("run-below",60350),notebookTemplate:h("notebook-template",60351),debugRerun:h("debug-rerun",60352),workspaceTrusted:h("workspace-trusted",60353),workspaceUntrusted:h("workspace-untrusted",60354),workspaceUnknown:h("workspace-unknown",60355),terminalCmd:h("terminal-cmd",60356),terminalDebian:h("terminal-debian",60357),terminalLinux:h("terminal-linux",60358),terminalPowershell:h("terminal-powershell",60359),terminalTmux:h("terminal-tmux",60360),terminalUbuntu:h("terminal-ubuntu",60361),terminalBash:h("terminal-bash",60362),arrowSwap:h("arrow-swap",60363),copy:h("copy",60364),personAdd:h("person-add",60365),filterFilled:h("filter-filled",60366),wand:h("wand",60367),debugLineByLine:h("debug-line-by-line",60368),inspect:h("inspect",60369),layers:h("layers",60370),layersDot:h("layers-dot",60371),layersActive:h("layers-active",60372),compass:h("compass",60373),compassDot:h("compass-dot",60374),compassActive:h("compass-active",60375),azure:h("azure",60376),issueDraft:h("issue-draft",60377),gitPullRequestClosed:h("git-pull-request-closed",60378),gitPullRequestDraft:h("git-pull-request-draft",60379),debugAll:h("debug-all",60380),debugCoverage:h("debug-coverage",60381),runErrors:h("run-errors",60382),folderLibrary:h("folder-library",60383),debugContinueSmall:h("debug-continue-small",60384),beakerStop:h("beaker-stop",60385),graphLine:h("graph-line",60386),graphScatter:h("graph-scatter",60387),pieChart:h("pie-chart",60388),bracket:h("bracket",60175),bracketDot:h("bracket-dot",60389),bracketError:h("bracket-error",60390),lockSmall:h("lock-small",60391),azureDevops:h("azure-devops",60392),verifiedFilled:h("verified-filled",60393),newline:h("newline",60394),layout:h("layout",60395),layoutActivitybarLeft:h("layout-activitybar-left",60396),layoutActivitybarRight:h("layout-activitybar-right",60397),layoutPanelLeft:h("layout-panel-left",60398),layoutPanelCenter:h("layout-panel-center",60399),layoutPanelJustify:h("layout-panel-justify",60400),layoutPanelRight:h("layout-panel-right",60401),layoutPanel:h("layout-panel",60402),layoutSidebarLeft:h("layout-sidebar-left",60403),layoutSidebarRight:h("layout-sidebar-right",60404),layoutStatusbar:h("layout-statusbar",60405),layoutMenubar:h("layout-menubar",60406),layoutCentered:h("layout-centered",60407),target:h("target",60408),indent:h("indent",60409),recordSmall:h("record-small",60410),errorSmall:h("error-small",60411),terminalDecorationError:h("terminal-decoration-error",60411),arrowCircleDown:h("arrow-circle-down",60412),arrowCircleLeft:h("arrow-circle-left",60413),arrowCircleRight:h("arrow-circle-right",60414),arrowCircleUp:h("arrow-circle-up",60415),layoutSidebarRightOff:h("layout-sidebar-right-off",60416),layoutPanelOff:h("layout-panel-off",60417),layoutSidebarLeftOff:h("layout-sidebar-left-off",60418),blank:h("blank",60419),heartFilled:h("heart-filled",60420),map:h("map",60421),mapHorizontal:h("map-horizontal",60421),foldHorizontal:h("fold-horizontal",60421),mapFilled:h("map-filled",60422),mapHorizontalFilled:h("map-horizontal-filled",60422),foldHorizontalFilled:h("fold-horizontal-filled",60422),circleSmall:h("circle-small",60423),bellSlash:h("bell-slash",60424),bellSlashDot:h("bell-slash-dot",60425),commentUnresolved:h("comment-unresolved",60426),gitPullRequestGoToChanges:h("git-pull-request-go-to-changes",60427),gitPullRequestNewChanges:h("git-pull-request-new-changes",60428),searchFuzzy:h("search-fuzzy",60429),commentDraft:h("comment-draft",60430),send:h("send",60431),sparkle:h("sparkle",60432),insert:h("insert",60433),mic:h("mic",60434),thumbsdownFilled:h("thumbsdown-filled",60435),thumbsupFilled:h("thumbsup-filled",60436),coffee:h("coffee",60437),snake:h("snake",60438),game:h("game",60439),vr:h("vr",60440),chip:h("chip",60441),piano:h("piano",60442),music:h("music",60443),micFilled:h("mic-filled",60444),repoFetch:h("repo-fetch",60445),copilot:h("copilot",60446),lightbulbSparkle:h("lightbulb-sparkle",60447),robot:h("robot",60448),sparkleFilled:h("sparkle-filled",60449),diffSingle:h("diff-single",60450),diffMultiple:h("diff-multiple",60451),surroundWith:h("surround-with",60452),share:h("share",60453),gitStash:h("git-stash",60454),gitStashApply:h("git-stash-apply",60455),gitStashPop:h("git-stash-pop",60456),vscode:h("vscode",60457),vscodeInsiders:h("vscode-insiders",60458),codeOss:h("code-oss",60459),runCoverage:h("run-coverage",60460),runAllCoverage:h("run-all-coverage",60461),coverage:h("coverage",60462),githubProject:h("github-project",60463),mapVertical:h("map-vertical",60464),foldVertical:h("fold-vertical",60464),mapVerticalFilled:h("map-vertical-filled",60465),foldVerticalFilled:h("fold-vertical-filled",60465)},Vo={dialogError:h("dialog-error","error"),dialogWarning:h("dialog-warning","warning"),dialogInfo:h("dialog-info","info"),dialogClose:h("dialog-close","close"),treeItemExpanded:h("tree-item-expanded","chevron-down"),treeFilterOnTypeOn:h("tree-filter-on-type-on","list-filter"),treeFilterOnTypeOff:h("tree-filter-on-type-off","list-selection"),treeFilterClear:h("tree-filter-clear","close"),treeItemLoading:h("tree-item-loading","loading"),menuSelection:h("menu-selection","check"),menuSubmenu:h("menu-submenu","chevron-right"),menuBarMore:h("menubar-more","more"),scrollbarButtonLeft:h("scrollbar-button-left","triangle-left"),scrollbarButtonRight:h("scrollbar-button-right","triangle-right"),scrollbarButtonUp:h("scrollbar-button-up","triangle-up"),scrollbarButtonDown:h("scrollbar-button-down","triangle-down"),toolBarMore:h("toolbar-more","more"),quickInputBack:h("quick-input-back","arrow-left"),dropDownButton:h("drop-down-button",60084),symbolCustomColor:h("symbol-customcolor",60252),exportIcon:h("export",60332),workspaceUnspecified:h("workspace-unspecified",60355),newLine:h("newline",60394),thumbsDownFilled:h("thumbsdown-filled",60435),thumbsUpFilled:h("thumbsup-filled",60436),gitFetch:h("git-fetch",60445),lightbulbSparkleAutofix:h("lightbulb-sparkle-autofix",60447),debugBreakpointPending:h("debug-breakpoint-pending",60377)},O={...Oo,...Vo};class jo{constructor(){this._tokenizationSupports=new Map,this._factories=new Map,this._onDidChange=new Ae,this.onDidChange=this._onDidChange.event,this._colorMap=null}handleChange(t){this._onDidChange.fire({changedLanguages:t,changedColorMap:!1})}register(t,n){return this._tokenizationSupports.set(t,n),this.handleChange([t]),Ft(()=>{this._tokenizationSupports.get(t)===n&&(this._tokenizationSupports.delete(t),this.handleChange([t]))})}get(t){return this._tokenizationSupports.get(t)||null}registerFactory(t,n){var i;(i=this._factories.get(t))===null||i===void 0||i.dispose();const r=new Go(this,t,n);return this._factories.set(t,r),Ft(()=>{const a=this._factories.get(t);!a||a!==r||(this._factories.delete(t),a.dispose())})}async getOrCreate(t){const n=this.get(t);if(n)return n;const i=this._factories.get(t);return!i||i.isResolved?null:(await i.resolve(),this.get(t))}isResolved(t){if(this.get(t))return!0;const i=this._factories.get(t);return!!(!i||i.isResolved)}setColorMap(t){this._colorMap=t,this._onDidChange.fire({changedLanguages:Array.from(this._tokenizationSupports.keys()),changedColorMap:!0})}getColorMap(){return this._colorMap}getDefaultBackground(){return this._colorMap&&this._colorMap.length>2?this._colorMap[2]:null}}class Go extends yt{get isResolved(){return this._isResolved}constructor(t,n,i){super(),this._registry=t,this._languageId=n,this._factory=i,this._isDisposed=!1,this._resolvePromise=null,this._isResolved=!1}dispose(){this._isDisposed=!0,super.dispose()}async resolve(){return this._resolvePromise||(this._resolvePromise=this._create()),this._resolvePromise}async _create(){const t=await this._factory.tokenizationSupport;this._isResolved=!0,t&&!this._isDisposed&&this._register(this._registry.register(this._languageId,t))}}class $o{constructor(t,n,i){this.offset=t,this.type=n,this.language=i,this._tokenBrand=void 0}toString(){return"("+this.offset+", "+this.type+")"}}var Bi;(function(e){const t=new Map;t.set(0,O.symbolMethod),t.set(1,O.symbolFunction),t.set(2,O.symbolConstructor),t.set(3,O.symbolField),t.set(4,O.symbolVariable),t.set(5,O.symbolClass),t.set(6,O.symbolStruct),t.set(7,O.symbolInterface),t.set(8,O.symbolModule),t.set(9,O.symbolProperty),t.set(10,O.symbolEvent),t.set(11,O.symbolOperator),t.set(12,O.symbolUnit),t.set(13,O.symbolValue),t.set(15,O.symbolEnum),t.set(14,O.symbolConstant),t.set(15,O.symbolEnum),t.set(16,O.symbolEnumMember),t.set(17,O.symbolKeyword),t.set(27,O.symbolSnippet),t.set(18,O.symbolText),t.set(19,O.symbolColor),t.set(20,O.symbolFile),t.set(21,O.symbolReference),t.set(22,O.symbolCustomColor),t.set(23,O.symbolFolder),t.set(24,O.symbolTypeParameter),t.set(25,O.account),t.set(26,O.issues);function n(a){let s=t.get(a);return s||(console.info("No codicon found for CompletionItemKind "+a),s=O.symbolProperty),s}e.toIcon=n;const i=new Map;i.set("method",0),i.set("function",1),i.set("constructor",2),i.set("field",3),i.set("variable",4),i.set("class",5),i.set("struct",6),i.set("interface",7),i.set("module",8),i.set("property",9),i.set("event",10),i.set("operator",11),i.set("unit",12),i.set("value",13),i.set("constant",14),i.set("enum",15),i.set("enum-member",16),i.set("enumMember",16),i.set("keyword",17),i.set("snippet",27),i.set("text",18),i.set("color",19),i.set("file",20),i.set("reference",21),i.set("customcolor",22),i.set("folder",23),i.set("type-parameter",24),i.set("typeParameter",24),i.set("account",25),i.set("issue",26);function r(a,s){let o=i.get(a);return typeof o>"u"&&!s&&(o=9),o}e.fromString=r})(Bi||(Bi={}));var qi;(function(e){e[e.Automatic=0]="Automatic",e[e.Explicit=1]="Explicit"})(qi||(qi={}));var Oi;(function(e){e[e.Automatic=0]="Automatic",e[e.PasteAs=1]="PasteAs"})(Oi||(Oi={}));var Vi;(function(e){e[e.Invoke=1]="Invoke",e[e.TriggerCharacter=2]="TriggerCharacter",e[e.ContentChange=3]="ContentChange"})(Vi||(Vi={}));var ji;(function(e){e[e.Text=0]="Text",e[e.Read=1]="Read",e[e.Write=2]="Write"})(ji||(ji={})),K("Array","array"),K("Boolean","boolean"),K("Class","class"),K("Constant","constant"),K("Constructor","constructor"),K("Enum","enumeration"),K("EnumMember","enumeration member"),K("Event","event"),K("Field","field"),K("File","file"),K("Function","function"),K("Interface","interface"),K("Key","key"),K("Method","method"),K("Module","module"),K("Namespace","namespace"),K("Null","null"),K("Number","number"),K("Object","object"),K("Operator","operator"),K("Package","package"),K("Property","property"),K("String","string"),K("Struct","struct"),K("TypeParameter","type parameter"),K("Variable","variable");var Gi;(function(e){const t=new Map;t.set(0,O.symbolFile),t.set(1,O.symbolModule),t.set(2,O.symbolNamespace),t.set(3,O.symbolPackage),t.set(4,O.symbolClass),t.set(5,O.symbolMethod),t.set(6,O.symbolProperty),t.set(7,O.symbolField),t.set(8,O.symbolConstructor),t.set(9,O.symbolEnum),t.set(10,O.symbolInterface),t.set(11,O.symbolFunction),t.set(12,O.symbolVariable),t.set(13,O.symbolConstant),t.set(14,O.symbolString),t.set(15,O.symbolNumber),t.set(16,O.symbolBoolean),t.set(17,O.symbolArray),t.set(18,O.symbolObject),t.set(19,O.symbolKey),t.set(20,O.symbolNull),t.set(21,O.symbolEnumMember),t.set(22,O.symbolStruct),t.set(23,O.symbolEvent),t.set(24,O.symbolOperator),t.set(25,O.symbolTypeParameter);function n(i){let r=t.get(i);return r||(console.info("No codicon found for SymbolKind "+i),r=O.symbolProperty),r}e.toIcon=n})(Gi||(Gi={}));var $i;(function(e){e[e.AIGenerated=1]="AIGenerated"})($i||($i={}));var Xi;(function(e){function t(n){return!n||typeof n!="object"?!1:typeof n.id=="string"&&typeof n.title=="string"}e.is=t})(Xi||(Xi={}));var Ji;(function(e){e[e.Type=1]="Type",e[e.Parameter=2]="Parameter"})(Ji||(Ji={})),new jo;var Qi;(function(e){e[e.Invoke=0]="Invoke",e[e.Automatic=1]="Automatic"})(Qi||(Qi={}));var Yi;(function(e){e[e.Unknown=0]="Unknown",e[e.Disabled=1]="Disabled",e[e.Enabled=2]="Enabled"})(Yi||(Yi={}));var Zi;(function(e){e[e.Invoke=1]="Invoke",e[e.Auto=2]="Auto"})(Zi||(Zi={}));var Ki;(function(e){e[e.None=0]="None",e[e.KeepWhitespace=1]="KeepWhitespace",e[e.InsertAsSnippet=4]="InsertAsSnippet"})(Ki||(Ki={}));var er;(function(e){e[e.Method=0]="Method",e[e.Function=1]="Function",e[e.Constructor=2]="Constructor",e[e.Field=3]="Field",e[e.Variable=4]="Variable",e[e.Class=5]="Class",e[e.Struct=6]="Struct",e[e.Interface=7]="Interface",e[e.Module=8]="Module",e[e.Property=9]="Property",e[e.Event=10]="Event",e[e.Operator=11]="Operator",e[e.Unit=12]="Unit",e[e.Value=13]="Value",e[e.Constant=14]="Constant",e[e.Enum=15]="Enum",e[e.EnumMember=16]="EnumMember",e[e.Keyword=17]="Keyword",e[e.Text=18]="Text",e[e.Color=19]="Color",e[e.File=20]="File",e[e.Reference=21]="Reference",e[e.Customcolor=22]="Customcolor",e[e.Folder=23]="Folder",e[e.TypeParameter=24]="TypeParameter",e[e.User=25]="User",e[e.Issue=26]="Issue",e[e.Snippet=27]="Snippet"})(er||(er={}));var tr;(function(e){e[e.Deprecated=1]="Deprecated"})(tr||(tr={}));var nr;(function(e){e[e.Invoke=0]="Invoke",e[e.TriggerCharacter=1]="TriggerCharacter",e[e.TriggerForIncompleteCompletions=2]="TriggerForIncompleteCompletions"})(nr||(nr={}));var ir;(function(e){e[e.EXACT=0]="EXACT",e[e.ABOVE=1]="ABOVE",e[e.BELOW=2]="BELOW"})(ir||(ir={}));var rr;(function(e){e[e.NotSet=0]="NotSet",e[e.ContentFlush=1]="ContentFlush",e[e.RecoverFromMarkers=2]="RecoverFromMarkers",e[e.Explicit=3]="Explicit",e[e.Paste=4]="Paste",e[e.Undo=5]="Undo",e[e.Redo=6]="Redo"})(rr||(rr={}));var ar;(function(e){e[e.LF=1]="LF",e[e.CRLF=2]="CRLF"})(ar||(ar={}));var sr;(function(e){e[e.Text=0]="Text",e[e.Read=1]="Read",e[e.Write=2]="Write"})(sr||(sr={}));var or;(function(e){e[e.None=0]="None",e[e.Keep=1]="Keep",e[e.Brackets=2]="Brackets",e[e.Advanced=3]="Advanced",e[e.Full=4]="Full"})(or||(or={}));var lr;(function(e){e[e.acceptSuggestionOnCommitCharacter=0]="acceptSuggestionOnCommitCharacter",e[e.acceptSuggestionOnEnter=1]="acceptSuggestionOnEnter",e[e.accessibilitySupport=2]="accessibilitySupport",e[e.accessibilityPageSize=3]="accessibilityPageSize",e[e.ariaLabel=4]="ariaLabel",e[e.ariaRequired=5]="ariaRequired",e[e.autoClosingBrackets=6]="autoClosingBrackets",e[e.autoClosingComments=7]="autoClosingComments",e[e.screenReaderAnnounceInlineSuggestion=8]="screenReaderAnnounceInlineSuggestion",e[e.autoClosingDelete=9]="autoClosingDelete",e[e.autoClosingOvertype=10]="autoClosingOvertype",e[e.autoClosingQuotes=11]="autoClosingQuotes",e[e.autoIndent=12]="autoIndent",e[e.automaticLayout=13]="automaticLayout",e[e.autoSurround=14]="autoSurround",e[e.bracketPairColorization=15]="bracketPairColorization",e[e.guides=16]="guides",e[e.codeLens=17]="codeLens",e[e.codeLensFontFamily=18]="codeLensFontFamily",e[e.codeLensFontSize=19]="codeLensFontSize",e[e.colorDecorators=20]="colorDecorators",e[e.colorDecoratorsLimit=21]="colorDecoratorsLimit",e[e.columnSelection=22]="columnSelection",e[e.comments=23]="comments",e[e.contextmenu=24]="contextmenu",e[e.copyWithSyntaxHighlighting=25]="copyWithSyntaxHighlighting",e[e.cursorBlinking=26]="cursorBlinking",e[e.cursorSmoothCaretAnimation=27]="cursorSmoothCaretAnimation",e[e.cursorStyle=28]="cursorStyle",e[e.cursorSurroundingLines=29]="cursorSurroundingLines",e[e.cursorSurroundingLinesStyle=30]="cursorSurroundingLinesStyle",e[e.cursorWidth=31]="cursorWidth",e[e.disableLayerHinting=32]="disableLayerHinting",e[e.disableMonospaceOptimizations=33]="disableMonospaceOptimizations",e[e.domReadOnly=34]="domReadOnly",e[e.dragAndDrop=35]="dragAndDrop",e[e.dropIntoEditor=36]="dropIntoEditor",e[e.emptySelectionClipboard=37]="emptySelectionClipboard",e[e.experimentalWhitespaceRendering=38]="experimentalWhitespaceRendering",e[e.extraEditorClassName=39]="extraEditorClassName",e[e.fastScrollSensitivity=40]="fastScrollSensitivity",e[e.find=41]="find",e[e.fixedOverflowWidgets=42]="fixedOverflowWidgets",e[e.folding=43]="folding",e[e.foldingStrategy=44]="foldingStrategy",e[e.foldingHighlight=45]="foldingHighlight",e[e.foldingImportsByDefault=46]="foldingImportsByDefault",e[e.foldingMaximumRegions=47]="foldingMaximumRegions",e[e.unfoldOnClickAfterEndOfLine=48]="unfoldOnClickAfterEndOfLine",e[e.fontFamily=49]="fontFamily",e[e.fontInfo=50]="fontInfo",e[e.fontLigatures=51]="fontLigatures",e[e.fontSize=52]="fontSize",e[e.fontWeight=53]="fontWeight",e[e.fontVariations=54]="fontVariations",e[e.formatOnPaste=55]="formatOnPaste",e[e.formatOnType=56]="formatOnType",e[e.glyphMargin=57]="glyphMargin",e[e.gotoLocation=58]="gotoLocation",e[e.hideCursorInOverviewRuler=59]="hideCursorInOverviewRuler",e[e.hover=60]="hover",e[e.inDiffEditor=61]="inDiffEditor",e[e.inlineSuggest=62]="inlineSuggest",e[e.inlineEdit=63]="inlineEdit",e[e.letterSpacing=64]="letterSpacing",e[e.lightbulb=65]="lightbulb",e[e.lineDecorationsWidth=66]="lineDecorationsWidth",e[e.lineHeight=67]="lineHeight",e[e.lineNumbers=68]="lineNumbers",e[e.lineNumbersMinChars=69]="lineNumbersMinChars",e[e.linkedEditing=70]="linkedEditing",e[e.links=71]="links",e[e.matchBrackets=72]="matchBrackets",e[e.minimap=73]="minimap",e[e.mouseStyle=74]="mouseStyle",e[e.mouseWheelScrollSensitivity=75]="mouseWheelScrollSensitivity",e[e.mouseWheelZoom=76]="mouseWheelZoom",e[e.multiCursorMergeOverlapping=77]="multiCursorMergeOverlapping",e[e.multiCursorModifier=78]="multiCursorModifier",e[e.multiCursorPaste=79]="multiCursorPaste",e[e.multiCursorLimit=80]="multiCursorLimit",e[e.occurrencesHighlight=81]="occurrencesHighlight",e[e.overviewRulerBorder=82]="overviewRulerBorder",e[e.overviewRulerLanes=83]="overviewRulerLanes",e[e.padding=84]="padding",e[e.pasteAs=85]="pasteAs",e[e.parameterHints=86]="parameterHints",e[e.peekWidgetDefaultFocus=87]="peekWidgetDefaultFocus",e[e.definitionLinkOpensInPeek=88]="definitionLinkOpensInPeek",e[e.quickSuggestions=89]="quickSuggestions",e[e.quickSuggestionsDelay=90]="quickSuggestionsDelay",e[e.readOnly=91]="readOnly",e[e.readOnlyMessage=92]="readOnlyMessage",e[e.renameOnType=93]="renameOnType",e[e.renderControlCharacters=94]="renderControlCharacters",e[e.renderFinalNewline=95]="renderFinalNewline",e[e.renderLineHighlight=96]="renderLineHighlight",e[e.renderLineHighlightOnlyWhenFocus=97]="renderLineHighlightOnlyWhenFocus",e[e.renderValidationDecorations=98]="renderValidationDecorations",e[e.renderWhitespace=99]="renderWhitespace",e[e.revealHorizontalRightPadding=100]="revealHorizontalRightPadding",e[e.roundedSelection=101]="roundedSelection",e[e.rulers=102]="rulers",e[e.scrollbar=103]="scrollbar",e[e.scrollBeyondLastColumn=104]="scrollBeyondLastColumn",e[e.scrollBeyondLastLine=105]="scrollBeyondLastLine",e[e.scrollPredominantAxis=106]="scrollPredominantAxis",e[e.selectionClipboard=107]="selectionClipboard",e[e.selectionHighlight=108]="selectionHighlight",e[e.selectOnLineNumbers=109]="selectOnLineNumbers",e[e.showFoldingControls=110]="showFoldingControls",e[e.showUnused=111]="showUnused",e[e.snippetSuggestions=112]="snippetSuggestions",e[e.smartSelect=113]="smartSelect",e[e.smoothScrolling=114]="smoothScrolling",e[e.stickyScroll=115]="stickyScroll",e[e.stickyTabStops=116]="stickyTabStops",e[e.stopRenderingLineAfter=117]="stopRenderingLineAfter",e[e.suggest=118]="suggest",e[e.suggestFontSize=119]="suggestFontSize",e[e.suggestLineHeight=120]="suggestLineHeight",e[e.suggestOnTriggerCharacters=121]="suggestOnTriggerCharacters",e[e.suggestSelection=122]="suggestSelection",e[e.tabCompletion=123]="tabCompletion",e[e.tabIndex=124]="tabIndex",e[e.unicodeHighlighting=125]="unicodeHighlighting",e[e.unusualLineTerminators=126]="unusualLineTerminators",e[e.useShadowDOM=127]="useShadowDOM",e[e.useTabStops=128]="useTabStops",e[e.wordBreak=129]="wordBreak",e[e.wordSegmenterLocales=130]="wordSegmenterLocales",e[e.wordSeparators=131]="wordSeparators",e[e.wordWrap=132]="wordWrap",e[e.wordWrapBreakAfterCharacters=133]="wordWrapBreakAfterCharacters",e[e.wordWrapBreakBeforeCharacters=134]="wordWrapBreakBeforeCharacters",e[e.wordWrapColumn=135]="wordWrapColumn",e[e.wordWrapOverride1=136]="wordWrapOverride1",e[e.wordWrapOverride2=137]="wordWrapOverride2",e[e.wrappingIndent=138]="wrappingIndent",e[e.wrappingStrategy=139]="wrappingStrategy",e[e.showDeprecated=140]="showDeprecated",e[e.inlayHints=141]="inlayHints",e[e.editorClassName=142]="editorClassName",e[e.pixelRatio=143]="pixelRatio",e[e.tabFocusMode=144]="tabFocusMode",e[e.layoutInfo=145]="layoutInfo",e[e.wrappingInfo=146]="wrappingInfo",e[e.defaultColorDecorators=147]="defaultColorDecorators",e[e.colorDecoratorsActivatedOn=148]="colorDecoratorsActivatedOn",e[e.inlineCompletionsAccessibilityVerbose=149]="inlineCompletionsAccessibilityVerbose"})(lr||(lr={}));var ur;(function(e){e[e.TextDefined=0]="TextDefined",e[e.LF=1]="LF",e[e.CRLF=2]="CRLF"})(ur||(ur={}));var cr;(function(e){e[e.LF=0]="LF",e[e.CRLF=1]="CRLF"})(cr||(cr={}));var hr;(function(e){e[e.Left=1]="Left",e[e.Center=2]="Center",e[e.Right=3]="Right"})(hr||(hr={}));var dr;(function(e){e[e.None=0]="None",e[e.Indent=1]="Indent",e[e.IndentOutdent=2]="IndentOutdent",e[e.Outdent=3]="Outdent"})(dr||(dr={}));var mr;(function(e){e[e.Both=0]="Both",e[e.Right=1]="Right",e[e.Left=2]="Left",e[e.None=3]="None"})(mr||(mr={}));var fr;(function(e){e[e.Type=1]="Type",e[e.Parameter=2]="Parameter"})(fr||(fr={}));var pr;(function(e){e[e.Automatic=0]="Automatic",e[e.Explicit=1]="Explicit"})(pr||(pr={}));var gr;(function(e){e[e.Invoke=0]="Invoke",e[e.Automatic=1]="Automatic"})(gr||(gr={}));var Bn;(function(e){e[e.DependsOnKbLayout=-1]="DependsOnKbLayout",e[e.Unknown=0]="Unknown",e[e.Backspace=1]="Backspace",e[e.Tab=2]="Tab",e[e.Enter=3]="Enter",e[e.Shift=4]="Shift",e[e.Ctrl=5]="Ctrl",e[e.Alt=6]="Alt",e[e.PauseBreak=7]="PauseBreak",e[e.CapsLock=8]="CapsLock",e[e.Escape=9]="Escape",e[e.Space=10]="Space",e[e.PageUp=11]="PageUp",e[e.PageDown=12]="PageDown",e[e.End=13]="End",e[e.Home=14]="Home",e[e.LeftArrow=15]="LeftArrow",e[e.UpArrow=16]="UpArrow",e[e.RightArrow=17]="RightArrow",e[e.DownArrow=18]="DownArrow",e[e.Insert=19]="Insert",e[e.Delete=20]="Delete",e[e.Digit0=21]="Digit0",e[e.Digit1=22]="Digit1",e[e.Digit2=23]="Digit2",e[e.Digit3=24]="Digit3",e[e.Digit4=25]="Digit4",e[e.Digit5=26]="Digit5",e[e.Digit6=27]="Digit6",e[e.Digit7=28]="Digit7",e[e.Digit8=29]="Digit8",e[e.Digit9=30]="Digit9",e[e.KeyA=31]="KeyA",e[e.KeyB=32]="KeyB",e[e.KeyC=33]="KeyC",e[e.KeyD=34]="KeyD",e[e.KeyE=35]="KeyE",e[e.KeyF=36]="KeyF",e[e.KeyG=37]="KeyG",e[e.KeyH=38]="KeyH",e[e.KeyI=39]="KeyI",e[e.KeyJ=40]="KeyJ",e[e.KeyK=41]="KeyK",e[e.KeyL=42]="KeyL",e[e.KeyM=43]="KeyM",e[e.KeyN=44]="KeyN",e[e.KeyO=45]="KeyO",e[e.KeyP=46]="KeyP",e[e.KeyQ=47]="KeyQ",e[e.KeyR=48]="KeyR",e[e.KeyS=49]="KeyS",e[e.KeyT=50]="KeyT",e[e.KeyU=51]="KeyU",e[e.KeyV=52]="KeyV",e[e.KeyW=53]="KeyW",e[e.KeyX=54]="KeyX",e[e.KeyY=55]="KeyY",e[e.KeyZ=56]="KeyZ",e[e.Meta=57]="Meta",e[e.ContextMenu=58]="ContextMenu",e[e.F1=59]="F1",e[e.F2=60]="F2",e[e.F3=61]="F3",e[e.F4=62]="F4",e[e.F5=63]="F5",e[e.F6=64]="F6",e[e.F7=65]="F7",e[e.F8=66]="F8",e[e.F9=67]="F9",e[e.F10=68]="F10",e[e.F11=69]="F11",e[e.F12=70]="F12",e[e.F13=71]="F13",e[e.F14=72]="F14",e[e.F15=73]="F15",e[e.F16=74]="F16",e[e.F17=75]="F17",e[e.F18=76]="F18",e[e.F19=77]="F19",e[e.F20=78]="F20",e[e.F21=79]="F21",e[e.F22=80]="F22",e[e.F23=81]="F23",e[e.F24=82]="F24",e[e.NumLock=83]="NumLock",e[e.ScrollLock=84]="ScrollLock",e[e.Semicolon=85]="Semicolon",e[e.Equal=86]="Equal",e[e.Comma=87]="Comma",e[e.Minus=88]="Minus",e[e.Period=89]="Period",e[e.Slash=90]="Slash",e[e.Backquote=91]="Backquote",e[e.BracketLeft=92]="BracketLeft",e[e.Backslash=93]="Backslash",e[e.BracketRight=94]="BracketRight",e[e.Quote=95]="Quote",e[e.OEM_8=96]="OEM_8",e[e.IntlBackslash=97]="IntlBackslash",e[e.Numpad0=98]="Numpad0",e[e.Numpad1=99]="Numpad1",e[e.Numpad2=100]="Numpad2",e[e.Numpad3=101]="Numpad3",e[e.Numpad4=102]="Numpad4",e[e.Numpad5=103]="Numpad5",e[e.Numpad6=104]="Numpad6",e[e.Numpad7=105]="Numpad7",e[e.Numpad8=106]="Numpad8",e[e.Numpad9=107]="Numpad9",e[e.NumpadMultiply=108]="NumpadMultiply",e[e.NumpadAdd=109]="NumpadAdd",e[e.NUMPAD_SEPARATOR=110]="NUMPAD_SEPARATOR",e[e.NumpadSubtract=111]="NumpadSubtract",e[e.NumpadDecimal=112]="NumpadDecimal",e[e.NumpadDivide=113]="NumpadDivide",e[e.KEY_IN_COMPOSITION=114]="KEY_IN_COMPOSITION",e[e.ABNT_C1=115]="ABNT_C1",e[e.ABNT_C2=116]="ABNT_C2",e[e.AudioVolumeMute=117]="AudioVolumeMute",e[e.AudioVolumeUp=118]="AudioVolumeUp",e[e.AudioVolumeDown=119]="AudioVolumeDown",e[e.BrowserSearch=120]="BrowserSearch",e[e.BrowserHome=121]="BrowserHome",e[e.BrowserBack=122]="BrowserBack",e[e.BrowserForward=123]="BrowserForward",e[e.MediaTrackNext=124]="MediaTrackNext",e[e.MediaTrackPrevious=125]="MediaTrackPrevious",e[e.MediaStop=126]="MediaStop",e[e.MediaPlayPause=127]="MediaPlayPause",e[e.LaunchMediaPlayer=128]="LaunchMediaPlayer",e[e.LaunchMail=129]="LaunchMail",e[e.LaunchApp2=130]="LaunchApp2",e[e.Clear=131]="Clear",e[e.MAX_VALUE=132]="MAX_VALUE"})(Bn||(Bn={}));var qn;(function(e){e[e.Hint=1]="Hint",e[e.Info=2]="Info",e[e.Warning=4]="Warning",e[e.Error=8]="Error"})(qn||(qn={}));var On;(function(e){e[e.Unnecessary=1]="Unnecessary",e[e.Deprecated=2]="Deprecated"})(On||(On={}));var br;(function(e){e[e.Inline=1]="Inline",e[e.Gutter=2]="Gutter"})(br||(br={}));var vr;(function(e){e[e.Normal=1]="Normal",e[e.Underlined=2]="Underlined"})(vr||(vr={}));var _r;(function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.TEXTAREA=1]="TEXTAREA",e[e.GUTTER_GLYPH_MARGIN=2]="GUTTER_GLYPH_MARGIN",e[e.GUTTER_LINE_NUMBERS=3]="GUTTER_LINE_NUMBERS",e[e.GUTTER_LINE_DECORATIONS=4]="GUTTER_LINE_DECORATIONS",e[e.GUTTER_VIEW_ZONE=5]="GUTTER_VIEW_ZONE",e[e.CONTENT_TEXT=6]="CONTENT_TEXT",e[e.CONTENT_EMPTY=7]="CONTENT_EMPTY",e[e.CONTENT_VIEW_ZONE=8]="CONTENT_VIEW_ZONE",e[e.CONTENT_WIDGET=9]="CONTENT_WIDGET",e[e.OVERVIEW_RULER=10]="OVERVIEW_RULER",e[e.SCROLLBAR=11]="SCROLLBAR",e[e.OVERLAY_WIDGET=12]="OVERLAY_WIDGET",e[e.OUTSIDE_EDITOR=13]="OUTSIDE_EDITOR"})(_r||(_r={}));var wr;(function(e){e[e.AIGenerated=1]="AIGenerated"})(wr||(wr={}));var yr;(function(e){e[e.TOP_RIGHT_CORNER=0]="TOP_RIGHT_CORNER",e[e.BOTTOM_RIGHT_CORNER=1]="BOTTOM_RIGHT_CORNER",e[e.TOP_CENTER=2]="TOP_CENTER"})(yr||(yr={}));var xr;(function(e){e[e.Left=1]="Left",e[e.Center=2]="Center",e[e.Right=4]="Right",e[e.Full=7]="Full"})(xr||(xr={}));var Tr;(function(e){e[e.Word=0]="Word",e[e.Line=1]="Line",e[e.Suggest=2]="Suggest"})(Tr||(Tr={}));var kr;(function(e){e[e.Left=0]="Left",e[e.Right=1]="Right",e[e.None=2]="None",e[e.LeftOfInjectedText=3]="LeftOfInjectedText",e[e.RightOfInjectedText=4]="RightOfInjectedText"})(kr||(kr={}));var Ar;(function(e){e[e.Off=0]="Off",e[e.On=1]="On",e[e.Relative=2]="Relative",e[e.Interval=3]="Interval",e[e.Custom=4]="Custom"})(Ar||(Ar={}));var Sr;(function(e){e[e.None=0]="None",e[e.Text=1]="Text",e[e.Blocks=2]="Blocks"})(Sr||(Sr={}));var Lr;(function(e){e[e.Smooth=0]="Smooth",e[e.Immediate=1]="Immediate"})(Lr||(Lr={}));var Cr;(function(e){e[e.Auto=1]="Auto",e[e.Hidden=2]="Hidden",e[e.Visible=3]="Visible"})(Cr||(Cr={}));var Vn;(function(e){e[e.LTR=0]="LTR",e[e.RTL=1]="RTL"})(Vn||(Vn={}));var Er;(function(e){e.Off="off",e.OnCode="onCode",e.On="on"})(Er||(Er={}));var Rr;(function(e){e[e.Invoke=1]="Invoke",e[e.TriggerCharacter=2]="TriggerCharacter",e[e.ContentChange=3]="ContentChange"})(Rr||(Rr={}));var Mr;(function(e){e[e.File=0]="File",e[e.Module=1]="Module",e[e.Namespace=2]="Namespace",e[e.Package=3]="Package",e[e.Class=4]="Class",e[e.Method=5]="Method",e[e.Property=6]="Property",e[e.Field=7]="Field",e[e.Constructor=8]="Constructor",e[e.Enum=9]="Enum",e[e.Interface=10]="Interface",e[e.Function=11]="Function",e[e.Variable=12]="Variable",e[e.Constant=13]="Constant",e[e.String=14]="String",e[e.Number=15]="Number",e[e.Boolean=16]="Boolean",e[e.Array=17]="Array",e[e.Object=18]="Object",e[e.Key=19]="Key",e[e.Null=20]="Null",e[e.EnumMember=21]="EnumMember",e[e.Struct=22]="Struct",e[e.Event=23]="Event",e[e.Operator=24]="Operator",e[e.TypeParameter=25]="TypeParameter"})(Mr||(Mr={}));var Dr;(function(e){e[e.Deprecated=1]="Deprecated"})(Dr||(Dr={}));var Nr;(function(e){e[e.Hidden=0]="Hidden",e[e.Blink=1]="Blink",e[e.Smooth=2]="Smooth",e[e.Phase=3]="Phase",e[e.Expand=4]="Expand",e[e.Solid=5]="Solid"})(Nr||(Nr={}));var Ir;(function(e){e[e.Line=1]="Line",e[e.Block=2]="Block",e[e.Underline=3]="Underline",e[e.LineThin=4]="LineThin",e[e.BlockOutline=5]="BlockOutline",e[e.UnderlineThin=6]="UnderlineThin"})(Ir||(Ir={}));var zr;(function(e){e[e.AlwaysGrowsWhenTypingAtEdges=0]="AlwaysGrowsWhenTypingAtEdges",e[e.NeverGrowsWhenTypingAtEdges=1]="NeverGrowsWhenTypingAtEdges",e[e.GrowsOnlyWhenTypingBefore=2]="GrowsOnlyWhenTypingBefore",e[e.GrowsOnlyWhenTypingAfter=3]="GrowsOnlyWhenTypingAfter"})(zr||(zr={}));var Hr;(function(e){e[e.None=0]="None",e[e.Same=1]="Same",e[e.Indent=2]="Indent",e[e.DeepIndent=3]="DeepIndent"})(Hr||(Hr={}));class kt{static chord(t,n){return qo(t,n)}}kt.CtrlCmd=2048,kt.Shift=1024,kt.Alt=512,kt.WinCtrl=256;function Xo(){return{editor:void 0,languages:void 0,CancellationTokenSource:Wo,Emitter:Ae,KeyCode:Bn,KeyMod:kt,Position:Ne,Range:oe,Selection:ve,SelectionDirection:Vn,MarkerSeverity:qn,MarkerTag:On,Uri:Mn,Token:$o}}var Ur;class Jo{constructor(){this[Ur]="LinkedMap",this._map=new Map,this._head=void 0,this._tail=void 0,this._size=0,this._state=0}clear(){this._map.clear(),this._head=void 0,this._tail=void 0,this._size=0,this._state++}isEmpty(){return!this._head&&!this._tail}get size(){return this._size}get first(){var t;return(t=this._head)===null||t===void 0?void 0:t.value}get last(){var t;return(t=this._tail)===null||t===void 0?void 0:t.value}has(t){return this._map.has(t)}get(t,n=0){const i=this._map.get(t);if(i)return n!==0&&this.touch(i,n),i.value}set(t,n,i=0){let r=this._map.get(t);if(r)r.value=n,i!==0&&this.touch(r,i);else{switch(r={key:t,value:n,next:void 0,previous:void 0},i){case 0:this.addItemLast(r);break;case 1:this.addItemFirst(r);break;case 2:this.addItemLast(r);break;default:this.addItemLast(r);break}this._map.set(t,r),this._size++}return this}delete(t){return!!this.remove(t)}remove(t){const n=this._map.get(t);if(n)return this._map.delete(t),this.removeItem(n),this._size--,n.value}shift(){if(!this._head&&!this._tail)return;if(!this._head||!this._tail)throw new Error("Invalid list");const t=this._head;return this._map.delete(t.key),this.removeItem(t),this._size--,t.value}forEach(t,n){const i=this._state;let r=this._head;for(;r;){if(n?t.bind(n)(r.value,r.key,this):t(r.value,r.key,this),this._state!==i)throw new Error("LinkedMap got modified during iteration.");r=r.next}}keys(){const t=this,n=this._state;let i=this._head;const r={[Symbol.iterator](){return r},next(){if(t._state!==n)throw new Error("LinkedMap got modified during iteration.");if(i){const a={value:i.key,done:!1};return i=i.next,a}else return{value:void 0,done:!0}}};return r}values(){const t=this,n=this._state;let i=this._head;const r={[Symbol.iterator](){return r},next(){if(t._state!==n)throw new Error("LinkedMap got modified during iteration.");if(i){const a={value:i.value,done:!1};return i=i.next,a}else return{value:void 0,done:!0}}};return r}entries(){const t=this,n=this._state;let i=this._head;const r={[Symbol.iterator](){return r},next(){if(t._state!==n)throw new Error("LinkedMap got modified during iteration.");if(i){const a={value:[i.key,i.value],done:!1};return i=i.next,a}else return{value:void 0,done:!0}}};return r}[(Ur=Symbol.toStringTag,Symbol.iterator)](){return this.entries()}trimOld(t){if(t>=this.size)return;if(t===0){this.clear();return}let n=this._head,i=this.size;for(;n&&i>t;)this._map.delete(n.key),n=n.next,i--;this._head=n,this._size=i,n&&(n.previous=void 0),this._state++}addItemFirst(t){if(!this._head&&!this._tail)this._tail=t;else if(this._head)t.next=this._head,this._head.previous=t;else throw new Error("Invalid list");this._head=t,this._state++}addItemLast(t){if(!this._head&&!this._tail)this._head=t;else if(this._tail)t.previous=this._tail,this._tail.next=t;else throw new Error("Invalid list");this._tail=t,this._state++}removeItem(t){if(t===this._head&&t===this._tail)this._head=void 0,this._tail=void 0;else if(t===this._head){if(!t.next)throw new Error("Invalid list");t.next.previous=void 0,this._head=t.next}else if(t===this._tail){if(!t.previous)throw new Error("Invalid list");t.previous.next=void 0,this._tail=t.previous}else{const n=t.next,i=t.previous;if(!n||!i)throw new Error("Invalid list");n.previous=i,i.next=n}t.next=void 0,t.previous=void 0,this._state++}touch(t,n){if(!this._head||!this._tail)throw new Error("Invalid list");if(!(n!==1&&n!==2)){if(n===1){if(t===this._head)return;const i=t.next,r=t.previous;t===this._tail?(r.next=void 0,this._tail=r):(i.previous=r,r.next=i),t.previous=void 0,t.next=this._head,this._head.previous=t,this._head=t,this._state++}else if(n===2){if(t===this._tail)return;const i=t.next,r=t.previous;t===this._head?(i.previous=void 0,this._head=i):(i.previous=r,r.next=i),t.next=void 0,t.previous=this._tail,this._tail.next=t,this._tail=t,this._state++}}}toJSON(){const t=[];return this.forEach((n,i)=>{t.push([i,n])}),t}fromJSON(t){this.clear();for(const[n,i]of t)this.set(n,i)}}class Qo extends Jo{constructor(t,n=1){super(),this._limit=t,this._ratio=Math.min(Math.max(0,n),1)}get limit(){return this._limit}set limit(t){this._limit=t,this.checkTrim()}get(t,n=2){return super.get(t,n)}peek(t){return super.get(t,0)}set(t,n){return super.set(t,n,2),this.checkTrim(),this}checkTrim(){this.size>this._limit&&this.trimOld(Math.round(this._limit*this._ratio))}}class Yo{constructor(){this.map=new Map}add(t,n){let i=this.map.get(t);i||(i=new Set,this.map.set(t,i)),i.add(n)}delete(t,n){const i=this.map.get(t);i&&(i.delete(n),i.size===0&&this.map.delete(t))}forEach(t,n){const i=this.map.get(t);i&&i.forEach(n)}get(t){const n=this.map.get(t);return n||new Set}}new Qo(10);var Wr;(function(e){e[e.Left=1]="Left",e[e.Center=2]="Center",e[e.Right=4]="Right",e[e.Full=7]="Full"})(Wr||(Wr={}));var Fr;(function(e){e[e.Left=1]="Left",e[e.Center=2]="Center",e[e.Right=3]="Right"})(Fr||(Fr={}));var Pr;(function(e){e[e.Both=0]="Both",e[e.Right=1]="Right",e[e.Left=2]="Left",e[e.None=3]="None"})(Pr||(Pr={}));function Zo(e,t,n,i,r){if(i===0)return!0;const a=t.charCodeAt(i-1);if(e.get(a)!==0||a===13||a===10)return!0;if(r>0){const s=t.charCodeAt(i);if(e.get(s)!==0)return!0}return!1}function Ko(e,t,n,i,r){if(i+r===n)return!0;const a=t.charCodeAt(i+r);if(e.get(a)!==0||a===13||a===10)return!0;if(r>0){const s=t.charCodeAt(i+r-1);if(e.get(s)!==0)return!0}return!1}function el(e,t,n,i,r){return Zo(e,t,n,i,r)&&Ko(e,t,n,i,r)}class tl{constructor(t,n){this._wordSeparators=t,this._searchRegex=n,this._prevMatchStartIndex=-1,this._prevMatchLength=0}reset(t){this._searchRegex.lastIndex=t,this._prevMatchStartIndex=-1,this._prevMatchLength=0}next(t){const n=t.length;let i;do{if(this._prevMatchStartIndex+this._prevMatchLength===n||(i=this._searchRegex.exec(t),!i))return null;const r=i.index,a=i[0].length;if(r===this._prevMatchStartIndex&&a===this._prevMatchLength){if(a===0){Vs(t,n,this._searchRegex.lastIndex)>65535?this._searchRegex.lastIndex+=2:this._searchRegex.lastIndex+=1;continue}return null}if(this._prevMatchStartIndex=r,this._prevMatchLength=a,!this._wordSeparators||el(this._wordSeparators,t,n,r,a))return i}while(i);return null}}function nl(e,t="Unreachable"){throw new Error(t)}function Yt(e){if(!e()){debugger;e(),mi(new Ue("Assertion Failed"))}}function Br(e,t){let n=0;for(;n<e.length-1;){const i=e[n],r=e[n+1];if(!t(i,r))return!1;n++}return!0}class il{static computeUnicodeHighlights(t,n,i){const r=i?i.startLineNumber:1,a=i?i.endLineNumber:t.getLineCount(),s=new qr(n),o=s.getCandidateCodePoints();let l;o==="allNonBasicAscii"?l=new RegExp("[^\\t\\n\\r\\x20-\\x7E]","g"):l=new RegExp(`${rl(Array.from(o))}`,"g");const u=new tl(null,l),c=[];let d=!1,m,f=0,b=0,p=0;e:for(let w=r,x=a;w<=x;w++){const _=t.getLineContent(w),y=_.length;u.reset(0);do if(m=u.next(_),m){let E=m.index,R=m.index+m[0].length;if(E>0){const T=_.charCodeAt(E-1);Cn(T)&&E--}if(R+1<y){const T=_.charCodeAt(R-1);Cn(T)&&R++}const P=_.substring(E,R);let v=In(E+1,zi,_,0);v&&v.endColumn<=E+1&&(v=null);const g=s.shouldHighlightNonBasicASCII(P,v?v.word:null);if(g!==0){if(g===3?f++:g===2?b++:g===1?p++:nl(),c.length>=1e3){d=!0;break e}c.push(new oe(w,E+1,w,R+1))}}while(m)}return{ranges:c,hasMore:d,ambiguousCharacterCount:f,invisibleCharacterCount:b,nonBasicAsciiCharacterCount:p}}static computeUnicodeHighlightReason(t,n){const i=new qr(n);switch(i.shouldHighlightNonBasicASCII(t,null)){case 0:return null;case 2:return{kind:1};case 3:{const a=t.codePointAt(0),s=i.ambiguousCharacters.getPrimaryConfusable(a),o=Ke.getLocales().filter(l=>!Ke.getInstance(new Set([...n.allowedLocales,l])).isAmbiguous(a));return{kind:0,confusableWith:String.fromCodePoint(s),notAmbiguousInLocales:o}}case 1:return{kind:2}}}}function rl(e,t){return`[${Ws(e.map(i=>String.fromCodePoint(i)).join(""))}]`}class qr{constructor(t){this.options=t,this.allowedCodePoints=new Set(t.allowedCodePoints),this.ambiguousCharacters=Ke.getInstance(new Set(t.allowedLocales))}getCandidateCodePoints(){if(this.options.nonBasicASCII)return"allNonBasicAscii";const t=new Set;if(this.options.invisibleCharacters)for(const n of Pe.codePoints)Or(String.fromCodePoint(n))||t.add(n);if(this.options.ambiguousCharacters)for(const n of this.ambiguousCharacters.getConfusableCodePoints())t.add(n);for(const n of this.allowedCodePoints)t.delete(n);return t}shouldHighlightNonBasicASCII(t,n){const i=t.codePointAt(0);if(this.allowedCodePoints.has(i))return 0;if(this.options.nonBasicASCII)return 1;let r=!1,a=!1;if(n)for(const s of n){const o=s.codePointAt(0),l=Gs(s);r=r||l,!l&&!this.ambiguousCharacters.isAmbiguous(o)&&!Pe.isInvisibleCharacter(o)&&(a=!0)}return!r&&a?0:this.options.invisibleCharacters&&!Or(t)&&Pe.isInvisibleCharacter(i)?2:this.options.ambiguousCharacters&&this.ambiguousCharacters.isAmbiguous(i)?3:0}}function Or(e){return e===" "||e===`
`||e==="	"}class Zt{constructor(t,n,i){this.changes=t,this.moves=n,this.hitTimeout=i}}class al{constructor(t,n){this.lineRangeMapping=t,this.changes=n}}class ${static addRange(t,n){let i=0;for(;i<n.length&&n[i].endExclusive<t.start;)i++;let r=i;for(;r<n.length&&n[r].start<=t.endExclusive;)r++;if(i===r)n.splice(i,0,t);else{const a=Math.min(t.start,n[i].start),s=Math.max(t.endExclusive,n[r-1].endExclusive);n.splice(i,r-i,new $(a,s))}}static tryCreate(t,n){if(!(t>n))return new $(t,n)}static ofLength(t){return new $(0,t)}static ofStartAndLength(t,n){return new $(t,t+n)}constructor(t,n){if(this.start=t,this.endExclusive=n,t>n)throw new Ue(`Invalid range: ${this.toString()}`)}get isEmpty(){return this.start===this.endExclusive}delta(t){return new $(this.start+t,this.endExclusive+t)}deltaStart(t){return new $(this.start+t,this.endExclusive)}deltaEnd(t){return new $(this.start,this.endExclusive+t)}get length(){return this.endExclusive-this.start}toString(){return`[${this.start}, ${this.endExclusive})`}contains(t){return this.start<=t&&t<this.endExclusive}join(t){return new $(Math.min(this.start,t.start),Math.max(this.endExclusive,t.endExclusive))}intersect(t){const n=Math.max(this.start,t.start),i=Math.min(this.endExclusive,t.endExclusive);if(n<=i)return new $(n,i)}intersects(t){const n=Math.max(this.start,t.start),i=Math.min(this.endExclusive,t.endExclusive);return n<i}isBefore(t){return this.endExclusive<=t.start}isAfter(t){return this.start>=t.endExclusive}slice(t){return t.slice(this.start,this.endExclusive)}substring(t){return t.substring(this.start,this.endExclusive)}clip(t){if(this.isEmpty)throw new Ue(`Invalid clipping range: ${this.toString()}`);return Math.max(this.start,Math.min(this.endExclusive-1,t))}clipCyclic(t){if(this.isEmpty)throw new Ue(`Invalid clipping range: ${this.toString()}`);return t<this.start?this.endExclusive-(this.start-t)%this.length:t>=this.endExclusive?this.start+(t-this.start)%this.length:t}forEach(t){for(let n=this.start;n<this.endExclusive;n++)t(n)}}function ft(e,t){const n=At(e,t);return n===-1?void 0:e[n]}function At(e,t,n=0,i=e.length){let r=n,a=i;for(;r<a;){const s=Math.floor((r+a)/2);t(e[s])?r=s+1:a=s}return r-1}function sl(e,t){const n=jn(e,t);return n===e.length?void 0:e[n]}function jn(e,t,n=0,i=e.length){let r=n,a=i;for(;r<a;){const s=Math.floor((r+a)/2);t(e[s])?a=s:r=s+1}return r}class St{constructor(t){this._array=t,this._findLastMonotonousLastIdx=0}findLastMonotonous(t){if(St.assertInvariants){if(this._prevFindLastPredicate){for(const i of this._array)if(this._prevFindLastPredicate(i)&&!t(i))throw new Error("MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.")}this._prevFindLastPredicate=t}const n=At(this._array,t,this._findLastMonotonousLastIdx);return this._findLastMonotonousLastIdx=n+1,n===-1?void 0:this._array[n]}}St.assertInvariants=!1;class G{static fromRangeInclusive(t){return new G(t.startLineNumber,t.endLineNumber+1)}static joinMany(t){if(t.length===0)return[];let n=new Ie(t[0].slice());for(let i=1;i<t.length;i++)n=n.getUnion(new Ie(t[i].slice()));return n.ranges}static join(t){if(t.length===0)throw new Ue("lineRanges cannot be empty");let n=t[0].startLineNumber,i=t[0].endLineNumberExclusive;for(let r=1;r<t.length;r++)n=Math.min(n,t[r].startLineNumber),i=Math.max(i,t[r].endLineNumberExclusive);return new G(n,i)}static ofLength(t,n){return new G(t,t+n)}static deserialize(t){return new G(t[0],t[1])}constructor(t,n){if(t>n)throw new Ue(`startLineNumber ${t} cannot be after endLineNumberExclusive ${n}`);this.startLineNumber=t,this.endLineNumberExclusive=n}contains(t){return this.startLineNumber<=t&&t<this.endLineNumberExclusive}get isEmpty(){return this.startLineNumber===this.endLineNumberExclusive}delta(t){return new G(this.startLineNumber+t,this.endLineNumberExclusive+t)}deltaLength(t){return new G(this.startLineNumber,this.endLineNumberExclusive+t)}get length(){return this.endLineNumberExclusive-this.startLineNumber}join(t){return new G(Math.min(this.startLineNumber,t.startLineNumber),Math.max(this.endLineNumberExclusive,t.endLineNumberExclusive))}toString(){return`[${this.startLineNumber},${this.endLineNumberExclusive})`}intersect(t){const n=Math.max(this.startLineNumber,t.startLineNumber),i=Math.min(this.endLineNumberExclusive,t.endLineNumberExclusive);if(n<=i)return new G(n,i)}intersectsStrict(t){return this.startLineNumber<t.endLineNumberExclusive&&t.startLineNumber<this.endLineNumberExclusive}overlapOrTouch(t){return this.startLineNumber<=t.endLineNumberExclusive&&t.startLineNumber<=this.endLineNumberExclusive}equals(t){return this.startLineNumber===t.startLineNumber&&this.endLineNumberExclusive===t.endLineNumberExclusive}toInclusiveRange(){return this.isEmpty?null:new oe(this.startLineNumber,1,this.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER)}toExclusiveRange(){return new oe(this.startLineNumber,1,this.endLineNumberExclusive,1)}mapToLineArray(t){const n=[];for(let i=this.startLineNumber;i<this.endLineNumberExclusive;i++)n.push(t(i));return n}forEach(t){for(let n=this.startLineNumber;n<this.endLineNumberExclusive;n++)t(n)}serialize(){return[this.startLineNumber,this.endLineNumberExclusive]}includes(t){return this.startLineNumber<=t&&t<this.endLineNumberExclusive}toOffsetRange(){return new $(this.startLineNumber-1,this.endLineNumberExclusive-1)}}class Ie{constructor(t=[]){this._normalizedRanges=t}get ranges(){return this._normalizedRanges}addRange(t){if(t.length===0)return;const n=jn(this._normalizedRanges,r=>r.endLineNumberExclusive>=t.startLineNumber),i=At(this._normalizedRanges,r=>r.startLineNumber<=t.endLineNumberExclusive)+1;if(n===i)this._normalizedRanges.splice(n,0,t);else if(n===i-1){const r=this._normalizedRanges[n];this._normalizedRanges[n]=r.join(t)}else{const r=this._normalizedRanges[n].join(this._normalizedRanges[i-1]).join(t);this._normalizedRanges.splice(n,i-n,r)}}contains(t){const n=ft(this._normalizedRanges,i=>i.startLineNumber<=t);return!!n&&n.endLineNumberExclusive>t}intersects(t){const n=ft(this._normalizedRanges,i=>i.startLineNumber<t.endLineNumberExclusive);return!!n&&n.endLineNumberExclusive>t.startLineNumber}getUnion(t){if(this._normalizedRanges.length===0)return t;if(t._normalizedRanges.length===0)return this;const n=[];let i=0,r=0,a=null;for(;i<this._normalizedRanges.length||r<t._normalizedRanges.length;){let s=null;if(i<this._normalizedRanges.length&&r<t._normalizedRanges.length){const o=this._normalizedRanges[i],l=t._normalizedRanges[r];o.startLineNumber<l.startLineNumber?(s=o,i++):(s=l,r++)}else i<this._normalizedRanges.length?(s=this._normalizedRanges[i],i++):(s=t._normalizedRanges[r],r++);a===null?a=s:a.endLineNumberExclusive>=s.startLineNumber?a=new G(a.startLineNumber,Math.max(a.endLineNumberExclusive,s.endLineNumberExclusive)):(n.push(a),a=s)}return a!==null&&n.push(a),new Ie(n)}subtractFrom(t){const n=jn(this._normalizedRanges,s=>s.endLineNumberExclusive>=t.startLineNumber),i=At(this._normalizedRanges,s=>s.startLineNumber<=t.endLineNumberExclusive)+1;if(n===i)return new Ie([t]);const r=[];let a=t.startLineNumber;for(let s=n;s<i;s++){const o=this._normalizedRanges[s];o.startLineNumber>a&&r.push(new G(a,o.startLineNumber)),a=o.endLineNumberExclusive}return a<t.endLineNumberExclusive&&r.push(new G(a,t.endLineNumberExclusive)),new Ie(r)}toString(){return this._normalizedRanges.map(t=>t.toString()).join(", ")}getIntersection(t){const n=[];let i=0,r=0;for(;i<this._normalizedRanges.length&&r<t._normalizedRanges.length;){const a=this._normalizedRanges[i],s=t._normalizedRanges[r],o=a.intersect(s);o&&!o.isEmpty&&n.push(o),a.endLineNumberExclusive<s.endLineNumberExclusive?i++:r++}return new Ie(n)}getWithDelta(t){return new Ie(this._normalizedRanges.map(n=>n.delta(t)))}}class Ce{static inverse(t,n,i){const r=[];let a=1,s=1;for(const l of t){const u=new Ce(new G(a,l.original.startLineNumber),new G(s,l.modified.startLineNumber));u.modified.isEmpty||r.push(u),a=l.original.endLineNumberExclusive,s=l.modified.endLineNumberExclusive}const o=new Ce(new G(a,n+1),new G(s,i+1));return o.modified.isEmpty||r.push(o),r}static clip(t,n,i){const r=[];for(const a of t){const s=a.original.intersect(n),o=a.modified.intersect(i);s&&!s.isEmpty&&o&&!o.isEmpty&&r.push(new Ce(s,o))}return r}constructor(t,n){this.original=t,this.modified=n}toString(){return`{${this.original.toString()}->${this.modified.toString()}}`}flip(){return new Ce(this.modified,this.original)}join(t){return new Ce(this.original.join(t.original),this.modified.join(t.modified))}}class We extends Ce{static fromRangeMappings(t){const n=G.join(t.map(r=>G.fromRangeInclusive(r.originalRange))),i=G.join(t.map(r=>G.fromRangeInclusive(r.modifiedRange)));return new We(n,i,t)}constructor(t,n,i){super(t,n),this.innerChanges=i}flip(){var t;return new We(this.modified,this.original,(t=this.innerChanges)===null||t===void 0?void 0:t.map(n=>n.flip()))}withInnerChangesFromLineRanges(){return new We(this.original,this.modified,[new pt(this.original.toExclusiveRange(),this.modified.toExclusiveRange())])}}class pt{constructor(t,n){this.originalRange=t,this.modifiedRange=n}toString(){return`{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`}flip(){return new pt(this.modifiedRange,this.originalRange)}}const ol=3;class ll{computeDiff(t,n,i){var r;const s=new hl(t,n,{maxComputationTime:i.maxComputationTimeMs,shouldIgnoreTrimWhitespace:i.ignoreTrimWhitespace,shouldComputeCharChanges:!0,shouldMakePrettyDiff:!0,shouldPostProcessCharChanges:!0}).computeDiff(),o=[];let l=null;for(const u of s.changes){let c;u.originalEndLineNumber===0?c=new G(u.originalStartLineNumber+1,u.originalStartLineNumber+1):c=new G(u.originalStartLineNumber,u.originalEndLineNumber+1);let d;u.modifiedEndLineNumber===0?d=new G(u.modifiedStartLineNumber+1,u.modifiedStartLineNumber+1):d=new G(u.modifiedStartLineNumber,u.modifiedEndLineNumber+1);let m=new We(c,d,(r=u.charChanges)===null||r===void 0?void 0:r.map(f=>new pt(new oe(f.originalStartLineNumber,f.originalStartColumn,f.originalEndLineNumber,f.originalEndColumn),new oe(f.modifiedStartLineNumber,f.modifiedStartColumn,f.modifiedEndLineNumber,f.modifiedEndColumn))));l&&(l.modified.endLineNumberExclusive===m.modified.startLineNumber||l.original.endLineNumberExclusive===m.original.startLineNumber)&&(m=new We(l.original.join(m.original),l.modified.join(m.modified),l.innerChanges&&m.innerChanges?l.innerChanges.concat(m.innerChanges):void 0),o.pop()),o.push(m),l=m}return Yt(()=>Br(o,(u,c)=>c.original.startLineNumber-u.original.endLineNumberExclusive===c.modified.startLineNumber-u.modified.endLineNumberExclusive&&u.original.endLineNumberExclusive<c.original.startLineNumber&&u.modified.endLineNumberExclusive<c.modified.startLineNumber)),new Zt(o,[],s.quitEarly)}}function Vr(e,t,n,i){return new qe(e,t,n).ComputeDiff(i)}let jr=class{constructor(t){const n=[],i=[];for(let r=0,a=t.length;r<a;r++)n[r]=Gn(t[r],1),i[r]=$n(t[r],1);this.lines=t,this._startColumns=n,this._endColumns=i}getElements(){const t=[];for(let n=0,i=this.lines.length;n<i;n++)t[n]=this.lines[n].substring(this._startColumns[n]-1,this._endColumns[n]-1);return t}getStrictElement(t){return this.lines[t]}getStartLineNumber(t){return t+1}getEndLineNumber(t){return t+1}createCharSequence(t,n,i){const r=[],a=[],s=[];let o=0;for(let l=n;l<=i;l++){const u=this.lines[l],c=t?this._startColumns[l]:1,d=t?this._endColumns[l]:u.length+1;for(let m=c;m<d;m++)r[o]=u.charCodeAt(m-1),a[o]=l+1,s[o]=m,o++;!t&&l<i&&(r[o]=10,a[o]=l+1,s[o]=u.length+1,o++)}return new ul(r,a,s)}};class ul{constructor(t,n,i){this._charCodes=t,this._lineNumbers=n,this._columns=i}toString(){return"["+this._charCodes.map((t,n)=>(t===10?"\\n":String.fromCharCode(t))+`-(${this._lineNumbers[n]},${this._columns[n]})`).join(", ")+"]"}_assertIndex(t,n){if(t<0||t>=n.length)throw new Error("Illegal index")}getElements(){return this._charCodes}getStartLineNumber(t){return t>0&&t===this._lineNumbers.length?this.getEndLineNumber(t-1):(this._assertIndex(t,this._lineNumbers),this._lineNumbers[t])}getEndLineNumber(t){return t===-1?this.getStartLineNumber(t+1):(this._assertIndex(t,this._lineNumbers),this._charCodes[t]===10?this._lineNumbers[t]+1:this._lineNumbers[t])}getStartColumn(t){return t>0&&t===this._columns.length?this.getEndColumn(t-1):(this._assertIndex(t,this._columns),this._columns[t])}getEndColumn(t){return t===-1?this.getStartColumn(t+1):(this._assertIndex(t,this._columns),this._charCodes[t]===10?1:this._columns[t]+1)}}class gt{constructor(t,n,i,r,a,s,o,l){this.originalStartLineNumber=t,this.originalStartColumn=n,this.originalEndLineNumber=i,this.originalEndColumn=r,this.modifiedStartLineNumber=a,this.modifiedStartColumn=s,this.modifiedEndLineNumber=o,this.modifiedEndColumn=l}static createFromDiffChange(t,n,i){const r=n.getStartLineNumber(t.originalStart),a=n.getStartColumn(t.originalStart),s=n.getEndLineNumber(t.originalStart+t.originalLength-1),o=n.getEndColumn(t.originalStart+t.originalLength-1),l=i.getStartLineNumber(t.modifiedStart),u=i.getStartColumn(t.modifiedStart),c=i.getEndLineNumber(t.modifiedStart+t.modifiedLength-1),d=i.getEndColumn(t.modifiedStart+t.modifiedLength-1);return new gt(r,a,s,o,l,u,c,d)}}function cl(e){if(e.length<=1)return e;const t=[e[0]];let n=t[0];for(let i=1,r=e.length;i<r;i++){const a=e[i],s=a.originalStart-(n.originalStart+n.originalLength),o=a.modifiedStart-(n.modifiedStart+n.modifiedLength);Math.min(s,o)<ol?(n.originalLength=a.originalStart+a.originalLength-n.originalStart,n.modifiedLength=a.modifiedStart+a.modifiedLength-n.modifiedStart):(t.push(a),n=a)}return t}class Lt{constructor(t,n,i,r,a){this.originalStartLineNumber=t,this.originalEndLineNumber=n,this.modifiedStartLineNumber=i,this.modifiedEndLineNumber=r,this.charChanges=a}static createFromDiffResult(t,n,i,r,a,s,o){let l,u,c,d,m;if(n.originalLength===0?(l=i.getStartLineNumber(n.originalStart)-1,u=0):(l=i.getStartLineNumber(n.originalStart),u=i.getEndLineNumber(n.originalStart+n.originalLength-1)),n.modifiedLength===0?(c=r.getStartLineNumber(n.modifiedStart)-1,d=0):(c=r.getStartLineNumber(n.modifiedStart),d=r.getEndLineNumber(n.modifiedStart+n.modifiedLength-1)),s&&n.originalLength>0&&n.originalLength<20&&n.modifiedLength>0&&n.modifiedLength<20&&a()){const f=i.createCharSequence(t,n.originalStart,n.originalStart+n.originalLength-1),b=r.createCharSequence(t,n.modifiedStart,n.modifiedStart+n.modifiedLength-1);if(f.getElements().length>0&&b.getElements().length>0){let p=Vr(f,b,a,!0).changes;o&&(p=cl(p)),m=[];for(let w=0,x=p.length;w<x;w++)m.push(gt.createFromDiffChange(p[w],f,b))}}return new Lt(l,u,c,d,m)}}class hl{constructor(t,n,i){this.shouldComputeCharChanges=i.shouldComputeCharChanges,this.shouldPostProcessCharChanges=i.shouldPostProcessCharChanges,this.shouldIgnoreTrimWhitespace=i.shouldIgnoreTrimWhitespace,this.shouldMakePrettyDiff=i.shouldMakePrettyDiff,this.originalLines=t,this.modifiedLines=n,this.original=new jr(t),this.modified=new jr(n),this.continueLineDiff=Gr(i.maxComputationTime),this.continueCharDiff=Gr(i.maxComputationTime===0?0:Math.min(i.maxComputationTime,5e3))}computeDiff(){if(this.original.lines.length===1&&this.original.lines[0].length===0)return this.modified.lines.length===1&&this.modified.lines[0].length===0?{quitEarly:!1,changes:[]}:{quitEarly:!1,changes:[{originalStartLineNumber:1,originalEndLineNumber:1,modifiedStartLineNumber:1,modifiedEndLineNumber:this.modified.lines.length,charChanges:void 0}]};if(this.modified.lines.length===1&&this.modified.lines[0].length===0)return{quitEarly:!1,changes:[{originalStartLineNumber:1,originalEndLineNumber:this.original.lines.length,modifiedStartLineNumber:1,modifiedEndLineNumber:1,charChanges:void 0}]};const t=Vr(this.original,this.modified,this.continueLineDiff,this.shouldMakePrettyDiff),n=t.changes,i=t.quitEarly;if(this.shouldIgnoreTrimWhitespace){const o=[];for(let l=0,u=n.length;l<u;l++)o.push(Lt.createFromDiffResult(this.shouldIgnoreTrimWhitespace,n[l],this.original,this.modified,this.continueCharDiff,this.shouldComputeCharChanges,this.shouldPostProcessCharChanges));return{quitEarly:i,changes:o}}const r=[];let a=0,s=0;for(let o=-1,l=n.length;o<l;o++){const u=o+1<l?n[o+1]:null,c=u?u.originalStart:this.originalLines.length,d=u?u.modifiedStart:this.modifiedLines.length;for(;a<c&&s<d;){const m=this.originalLines[a],f=this.modifiedLines[s];if(m!==f){{let b=Gn(m,1),p=Gn(f,1);for(;b>1&&p>1;){const w=m.charCodeAt(b-2),x=f.charCodeAt(p-2);if(w!==x)break;b--,p--}(b>1||p>1)&&this._pushTrimWhitespaceCharChange(r,a+1,1,b,s+1,1,p)}{let b=$n(m,1),p=$n(f,1);const w=m.length+1,x=f.length+1;for(;b<w&&p<x;){const _=m.charCodeAt(b-1),y=m.charCodeAt(p-1);if(_!==y)break;b++,p++}(b<w||p<x)&&this._pushTrimWhitespaceCharChange(r,a+1,b,w,s+1,p,x)}}a++,s++}u&&(r.push(Lt.createFromDiffResult(this.shouldIgnoreTrimWhitespace,u,this.original,this.modified,this.continueCharDiff,this.shouldComputeCharChanges,this.shouldPostProcessCharChanges)),a+=u.originalLength,s+=u.modifiedLength)}return{quitEarly:i,changes:r}}_pushTrimWhitespaceCharChange(t,n,i,r,a,s,o){if(this._mergeTrimWhitespaceCharChange(t,n,i,r,a,s,o))return;let l;this.shouldComputeCharChanges&&(l=[new gt(n,i,n,r,a,s,a,o)]),t.push(new Lt(n,n,a,a,l))}_mergeTrimWhitespaceCharChange(t,n,i,r,a,s,o){const l=t.length;if(l===0)return!1;const u=t[l-1];return u.originalEndLineNumber===0||u.modifiedEndLineNumber===0?!1:u.originalEndLineNumber===n&&u.modifiedEndLineNumber===a?(this.shouldComputeCharChanges&&u.charChanges&&u.charChanges.push(new gt(n,i,n,r,a,s,a,o)),!0):u.originalEndLineNumber+1===n&&u.modifiedEndLineNumber+1===a?(u.originalEndLineNumber=n,u.modifiedEndLineNumber=a,this.shouldComputeCharChanges&&u.charChanges&&u.charChanges.push(new gt(n,i,n,r,a,s,a,o)),!0):!1}}function Gn(e,t){const n=Ps(e);return n===-1?t:n+1}function $n(e,t){const n=Bs(e);return n===-1?t:n+2}function Gr(e){if(e===0)return()=>!0;const t=Date.now();return()=>Date.now()-t<e}class Fe{static trivial(t,n){return new Fe([new ne($.ofLength(t.length),$.ofLength(n.length))],!1)}static trivialTimedOut(t,n){return new Fe([new ne($.ofLength(t.length),$.ofLength(n.length))],!0)}constructor(t,n){this.diffs=t,this.hitTimeout=n}}class ne{static invert(t,n){const i=[];return To(t,(r,a)=>{i.push(ne.fromOffsetPairs(r?r.getEndExclusives():_e.zero,a?a.getStarts():new _e(n,(r?r.seq2Range.endExclusive-r.seq1Range.endExclusive:0)+n)))}),i}static fromOffsetPairs(t,n){return new ne(new $(t.offset1,n.offset1),new $(t.offset2,n.offset2))}constructor(t,n){this.seq1Range=t,this.seq2Range=n}swap(){return new ne(this.seq2Range,this.seq1Range)}toString(){return`${this.seq1Range} <-> ${this.seq2Range}`}join(t){return new ne(this.seq1Range.join(t.seq1Range),this.seq2Range.join(t.seq2Range))}delta(t){return t===0?this:new ne(this.seq1Range.delta(t),this.seq2Range.delta(t))}deltaStart(t){return t===0?this:new ne(this.seq1Range.deltaStart(t),this.seq2Range.deltaStart(t))}deltaEnd(t){return t===0?this:new ne(this.seq1Range.deltaEnd(t),this.seq2Range.deltaEnd(t))}intersect(t){const n=this.seq1Range.intersect(t.seq1Range),i=this.seq2Range.intersect(t.seq2Range);if(!(!n||!i))return new ne(n,i)}getStarts(){return new _e(this.seq1Range.start,this.seq2Range.start)}getEndExclusives(){return new _e(this.seq1Range.endExclusive,this.seq2Range.endExclusive)}}class _e{constructor(t,n){this.offset1=t,this.offset2=n}toString(){return`${this.offset1} <-> ${this.offset2}`}delta(t){return t===0?this:new _e(this.offset1+t,this.offset2+t)}equals(t){return this.offset1===t.offset1&&this.offset2===t.offset2}}_e.zero=new _e(0,0),_e.max=new _e(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER);class Ct{isValid(){return!0}}Ct.instance=new Ct;class dl{constructor(t){if(this.timeout=t,this.startTime=Date.now(),this.valid=!0,t<=0)throw new Ue("timeout must be positive")}isValid(){if(!(Date.now()-this.startTime<this.timeout)&&this.valid){this.valid=!1;debugger}return this.valid}}class Xn{constructor(t,n){this.width=t,this.height=n,this.array=[],this.array=new Array(t*n)}get(t,n){return this.array[t+n*this.width]}set(t,n,i){this.array[t+n*this.width]=i}}function Jn(e){return e===32||e===9}class bt{static getKey(t){let n=this.chrKeys.get(t);return n===void 0&&(n=this.chrKeys.size,this.chrKeys.set(t,n)),n}constructor(t,n,i){this.range=t,this.lines=n,this.source=i,this.histogram=[];let r=0;for(let a=t.startLineNumber-1;a<t.endLineNumberExclusive-1;a++){const s=n[a];for(let l=0;l<s.length;l++){r++;const u=s[l],c=bt.getKey(u);this.histogram[c]=(this.histogram[c]||0)+1}r++;const o=bt.getKey(`
`);this.histogram[o]=(this.histogram[o]||0)+1}this.totalCount=r}computeSimilarity(t){var n,i;let r=0;const a=Math.max(this.histogram.length,t.histogram.length);for(let s=0;s<a;s++)r+=Math.abs(((n=this.histogram[s])!==null&&n!==void 0?n:0)-((i=t.histogram[s])!==null&&i!==void 0?i:0));return 1-r/(this.totalCount+t.totalCount)}}bt.chrKeys=new Map;class ml{compute(t,n,i=Ct.instance,r){if(t.length===0||n.length===0)return Fe.trivial(t,n);const a=new Xn(t.length,n.length),s=new Xn(t.length,n.length),o=new Xn(t.length,n.length);for(let b=0;b<t.length;b++)for(let p=0;p<n.length;p++){if(!i.isValid())return Fe.trivialTimedOut(t,n);const w=b===0?0:a.get(b-1,p),x=p===0?0:a.get(b,p-1);let _;t.getElement(b)===n.getElement(p)?(b===0||p===0?_=0:_=a.get(b-1,p-1),b>0&&p>0&&s.get(b-1,p-1)===3&&(_+=o.get(b-1,p-1)),_+=r?r(b,p):1):_=-1;const y=Math.max(w,x,_);if(y===_){const E=b>0&&p>0?o.get(b-1,p-1):0;o.set(b,p,E+1),s.set(b,p,3)}else y===w?(o.set(b,p,0),s.set(b,p,1)):y===x&&(o.set(b,p,0),s.set(b,p,2));a.set(b,p,y)}const l=[];let u=t.length,c=n.length;function d(b,p){(b+1!==u||p+1!==c)&&l.push(new ne(new $(b+1,u),new $(p+1,c))),u=b,c=p}let m=t.length-1,f=n.length-1;for(;m>=0&&f>=0;)s.get(m,f)===3?(d(m,f),m--,f--):s.get(m,f)===1?m--:f--;return d(-1,-1),l.reverse(),new Fe(l,!1)}}class $r{compute(t,n,i=Ct.instance){if(t.length===0||n.length===0)return Fe.trivial(t,n);const r=t,a=n;function s(p,w){for(;p<r.length&&w<a.length&&r.getElement(p)===a.getElement(w);)p++,w++;return p}let o=0;const l=new fl;l.set(0,s(0,0));const u=new pl;u.set(0,l.get(0)===0?null:new Xr(null,0,0,l.get(0)));let c=0;e:for(;;){if(o++,!i.isValid())return Fe.trivialTimedOut(r,a);const p=-Math.min(o,a.length+o%2),w=Math.min(o,r.length+o%2);for(c=p;c<=w;c+=2){const x=c===w?-1:l.get(c+1),_=c===p?-1:l.get(c-1)+1,y=Math.min(Math.max(x,_),r.length),E=y-c;if(y>r.length||E>a.length)continue;const R=s(y,E);l.set(c,R);const P=y===x?u.get(c+1):u.get(c-1);if(u.set(c,R!==y?new Xr(P,y,E,R-y):P),l.get(c)===r.length&&l.get(c)-c===a.length)break e}}let d=u.get(c);const m=[];let f=r.length,b=a.length;for(;;){const p=d?d.x+d.length:0,w=d?d.y+d.length:0;if((p!==f||w!==b)&&m.push(new ne(new $(p,f),new $(w,b))),!d)break;f=d.x,b=d.y,d=d.prev}return m.reverse(),new Fe(m,!1)}}class Xr{constructor(t,n,i,r){this.prev=t,this.x=n,this.y=i,this.length=r}}class fl{constructor(){this.positiveArr=new Int32Array(10),this.negativeArr=new Int32Array(10)}get(t){return t<0?(t=-t-1,this.negativeArr[t]):this.positiveArr[t]}set(t,n){if(t<0){if(t=-t-1,t>=this.negativeArr.length){const i=this.negativeArr;this.negativeArr=new Int32Array(i.length*2),this.negativeArr.set(i)}this.negativeArr[t]=n}else{if(t>=this.positiveArr.length){const i=this.positiveArr;this.positiveArr=new Int32Array(i.length*2),this.positiveArr.set(i)}this.positiveArr[t]=n}}}class pl{constructor(){this.positiveArr=[],this.negativeArr=[]}get(t){return t<0?(t=-t-1,this.negativeArr[t]):this.positiveArr[t]}set(t,n){t<0?(t=-t-1,this.negativeArr[t]=n):this.positiveArr[t]=n}}class Kt{constructor(t,n,i){this.lines=t,this.considerWhitespaceChanges=i,this.elements=[],this.firstCharOffsetByLine=[],this.additionalOffsetByLine=[];let r=!1;n.start>0&&n.endExclusive>=t.length&&(n=new $(n.start-1,n.endExclusive),r=!0),this.lineRange=n,this.firstCharOffsetByLine[0]=0;for(let a=this.lineRange.start;a<this.lineRange.endExclusive;a++){let s=t[a],o=0;if(r)o=s.length,s="",r=!1;else if(!i){const l=s.trimStart();o=s.length-l.length,s=l.trimEnd()}this.additionalOffsetByLine.push(o);for(let l=0;l<s.length;l++)this.elements.push(s.charCodeAt(l));a<t.length-1&&(this.elements.push(10),this.firstCharOffsetByLine[a-this.lineRange.start+1]=this.elements.length)}this.additionalOffsetByLine.push(0)}toString(){return`Slice: "${this.text}"`}get text(){return this.getText(new $(0,this.length))}getText(t){return this.elements.slice(t.start,t.endExclusive).map(n=>String.fromCharCode(n)).join("")}getElement(t){return this.elements[t]}get length(){return this.elements.length}getBoundaryScore(t){const n=Qr(t>0?this.elements[t-1]:-1),i=Qr(t<this.elements.length?this.elements[t]:-1);if(n===7&&i===8)return 0;if(n===8)return 150;let r=0;return n!==i&&(r+=10,n===0&&i===1&&(r+=1)),r+=Jr(n),r+=Jr(i),r}translateOffset(t){if(this.lineRange.isEmpty)return new Ne(this.lineRange.start+1,1);const n=At(this.firstCharOffsetByLine,i=>i<=t);return new Ne(this.lineRange.start+n+1,t-this.firstCharOffsetByLine[n]+this.additionalOffsetByLine[n]+1)}translateRange(t){return oe.fromPositions(this.translateOffset(t.start),this.translateOffset(t.endExclusive))}findWordContaining(t){if(t<0||t>=this.elements.length||!Qn(this.elements[t]))return;let n=t;for(;n>0&&Qn(this.elements[n-1]);)n--;let i=t;for(;i<this.elements.length&&Qn(this.elements[i]);)i++;return new $(n,i)}countLinesIn(t){return this.translateOffset(t.endExclusive).lineNumber-this.translateOffset(t.start).lineNumber}isStronglyEqual(t,n){return this.elements[t]===this.elements[n]}extendToFullLines(t){var n,i;const r=(n=ft(this.firstCharOffsetByLine,s=>s<=t.start))!==null&&n!==void 0?n:0,a=(i=sl(this.firstCharOffsetByLine,s=>t.endExclusive<=s))!==null&&i!==void 0?i:this.elements.length;return new $(r,a)}}function Qn(e){return e>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57}const gl={0:0,1:0,2:0,3:10,4:2,5:30,6:3,7:10,8:10};function Jr(e){return gl[e]}function Qr(e){return e===10?8:e===13?7:Jn(e)?6:e>=97&&e<=122?0:e>=65&&e<=90?1:e>=48&&e<=57?2:e===-1?3:e===44||e===59?5:4}function bl(e,t,n,i,r,a){let{moves:s,excludedChanges:o}=_l(e,t,n,a);if(!a.isValid())return[];const l=e.filter(c=>!o.has(c)),u=wl(l,i,r,t,n,a);return Ao(s,u),s=yl(s),s=s.filter(c=>{const d=c.original.toOffsetRange().slice(t).map(f=>f.trim());return d.join(`
`).length>=15&&vl(d,f=>f.length>=2)>=2}),s=xl(e,s),s}function vl(e,t){let n=0;for(const i of e)t(i)&&n++;return n}function _l(e,t,n,i){const r=[],a=e.filter(l=>l.modified.isEmpty&&l.original.length>=3).map(l=>new bt(l.original,t,l)),s=new Set(e.filter(l=>l.original.isEmpty&&l.modified.length>=3).map(l=>new bt(l.modified,n,l))),o=new Set;for(const l of a){let u=-1,c;for(const d of s){const m=l.computeSimilarity(d);m>u&&(u=m,c=d)}if(u>.9&&c&&(s.delete(c),r.push(new Ce(l.range,c.range)),o.add(l.source),o.add(c.source)),!i.isValid())return{moves:r,excludedChanges:o}}return{moves:r,excludedChanges:o}}function wl(e,t,n,i,r,a){const s=[],o=new Yo;for(const m of e)for(let f=m.original.startLineNumber;f<m.original.endLineNumberExclusive-2;f++){const b=`${t[f-1]}:${t[f+1-1]}:${t[f+2-1]}`;o.add(b,{range:new G(f,f+3)})}const l=[];e.sort(jt(m=>m.modified.startLineNumber,Gt));for(const m of e){let f=[];for(let b=m.modified.startLineNumber;b<m.modified.endLineNumberExclusive-2;b++){const p=`${n[b-1]}:${n[b+1-1]}:${n[b+2-1]}`,w=new G(b,b+3),x=[];o.forEach(p,({range:_})=>{for(const E of f)if(E.originalLineRange.endLineNumberExclusive+1===_.endLineNumberExclusive&&E.modifiedLineRange.endLineNumberExclusive+1===w.endLineNumberExclusive){E.originalLineRange=new G(E.originalLineRange.startLineNumber,_.endLineNumberExclusive),E.modifiedLineRange=new G(E.modifiedLineRange.startLineNumber,w.endLineNumberExclusive),x.push(E);return}const y={modifiedLineRange:w,originalLineRange:_};l.push(y),x.push(y)}),f=x}if(!a.isValid())return[]}l.sort(So(jt(m=>m.modifiedLineRange.length,Gt)));const u=new Ie,c=new Ie;for(const m of l){const f=m.modifiedLineRange.startLineNumber-m.originalLineRange.startLineNumber,b=u.subtractFrom(m.modifiedLineRange),p=c.subtractFrom(m.originalLineRange).getWithDelta(f),w=b.getIntersection(p);for(const x of w.ranges){if(x.length<3)continue;const _=x,y=x.delta(-f);s.push(new Ce(y,_)),u.addRange(_),c.addRange(y)}}s.sort(jt(m=>m.original.startLineNumber,Gt));const d=new St(e);for(let m=0;m<s.length;m++){const f=s[m],b=d.findLastMonotonous(P=>P.original.startLineNumber<=f.original.startLineNumber),p=ft(e,P=>P.modified.startLineNumber<=f.modified.startLineNumber),w=Math.max(f.original.startLineNumber-b.original.startLineNumber,f.modified.startLineNumber-p.modified.startLineNumber),x=d.findLastMonotonous(P=>P.original.startLineNumber<f.original.endLineNumberExclusive),_=ft(e,P=>P.modified.startLineNumber<f.modified.endLineNumberExclusive),y=Math.max(x.original.endLineNumberExclusive-f.original.endLineNumberExclusive,_.modified.endLineNumberExclusive-f.modified.endLineNumberExclusive);let E;for(E=0;E<w;E++){const P=f.original.startLineNumber-E-1,v=f.modified.startLineNumber-E-1;if(P>i.length||v>r.length||u.contains(v)||c.contains(P)||!Yr(i[P-1],r[v-1],a))break}E>0&&(c.addRange(new G(f.original.startLineNumber-E,f.original.startLineNumber)),u.addRange(new G(f.modified.startLineNumber-E,f.modified.startLineNumber)));let R;for(R=0;R<y;R++){const P=f.original.endLineNumberExclusive+R,v=f.modified.endLineNumberExclusive+R;if(P>i.length||v>r.length||u.contains(v)||c.contains(P)||!Yr(i[P-1],r[v-1],a))break}R>0&&(c.addRange(new G(f.original.endLineNumberExclusive,f.original.endLineNumberExclusive+R)),u.addRange(new G(f.modified.endLineNumberExclusive,f.modified.endLineNumberExclusive+R))),(E>0||R>0)&&(s[m]=new Ce(new G(f.original.startLineNumber-E,f.original.endLineNumberExclusive+R),new G(f.modified.startLineNumber-E,f.modified.endLineNumberExclusive+R)))}return s}function Yr(e,t,n){if(e.trim()===t.trim())return!0;if(e.length>300&&t.length>300)return!1;const r=new $r().compute(new Kt([e],new $(0,1),!1),new Kt([t],new $(0,1),!1),n);let a=0;const s=ne.invert(r.diffs,e.length);for(const c of s)c.seq1Range.forEach(d=>{Jn(e.charCodeAt(d))||a++});function o(c){let d=0;for(let m=0;m<e.length;m++)Jn(c.charCodeAt(m))||d++;return d}const l=o(e.length>t.length?e:t);return a/l>.6&&l>10}function yl(e){if(e.length===0)return e;e.sort(jt(n=>n.original.startLineNumber,Gt));const t=[e[0]];for(let n=1;n<e.length;n++){const i=t[t.length-1],r=e[n],a=r.original.startLineNumber-i.original.endLineNumberExclusive,s=r.modified.startLineNumber-i.modified.endLineNumberExclusive;if(a>=0&&s>=0&&a+s<=2){t[t.length-1]=i.join(r);continue}t.push(r)}return t}function xl(e,t){const n=new St(e);return t=t.filter(i=>{const r=n.findLastMonotonous(o=>o.original.startLineNumber<i.original.endLineNumberExclusive)||new Ce(new G(1,1),new G(1,1)),a=ft(e,o=>o.modified.startLineNumber<i.modified.endLineNumberExclusive);return r!==a}),t}function Zr(e,t,n){let i=n;return i=Kr(e,t,i),i=Kr(e,t,i),i=Tl(e,t,i),i}function Kr(e,t,n){if(n.length===0)return n;const i=[];i.push(n[0]);for(let a=1;a<n.length;a++){const s=i[i.length-1];let o=n[a];if(o.seq1Range.isEmpty||o.seq2Range.isEmpty){const l=o.seq1Range.start-s.seq1Range.endExclusive;let u;for(u=1;u<=l&&!(e.getElement(o.seq1Range.start-u)!==e.getElement(o.seq1Range.endExclusive-u)||t.getElement(o.seq2Range.start-u)!==t.getElement(o.seq2Range.endExclusive-u));u++);if(u--,u===l){i[i.length-1]=new ne(new $(s.seq1Range.start,o.seq1Range.endExclusive-l),new $(s.seq2Range.start,o.seq2Range.endExclusive-l));continue}o=o.delta(-u)}i.push(o)}const r=[];for(let a=0;a<i.length-1;a++){const s=i[a+1];let o=i[a];if(o.seq1Range.isEmpty||o.seq2Range.isEmpty){const l=s.seq1Range.start-o.seq1Range.endExclusive;let u;for(u=0;u<l&&!(!e.isStronglyEqual(o.seq1Range.start+u,o.seq1Range.endExclusive+u)||!t.isStronglyEqual(o.seq2Range.start+u,o.seq2Range.endExclusive+u));u++);if(u===l){i[a+1]=new ne(new $(o.seq1Range.start+l,s.seq1Range.endExclusive),new $(o.seq2Range.start+l,s.seq2Range.endExclusive));continue}u>0&&(o=o.delta(u))}r.push(o)}return i.length>0&&r.push(i[i.length-1]),r}function Tl(e,t,n){if(!e.getBoundaryScore||!t.getBoundaryScore)return n;for(let i=0;i<n.length;i++){const r=i>0?n[i-1]:void 0,a=n[i],s=i+1<n.length?n[i+1]:void 0,o=new $(r?r.seq1Range.endExclusive+1:0,s?s.seq1Range.start-1:e.length),l=new $(r?r.seq2Range.endExclusive+1:0,s?s.seq2Range.start-1:t.length);a.seq1Range.isEmpty?n[i]=ea(a,e,t,o,l):a.seq2Range.isEmpty&&(n[i]=ea(a.swap(),t,e,l,o).swap())}return n}function ea(e,t,n,i,r){let s=1;for(;e.seq1Range.start-s>=i.start&&e.seq2Range.start-s>=r.start&&n.isStronglyEqual(e.seq2Range.start-s,e.seq2Range.endExclusive-s)&&s<100;)s++;s--;let o=0;for(;e.seq1Range.start+o<i.endExclusive&&e.seq2Range.endExclusive+o<r.endExclusive&&n.isStronglyEqual(e.seq2Range.start+o,e.seq2Range.endExclusive+o)&&o<100;)o++;if(s===0&&o===0)return e;let l=0,u=-1;for(let c=-s;c<=o;c++){const d=e.seq2Range.start+c,m=e.seq2Range.endExclusive+c,f=e.seq1Range.start+c,b=t.getBoundaryScore(f)+n.getBoundaryScore(d)+n.getBoundaryScore(m);b>u&&(u=b,l=c)}return e.delta(l)}function kl(e,t,n){const i=[];for(const r of n){const a=i[i.length-1];if(!a){i.push(r);continue}r.seq1Range.start-a.seq1Range.endExclusive<=2||r.seq2Range.start-a.seq2Range.endExclusive<=2?i[i.length-1]=new ne(a.seq1Range.join(r.seq1Range),a.seq2Range.join(r.seq2Range)):i.push(r)}return i}function Al(e,t,n){const i=ne.invert(n,e.length),r=[];let a=new _e(0,0);function s(l,u){if(l.offset1<a.offset1||l.offset2<a.offset2)return;const c=e.findWordContaining(l.offset1),d=t.findWordContaining(l.offset2);if(!c||!d)return;let m=new ne(c,d);const f=m.intersect(u);let b=f.seq1Range.length,p=f.seq2Range.length;for(;i.length>0;){const w=i[0];if(!(w.seq1Range.intersects(m.seq1Range)||w.seq2Range.intersects(m.seq2Range)))break;const _=e.findWordContaining(w.seq1Range.start),y=t.findWordContaining(w.seq2Range.start),E=new ne(_,y),R=E.intersect(w);if(b+=R.seq1Range.length,p+=R.seq2Range.length,m=m.join(E),m.seq1Range.endExclusive>=w.seq1Range.endExclusive)i.shift();else break}b+p<(m.seq1Range.length+m.seq2Range.length)*2/3&&r.push(m),a=m.getEndExclusives()}for(;i.length>0;){const l=i.shift();l.seq1Range.isEmpty||(s(l.getStarts(),l),s(l.getEndExclusives().delta(-1),l))}return Sl(n,r)}function Sl(e,t){const n=[];for(;e.length>0||t.length>0;){const i=e[0],r=t[0];let a;i&&(!r||i.seq1Range.start<r.seq1Range.start)?a=e.shift():a=t.shift(),n.length>0&&n[n.length-1].seq1Range.endExclusive>=a.seq1Range.start?n[n.length-1]=n[n.length-1].join(a):n.push(a)}return n}function Ll(e,t,n){let i=n;if(i.length===0)return i;let r=0,a;do{a=!1;const s=[i[0]];for(let o=1;o<i.length;o++){let c=function(m,f){const b=new $(u.seq1Range.endExclusive,l.seq1Range.start);return e.getText(b).replace(/\s/g,"").length<=4&&(m.seq1Range.length+m.seq2Range.length>5||f.seq1Range.length+f.seq2Range.length>5)};const l=i[o],u=s[s.length-1];c(u,l)?(a=!0,s[s.length-1]=s[s.length-1].join(l)):s.push(l)}i=s}while(r++<10&&a);return i}function Cl(e,t,n){let i=n;if(i.length===0)return i;let r=0,a;do{a=!1;const o=[i[0]];for(let l=1;l<i.length;l++){let d=function(f,b){const p=new $(c.seq1Range.endExclusive,u.seq1Range.start);if(e.countLinesIn(p)>5||p.length>500)return!1;const x=e.getText(p).trim();if(x.length>20||x.split(/\r\n|\r|\n/).length>1)return!1;const _=e.countLinesIn(f.seq1Range),y=f.seq1Range.length,E=t.countLinesIn(f.seq2Range),R=f.seq2Range.length,P=e.countLinesIn(b.seq1Range),v=b.seq1Range.length,g=t.countLinesIn(b.seq2Range),T=b.seq2Range.length,q=2*40+50;function S(k){return Math.min(k,q)}return Math.pow(Math.pow(S(_*40+y),1.5)+Math.pow(S(E*40+R),1.5),1.5)+Math.pow(Math.pow(S(P*40+v),1.5)+Math.pow(S(g*40+T),1.5),1.5)>(q**1.5)**1.5*1.3};const u=i[l],c=o[o.length-1];d(c,u)?(a=!0,o[o.length-1]=o[o.length-1].join(u)):o.push(u)}i=o}while(r++<10&&a);const s=[];return ko(i,(o,l,u)=>{let c=l;function d(x){return x.length>0&&x.trim().length<=3&&l.seq1Range.length+l.seq2Range.length>100}const m=e.extendToFullLines(l.seq1Range),f=e.getText(new $(m.start,l.seq1Range.start));d(f)&&(c=c.deltaStart(-f.length));const b=e.getText(new $(l.seq1Range.endExclusive,m.endExclusive));d(b)&&(c=c.deltaEnd(b.length));const p=ne.fromOffsetPairs(o?o.getEndExclusives():_e.zero,u?u.getStarts():_e.max),w=c.intersect(p);s.length>0&&w.getStarts().equals(s[s.length-1].getEndExclusives())?s[s.length-1]=s[s.length-1].join(w):s.push(w)}),s}class ta{constructor(t,n){this.trimmedHash=t,this.lines=n}getElement(t){return this.trimmedHash[t]}get length(){return this.trimmedHash.length}getBoundaryScore(t){const n=t===0?0:na(this.lines[t-1]),i=t===this.lines.length?0:na(this.lines[t]);return 1e3-(n+i)}getText(t){return this.lines.slice(t.start,t.endExclusive).join(`
`)}isStronglyEqual(t,n){return this.lines[t]===this.lines[n]}}function na(e){let t=0;for(;t<e.length&&(e.charCodeAt(t)===32||e.charCodeAt(t)===9);)t++;return t}class El{constructor(){this.dynamicProgrammingDiffing=new ml,this.myersDiffingAlgorithm=new $r}computeDiff(t,n,i){if(t.length<=1&&yo(t,n,(R,P)=>R===P))return new Zt([],[],!1);if(t.length===1&&t[0].length===0||n.length===1&&n[0].length===0)return new Zt([new We(new G(1,t.length+1),new G(1,n.length+1),[new pt(new oe(1,1,t.length,t[0].length+1),new oe(1,1,n.length,n[0].length+1))])],[],!1);const r=i.maxComputationTimeMs===0?Ct.instance:new dl(i.maxComputationTimeMs),a=!i.ignoreTrimWhitespace,s=new Map;function o(R){let P=s.get(R);return P===void 0&&(P=s.size,s.set(R,P)),P}const l=t.map(R=>o(R.trim())),u=n.map(R=>o(R.trim())),c=new ta(l,t),d=new ta(u,n),m=c.length+d.length<1700?this.dynamicProgrammingDiffing.compute(c,d,r,(R,P)=>t[R]===n[P]?n[P].length===0?.1:1+Math.log(1+n[P].length):.99):this.myersDiffingAlgorithm.compute(c,d);let f=m.diffs,b=m.hitTimeout;f=Zr(c,d,f),f=Ll(c,d,f);const p=[],w=R=>{if(a)for(let P=0;P<R;P++){const v=x+P,g=_+P;if(t[v]!==n[g]){const T=this.refineDiff(t,n,new ne(new $(v,v+1),new $(g,g+1)),r,a);for(const q of T.mappings)p.push(q);T.hitTimeout&&(b=!0)}}};let x=0,_=0;for(const R of f){Yt(()=>R.seq1Range.start-x===R.seq2Range.start-_);const P=R.seq1Range.start-x;w(P),x=R.seq1Range.endExclusive,_=R.seq2Range.endExclusive;const v=this.refineDiff(t,n,R,r,a);v.hitTimeout&&(b=!0);for(const g of v.mappings)p.push(g)}w(t.length-x);const y=ia(p,t,n);let E=[];return i.computeMoves&&(E=this.computeMoves(y,t,n,l,u,r,a)),Yt(()=>{function R(v,g){if(v.lineNumber<1||v.lineNumber>g.length)return!1;const T=g[v.lineNumber-1];return!(v.column<1||v.column>T.length+1)}function P(v,g){return!(v.startLineNumber<1||v.startLineNumber>g.length+1||v.endLineNumberExclusive<1||v.endLineNumberExclusive>g.length+1)}for(const v of y){if(!v.innerChanges)return!1;for(const g of v.innerChanges)if(!(R(g.modifiedRange.getStartPosition(),n)&&R(g.modifiedRange.getEndPosition(),n)&&R(g.originalRange.getStartPosition(),t)&&R(g.originalRange.getEndPosition(),t)))return!1;if(!P(v.modified,n)||!P(v.original,t))return!1}return!0}),new Zt(y,E,b)}computeMoves(t,n,i,r,a,s,o){return bl(t,n,i,r,a,s).map(c=>{const d=this.refineDiff(n,i,new ne(c.original.toOffsetRange(),c.modified.toOffsetRange()),s,o),m=ia(d.mappings,n,i,!0);return new al(c,m)})}refineDiff(t,n,i,r,a){const s=new Kt(t,i.seq1Range,a),o=new Kt(n,i.seq2Range,a),l=s.length+o.length<500?this.dynamicProgrammingDiffing.compute(s,o,r):this.myersDiffingAlgorithm.compute(s,o,r);let u=l.diffs;return u=Zr(s,o,u),u=Al(s,o,u),u=kl(s,o,u),u=Cl(s,o,u),{mappings:u.map(d=>new pt(s.translateRange(d.seq1Range),o.translateRange(d.seq2Range))),hitTimeout:l.hitTimeout}}}function ia(e,t,n,i=!1){const r=[];for(const a of xo(e.map(s=>Rl(s,t,n)),(s,o)=>s.original.overlapOrTouch(o.original)||s.modified.overlapOrTouch(o.modified))){const s=a[0],o=a[a.length-1];r.push(new We(s.original.join(o.original),s.modified.join(o.modified),a.map(l=>l.innerChanges[0])))}return Yt(()=>!i&&r.length>0&&(r[0].modified.startLineNumber!==r[0].original.startLineNumber||n.length-r[r.length-1].modified.endLineNumberExclusive!==t.length-r[r.length-1].original.endLineNumberExclusive)?!1:Br(r,(a,s)=>s.original.startLineNumber-a.original.endLineNumberExclusive===s.modified.startLineNumber-a.modified.endLineNumberExclusive&&a.original.endLineNumberExclusive<s.original.startLineNumber&&a.modified.endLineNumberExclusive<s.modified.startLineNumber)),r}function Rl(e,t,n){let i=0,r=0;e.modifiedRange.endColumn===1&&e.originalRange.endColumn===1&&e.originalRange.startLineNumber+i<=e.originalRange.endLineNumber&&e.modifiedRange.startLineNumber+i<=e.modifiedRange.endLineNumber&&(r=-1),e.modifiedRange.startColumn-1>=n[e.modifiedRange.startLineNumber-1].length&&e.originalRange.startColumn-1>=t[e.originalRange.startLineNumber-1].length&&e.originalRange.startLineNumber<=e.originalRange.endLineNumber+r&&e.modifiedRange.startLineNumber<=e.modifiedRange.endLineNumber+r&&(i=1);const a=new G(e.originalRange.startLineNumber+i,e.originalRange.endLineNumber+1+r),s=new G(e.modifiedRange.startLineNumber+i,e.modifiedRange.endLineNumber+1+r);return new We(a,s,[e])}const ra={getLegacy:()=>new ll,getDefault:()=>new El};function $e(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}class le{constructor(t,n,i,r=1){this._rgbaBrand=void 0,this.r=Math.min(255,Math.max(0,t))|0,this.g=Math.min(255,Math.max(0,n))|0,this.b=Math.min(255,Math.max(0,i))|0,this.a=$e(Math.max(Math.min(1,r),0),3)}static equals(t,n){return t.r===n.r&&t.g===n.g&&t.b===n.b&&t.a===n.a}}class Te{constructor(t,n,i,r){this._hslaBrand=void 0,this.h=Math.max(Math.min(360,t),0)|0,this.s=$e(Math.max(Math.min(1,n),0),3),this.l=$e(Math.max(Math.min(1,i),0),3),this.a=$e(Math.max(Math.min(1,r),0),3)}static equals(t,n){return t.h===n.h&&t.s===n.s&&t.l===n.l&&t.a===n.a}static fromRGBA(t){const n=t.r/255,i=t.g/255,r=t.b/255,a=t.a,s=Math.max(n,i,r),o=Math.min(n,i,r);let l=0,u=0;const c=(o+s)/2,d=s-o;if(d>0){switch(u=Math.min(c<=.5?d/(2*c):d/(2-2*c),1),s){case n:l=(i-r)/d+(i<r?6:0);break;case i:l=(r-n)/d+2;break;case r:l=(n-i)/d+4;break}l*=60,l=Math.round(l)}return new Te(l,u,c,a)}static _hue2rgb(t,n,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+(n-t)*6*i:i<1/2?n:i<2/3?t+(n-t)*(2/3-i)*6:t}static toRGBA(t){const n=t.h/360,{s:i,l:r,a}=t;let s,o,l;if(i===0)s=o=l=r;else{const u=r<.5?r*(1+i):r+i-r*i,c=2*r-u;s=Te._hue2rgb(c,u,n+1/3),o=Te._hue2rgb(c,u,n),l=Te._hue2rgb(c,u,n-1/3)}return new le(Math.round(s*255),Math.round(o*255),Math.round(l*255),a)}}class vt{constructor(t,n,i,r){this._hsvaBrand=void 0,this.h=Math.max(Math.min(360,t),0)|0,this.s=$e(Math.max(Math.min(1,n),0),3),this.v=$e(Math.max(Math.min(1,i),0),3),this.a=$e(Math.max(Math.min(1,r),0),3)}static equals(t,n){return t.h===n.h&&t.s===n.s&&t.v===n.v&&t.a===n.a}static fromRGBA(t){const n=t.r/255,i=t.g/255,r=t.b/255,a=Math.max(n,i,r),s=Math.min(n,i,r),o=a-s,l=a===0?0:o/a;let u;return o===0?u=0:a===n?u=((i-r)/o%6+6)%6:a===i?u=(r-n)/o+2:u=(n-i)/o+4,new vt(Math.round(u*60),l,a,t.a)}static toRGBA(t){const{h:n,s:i,v:r,a}=t,s=r*i,o=s*(1-Math.abs(n/60%2-1)),l=r-s;let[u,c,d]=[0,0,0];return n<60?(u=s,c=o):n<120?(u=o,c=s):n<180?(c=s,d=o):n<240?(c=o,d=s):n<300?(u=o,d=s):n<=360&&(u=s,d=o),u=Math.round((u+l)*255),c=Math.round((c+l)*255),d=Math.round((d+l)*255),new le(u,c,d,a)}}let ae=class ke{static fromHex(t){return ke.Format.CSS.parseHex(t)||ke.red}static equals(t,n){return!t&&!n?!0:!t||!n?!1:t.equals(n)}get hsla(){return this._hsla?this._hsla:Te.fromRGBA(this.rgba)}get hsva(){return this._hsva?this._hsva:vt.fromRGBA(this.rgba)}constructor(t){if(t)if(t instanceof le)this.rgba=t;else if(t instanceof Te)this._hsla=t,this.rgba=Te.toRGBA(t);else if(t instanceof vt)this._hsva=t,this.rgba=vt.toRGBA(t);else throw new Error("Invalid color ctor argument");else throw new Error("Color needs a value")}equals(t){return!!t&&le.equals(this.rgba,t.rgba)&&Te.equals(this.hsla,t.hsla)&&vt.equals(this.hsva,t.hsva)}getRelativeLuminance(){const t=ke._relativeLuminanceForComponent(this.rgba.r),n=ke._relativeLuminanceForComponent(this.rgba.g),i=ke._relativeLuminanceForComponent(this.rgba.b),r=.2126*t+.7152*n+.0722*i;return $e(r,4)}static _relativeLuminanceForComponent(t){const n=t/255;return n<=.03928?n/12.92:Math.pow((n+.055)/1.055,2.4)}isLighter(){return(this.rgba.r*299+this.rgba.g*587+this.rgba.b*114)/1e3>=128}isLighterThan(t){const n=this.getRelativeLuminance(),i=t.getRelativeLuminance();return n>i}isDarkerThan(t){const n=this.getRelativeLuminance(),i=t.getRelativeLuminance();return n<i}lighten(t){return new ke(new Te(this.hsla.h,this.hsla.s,this.hsla.l+this.hsla.l*t,this.hsla.a))}darken(t){return new ke(new Te(this.hsla.h,this.hsla.s,this.hsla.l-this.hsla.l*t,this.hsla.a))}transparent(t){const{r:n,g:i,b:r,a}=this.rgba;return new ke(new le(n,i,r,a*t))}isTransparent(){return this.rgba.a===0}isOpaque(){return this.rgba.a===1}opposite(){return new ke(new le(255-this.rgba.r,255-this.rgba.g,255-this.rgba.b,this.rgba.a))}makeOpaque(t){if(this.isOpaque()||t.rgba.a!==1)return this;const{r:n,g:i,b:r,a}=this.rgba;return new ke(new le(t.rgba.r-a*(t.rgba.r-n),t.rgba.g-a*(t.rgba.g-i),t.rgba.b-a*(t.rgba.b-r),1))}toString(){return this._toString||(this._toString=ke.Format.CSS.format(this)),this._toString}static getLighterColor(t,n,i){if(t.isLighterThan(n))return t;i=i||.5;const r=t.getRelativeLuminance(),a=n.getRelativeLuminance();return i=i*(a-r)/a,t.lighten(i)}static getDarkerColor(t,n,i){if(t.isDarkerThan(n))return t;i=i||.5;const r=t.getRelativeLuminance(),a=n.getRelativeLuminance();return i=i*(r-a)/r,t.darken(i)}};ae.white=new ae(new le(255,255,255,1)),ae.black=new ae(new le(0,0,0,1)),ae.red=new ae(new le(255,0,0,1)),ae.blue=new ae(new le(0,0,255,1)),ae.green=new ae(new le(0,255,0,1)),ae.cyan=new ae(new le(0,255,255,1)),ae.lightgrey=new ae(new le(211,211,211,1)),ae.transparent=new ae(new le(0,0,0,0)),function(e){(function(t){(function(n){function i(f){return f.rgba.a===1?`rgb(${f.rgba.r}, ${f.rgba.g}, ${f.rgba.b})`:e.Format.CSS.formatRGBA(f)}n.formatRGB=i;function r(f){return`rgba(${f.rgba.r}, ${f.rgba.g}, ${f.rgba.b}, ${+f.rgba.a.toFixed(2)})`}n.formatRGBA=r;function a(f){return f.hsla.a===1?`hsl(${f.hsla.h}, ${(f.hsla.s*100).toFixed(2)}%, ${(f.hsla.l*100).toFixed(2)}%)`:e.Format.CSS.formatHSLA(f)}n.formatHSL=a;function s(f){return`hsla(${f.hsla.h}, ${(f.hsla.s*100).toFixed(2)}%, ${(f.hsla.l*100).toFixed(2)}%, ${f.hsla.a.toFixed(2)})`}n.formatHSLA=s;function o(f){const b=f.toString(16);return b.length!==2?"0"+b:b}function l(f){return`#${o(f.rgba.r)}${o(f.rgba.g)}${o(f.rgba.b)}`}n.formatHex=l;function u(f,b=!1){return b&&f.rgba.a===1?e.Format.CSS.formatHex(f):`#${o(f.rgba.r)}${o(f.rgba.g)}${o(f.rgba.b)}${o(Math.round(f.rgba.a*255))}`}n.formatHexA=u;function c(f){return f.isOpaque()?e.Format.CSS.formatHex(f):e.Format.CSS.formatRGBA(f)}n.format=c;function d(f){const b=f.length;if(b===0||f.charCodeAt(0)!==35)return null;if(b===7){const p=16*m(f.charCodeAt(1))+m(f.charCodeAt(2)),w=16*m(f.charCodeAt(3))+m(f.charCodeAt(4)),x=16*m(f.charCodeAt(5))+m(f.charCodeAt(6));return new e(new le(p,w,x,1))}if(b===9){const p=16*m(f.charCodeAt(1))+m(f.charCodeAt(2)),w=16*m(f.charCodeAt(3))+m(f.charCodeAt(4)),x=16*m(f.charCodeAt(5))+m(f.charCodeAt(6)),_=16*m(f.charCodeAt(7))+m(f.charCodeAt(8));return new e(new le(p,w,x,_/255))}if(b===4){const p=m(f.charCodeAt(1)),w=m(f.charCodeAt(2)),x=m(f.charCodeAt(3));return new e(new le(16*p+p,16*w+w,16*x+x))}if(b===5){const p=m(f.charCodeAt(1)),w=m(f.charCodeAt(2)),x=m(f.charCodeAt(3)),_=m(f.charCodeAt(4));return new e(new le(16*p+p,16*w+w,16*x+x,(16*_+_)/255))}return null}n.parseHex=d;function m(f){switch(f){case 48:return 0;case 49:return 1;case 50:return 2;case 51:return 3;case 52:return 4;case 53:return 5;case 54:return 6;case 55:return 7;case 56:return 8;case 57:return 9;case 97:return 10;case 65:return 10;case 98:return 11;case 66:return 11;case 99:return 12;case 67:return 12;case 100:return 13;case 68:return 13;case 101:return 14;case 69:return 14;case 102:return 15;case 70:return 15}return 0}})(t.CSS||(t.CSS={}))})(e.Format||(e.Format={}))}(ae||(ae={}));function aa(e){const t=[];for(const n of e){const i=Number(n);(i||i===0&&n.replace(/\s/g,"")!=="")&&t.push(i)}return t}function Yn(e,t,n,i){return{red:e/255,blue:n/255,green:t/255,alpha:i}}function Et(e,t){const n=t.index,i=t[0].length;if(!n)return;const r=e.positionAt(n);return{startLineNumber:r.lineNumber,startColumn:r.column,endLineNumber:r.lineNumber,endColumn:r.column+i}}function Ml(e,t){if(!e)return;const n=ae.Format.CSS.parseHex(t);if(n)return{range:e,color:Yn(n.rgba.r,n.rgba.g,n.rgba.b,n.rgba.a)}}function sa(e,t,n){if(!e||t.length!==1)return;const r=t[0].values(),a=aa(r);return{range:e,color:Yn(a[0],a[1],a[2],n?a[3]:1)}}function oa(e,t,n){if(!e||t.length!==1)return;const r=t[0].values(),a=aa(r),s=new ae(new Te(a[0],a[1]/100,a[2]/100,n?a[3]:1));return{range:e,color:Yn(s.rgba.r,s.rgba.g,s.rgba.b,s.rgba.a)}}function Rt(e,t){return typeof e=="string"?[...e.matchAll(t)]:e.findMatches(t)}function Dl(e){const t=[],i=Rt(e,/\b(rgb|rgba|hsl|hsla)(\([0-9\s,.\%]*\))|(#)([A-Fa-f0-9]{3})\b|(#)([A-Fa-f0-9]{4})\b|(#)([A-Fa-f0-9]{6})\b|(#)([A-Fa-f0-9]{8})\b/gm);if(i.length>0)for(const r of i){const a=r.filter(u=>u!==void 0),s=a[1],o=a[2];if(!o)continue;let l;if(s==="rgb"){const u=/^\(\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*\)$/gm;l=sa(Et(e,r),Rt(o,u),!1)}else if(s==="rgba"){const u=/^\(\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\s*,\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\s*\)$/gm;l=sa(Et(e,r),Rt(o,u),!0)}else if(s==="hsl"){const u=/^\(\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\s*,\s*(100|\d{1,2}[.]\d*|\d{1,2})%\s*,\s*(100|\d{1,2}[.]\d*|\d{1,2})%\s*\)$/gm;l=oa(Et(e,r),Rt(o,u),!1)}else if(s==="hsla"){const u=/^\(\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\s*,\s*(100|\d{1,2}[.]\d*|\d{1,2})%\s*,\s*(100|\d{1,2}[.]\d*|\d{1,2})%\s*,\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\s*\)$/gm;l=oa(Et(e,r),Rt(o,u),!0)}else s==="#"&&(l=Ml(Et(e,r),s+o));l&&t.push(l)}return t}function Nl(e){return!e||typeof e.getValue!="function"||typeof e.positionAt!="function"?[]:Dl(e)}const la=/\bMARK:\s*(.*)$/d,Il=/^-+|-+$/g;function zl(e,t){var n;let i=[];if(t.findRegionSectionHeaders&&(!((n=t.foldingRules)===null||n===void 0)&&n.markers)){const r=Hl(e,t);i=i.concat(r)}if(t.findMarkSectionHeaders){const r=Ul(e);i=i.concat(r)}return i}function Hl(e,t){const n=[],i=e.getLineCount();for(let r=1;r<=i;r++){const a=e.getLineContent(r),s=a.match(t.foldingRules.markers.start);if(s){const o={startLineNumber:r,startColumn:s[0].length+1,endLineNumber:r,endColumn:a.length+1};if(o.endColumn>o.startColumn){const l={range:o,...ua(a.substring(s[0].length)),shouldBeInComments:!1};(l.text||l.hasSeparatorLine)&&n.push(l)}}}return n}function Ul(e){const t=[],n=e.getLineCount();for(let i=1;i<=n;i++){const r=e.getLineContent(i);Wl(r,i,t)}return t}function Wl(e,t,n){la.lastIndex=0;const i=la.exec(e);if(i){const r=i.indices[1][0]+1,a=i.indices[1][1]+1,s={startLineNumber:t,startColumn:r,endLineNumber:t,endColumn:a};if(s.endColumn>s.startColumn){const o={range:s,...ua(i[1]),shouldBeInComments:!0};(o.text||o.hasSeparatorLine)&&n.push(o)}}}function ua(e){e=e.trim();const t=e.startsWith("-");return e=e.replace(Il,""),{text:e,hasSeparatorLine:t}}class Fl extends Eo{get uri(){return this._uri}get eol(){return this._eol}getValue(){return this.getText()}findMatches(t){const n=[];for(let i=0;i<this._lines.length;i++){const r=this._lines[i],a=this.offsetAt(new Ne(i+1,1)),s=r.matchAll(t);for(const o of s)(o.index||o.index===0)&&(o.index=o.index+a),n.push(o)}return n}getLinesContent(){return this._lines.slice(0)}getLineCount(){return this._lines.length}getLineContent(t){return this._lines[t-1]}getWordAtPosition(t,n){const i=In(t.column,Hi(n),this._lines[t.lineNumber-1],0);return i?new oe(t.lineNumber,i.startColumn,t.lineNumber,i.endColumn):null}words(t){const n=this._lines,i=this._wordenize.bind(this);let r=0,a="",s=0,o=[];return{*[Symbol.iterator](){for(;;)if(s<o.length){const l=a.substring(o[s].start,o[s].end);s+=1,yield l}else if(r<n.length)a=n[r],o=i(a,t),s=0,r+=1;else break}}}getLineWords(t,n){const i=this._lines[t-1],r=this._wordenize(i,n),a=[];for(const s of r)a.push({word:i.substring(s.start,s.end),startColumn:s.start+1,endColumn:s.end+1});return a}_wordenize(t,n){const i=[];let r;for(n.lastIndex=0;(r=n.exec(t))&&r[0].length!==0;)i.push({start:r.index,end:r.index+r[0].length});return i}getValueInRange(t){if(t=this._validateRange(t),t.startLineNumber===t.endLineNumber)return this._lines[t.startLineNumber-1].substring(t.startColumn-1,t.endColumn-1);const n=this._eol,i=t.startLineNumber-1,r=t.endLineNumber-1,a=[];a.push(this._lines[i].substring(t.startColumn-1));for(let s=i+1;s<r;s++)a.push(this._lines[s]);return a.push(this._lines[r].substring(0,t.endColumn-1)),a.join(n)}offsetAt(t){return t=this._validatePosition(t),this._ensureLineStarts(),this._lineStarts.getPrefixSum(t.lineNumber-2)+(t.column-1)}positionAt(t){t=Math.floor(t),t=Math.max(0,t),this._ensureLineStarts();const n=this._lineStarts.getIndexOf(t),i=this._lines[n.index].length;return{lineNumber:1+n.index,column:1+Math.min(n.remainder,i)}}_validateRange(t){const n=this._validatePosition({lineNumber:t.startLineNumber,column:t.startColumn}),i=this._validatePosition({lineNumber:t.endLineNumber,column:t.endColumn});return n.lineNumber!==t.startLineNumber||n.column!==t.startColumn||i.lineNumber!==t.endLineNumber||i.column!==t.endColumn?{startLineNumber:n.lineNumber,startColumn:n.column,endLineNumber:i.lineNumber,endColumn:i.column}:t}_validatePosition(t){if(!Ne.isIPosition(t))throw new Error("bad position");let{lineNumber:n,column:i}=t,r=!1;if(n<1)n=1,i=1,r=!0;else if(n>this._lines.length)n=this._lines.length,i=this._lines[n-1].length+1,r=!0;else{const a=this._lines[n-1].length+1;i<1?(i=1,r=!0):i>a&&(i=a,r=!0)}return r?{lineNumber:n,column:i}:t}}class et{constructor(t,n){this._host=t,this._models=Object.create(null),this._foreignModuleFactory=n,this._foreignModule=null}dispose(){this._models=Object.create(null)}_getModel(t){return this._models[t]}_getModels(){const t=[];return Object.keys(this._models).forEach(n=>t.push(this._models[n])),t}acceptNewModel(t){this._models[t.url]=new Fl(Mn.parse(t.url),t.lines,t.EOL,t.versionId)}acceptModelChanged(t,n){if(!this._models[t])return;this._models[t].onEvents(n)}acceptRemovedModel(t){this._models[t]&&delete this._models[t]}async computeUnicodeHighlights(t,n,i){const r=this._getModel(t);return r?il.computeUnicodeHighlights(r,n,i):{ranges:[],hasMore:!1,ambiguousCharacterCount:0,invisibleCharacterCount:0,nonBasicAsciiCharacterCount:0}}async findSectionHeaders(t,n){const i=this._getModel(t);return i?zl(i,n):[]}async computeDiff(t,n,i,r){const a=this._getModel(t),s=this._getModel(n);return!a||!s?null:et.computeDiff(a,s,i,r)}static computeDiff(t,n,i,r){const a=r==="advanced"?ra.getDefault():ra.getLegacy(),s=t.getLinesContent(),o=n.getLinesContent(),l=a.computeDiff(s,o,i),u=l.changes.length>0?!1:this._modelsAreIdentical(t,n);function c(d){return d.map(m=>{var f;return[m.original.startLineNumber,m.original.endLineNumberExclusive,m.modified.startLineNumber,m.modified.endLineNumberExclusive,(f=m.innerChanges)===null||f===void 0?void 0:f.map(b=>[b.originalRange.startLineNumber,b.originalRange.startColumn,b.originalRange.endLineNumber,b.originalRange.endColumn,b.modifiedRange.startLineNumber,b.modifiedRange.startColumn,b.modifiedRange.endLineNumber,b.modifiedRange.endColumn])]})}return{identical:u,quitEarly:l.hitTimeout,changes:c(l.changes),moves:l.moves.map(d=>[d.lineRangeMapping.original.startLineNumber,d.lineRangeMapping.original.endLineNumberExclusive,d.lineRangeMapping.modified.startLineNumber,d.lineRangeMapping.modified.endLineNumberExclusive,c(d.changes)])}}static _modelsAreIdentical(t,n){const i=t.getLineCount(),r=n.getLineCount();if(i!==r)return!1;for(let a=1;a<=i;a++){const s=t.getLineContent(a),o=n.getLineContent(a);if(s!==o)return!1}return!0}async computeMoreMinimalEdits(t,n,i){const r=this._getModel(t);if(!r)return n;const a=[];let s;n=n.slice(0).sort((l,u)=>{if(l.range&&u.range)return oe.compareRangesUsingStarts(l.range,u.range);const c=l.range?0:1,d=u.range?0:1;return c-d});let o=0;for(let l=1;l<n.length;l++)oe.getEndPosition(n[o].range).equals(oe.getStartPosition(n[l].range))?(n[o].range=oe.fromPositions(oe.getStartPosition(n[o].range),oe.getEndPosition(n[l].range)),n[o].text+=n[l].text):(o++,n[o]=n[l]);n.length=o+1;for(let{range:l,text:u,eol:c}of n){if(typeof c=="number"&&(s=c),oe.isEmpty(l)&&!u)continue;const d=r.getValueInRange(l);if(u=u.replace(/\r\n|\n|\r/g,r.eol),d===u)continue;if(Math.max(u.length,d.length)>et._diffLimit){a.push({range:l,text:u});continue}const m=no(d,u,i),f=r.offsetAt(oe.lift(l).getStartPosition());for(const b of m){const p=r.positionAt(f+b.originalStart),w=r.positionAt(f+b.originalStart+b.originalLength),x={text:u.substr(b.modifiedStart,b.modifiedLength),range:{startLineNumber:p.lineNumber,startColumn:p.column,endLineNumber:w.lineNumber,endColumn:w.column}};r.getValueInRange(x.range)!==x.text&&a.push(x)}}return typeof s=="number"&&a.push({eol:s,text:"",range:{startLineNumber:0,startColumn:0,endLineNumber:0,endColumn:0}}),a}async computeLinks(t){const n=this._getModel(t);return n?Uo(n):null}async computeDefaultDocumentColors(t){const n=this._getModel(t);return n?Nl(n):null}async textualSuggest(t,n,i,r){const a=new Pt,s=new RegExp(i,r),o=new Set;e:for(const l of t){const u=this._getModel(l);if(u){for(const c of u.words(s))if(!(c===n||!isNaN(Number(c)))&&(o.add(c),o.size>et._suggestionsLimit))break e}}return{words:Array.from(o),duration:a.elapsed()}}async computeWordRanges(t,n,i,r){const a=this._getModel(t);if(!a)return Object.create(null);const s=new RegExp(i,r),o=Object.create(null);for(let l=n.startLineNumber;l<n.endLineNumber;l++){const u=a.getLineWords(l,s);for(const c of u){if(!isNaN(Number(c.word)))continue;let d=o[c.word];d||(d=[],o[c.word]=d),d.push({startLineNumber:l,startColumn:c.startColumn,endLineNumber:l,endColumn:c.endColumn})}}return o}async navigateValueSet(t,n,i,r,a){const s=this._getModel(t);if(!s)return null;const o=new RegExp(r,a);n.startColumn===n.endColumn&&(n={startLineNumber:n.startLineNumber,startColumn:n.startColumn,endLineNumber:n.endLineNumber,endColumn:n.endColumn+1});const l=s.getValueInRange(n),u=s.getWordAtPosition({lineNumber:n.startLineNumber,column:n.startColumn},o);if(!u)return null;const c=s.getValueInRange(u);return Un.INSTANCE.navigateValueSet(n,l,u,c,i)}loadForeignModule(t,n,i){const s={host:Es(i,(o,l)=>this._host.fhr(o,l)),getMirrorModels:()=>this._getModels()};return this._foreignModuleFactory?(this._foreignModule=this._foreignModuleFactory(s,n),Promise.resolve(yn(this._foreignModule))):Promise.reject(new Error("Unexpected usage"))}fmr(t,n){if(!this._foreignModule||typeof this._foreignModule[t]!="function")return Promise.reject(new Error("Missing requestHandler or method: "+t));try{return Promise.resolve(this._foreignModule[t].apply(this._foreignModule,n))}catch(i){return Promise.reject(i)}}}et._diffLimit=1e5,et._suggestionsLimit=1e4,typeof importScripts=="function"&&(globalThis.monaco=Xo());let Zn=!1;function ca(e){if(Zn)return;Zn=!0;const t=new eo(n=>{globalThis.postMessage(n)},n=>new et(n,e));globalThis.onmessage=n=>{t.onmessage(n.data)}}globalThis.onmessage=e=>{Zn||ca(null)};/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.48.0(0037b13fb5d186fdf1e7df51a9416a2de2b8c670)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/function Pl(e,t){let n;return t.length===0?n=e:n=e.replace(/\{(\d+)\}/g,(i,r)=>{let a=r[0];return typeof t[a]<"u"?t[a]:i}),n}function Bl(e,t,...n){return Pl(t,n)}function Kn(e){return Bl}var ha;(function(e){e.MIN_VALUE=-2147483648,e.MAX_VALUE=2147483647})(ha||(ha={}));var en;(function(e){e.MIN_VALUE=0,e.MAX_VALUE=2147483647})(en||(en={}));var ce;(function(e){function t(i,r){return i===Number.MAX_VALUE&&(i=en.MAX_VALUE),r===Number.MAX_VALUE&&(r=en.MAX_VALUE),{line:i,character:r}}e.create=t;function n(i){var r=i;return C.objectLiteral(r)&&C.uinteger(r.line)&&C.uinteger(r.character)}e.is=n})(ce||(ce={}));var Y;(function(e){function t(i,r,a,s){if(C.uinteger(i)&&C.uinteger(r)&&C.uinteger(a)&&C.uinteger(s))return{start:ce.create(i,r),end:ce.create(a,s)};if(ce.is(i)&&ce.is(r))return{start:i,end:r};throw new Error("Range#create called with invalid arguments["+i+", "+r+", "+a+", "+s+"]")}e.create=t;function n(i){var r=i;return C.objectLiteral(r)&&ce.is(r.start)&&ce.is(r.end)}e.is=n})(Y||(Y={}));var tn;(function(e){function t(i,r){return{uri:i,range:r}}e.create=t;function n(i){var r=i;return C.defined(r)&&Y.is(r.range)&&(C.string(r.uri)||C.undefined(r.uri))}e.is=n})(tn||(tn={}));var da;(function(e){function t(i,r,a,s){return{targetUri:i,targetRange:r,targetSelectionRange:a,originSelectionRange:s}}e.create=t;function n(i){var r=i;return C.defined(r)&&Y.is(r.targetRange)&&C.string(r.targetUri)&&(Y.is(r.targetSelectionRange)||C.undefined(r.targetSelectionRange))&&(Y.is(r.originSelectionRange)||C.undefined(r.originSelectionRange))}e.is=n})(da||(da={}));var ei;(function(e){function t(i,r,a,s){return{red:i,green:r,blue:a,alpha:s}}e.create=t;function n(i){var r=i;return C.numberRange(r.red,0,1)&&C.numberRange(r.green,0,1)&&C.numberRange(r.blue,0,1)&&C.numberRange(r.alpha,0,1)}e.is=n})(ei||(ei={}));var ma;(function(e){function t(i,r){return{range:i,color:r}}e.create=t;function n(i){var r=i;return Y.is(r.range)&&ei.is(r.color)}e.is=n})(ma||(ma={}));var fa;(function(e){function t(i,r,a){return{label:i,textEdit:r,additionalTextEdits:a}}e.create=t;function n(i){var r=i;return C.string(r.label)&&(C.undefined(r.textEdit)||se.is(r))&&(C.undefined(r.additionalTextEdits)||C.typedArray(r.additionalTextEdits,se.is))}e.is=n})(fa||(fa={}));var nn;(function(e){e.Comment="comment",e.Imports="imports",e.Region="region"})(nn||(nn={}));var pa;(function(e){function t(i,r,a,s,o){var l={startLine:i,endLine:r};return C.defined(a)&&(l.startCharacter=a),C.defined(s)&&(l.endCharacter=s),C.defined(o)&&(l.kind=o),l}e.create=t;function n(i){var r=i;return C.uinteger(r.startLine)&&C.uinteger(r.startLine)&&(C.undefined(r.startCharacter)||C.uinteger(r.startCharacter))&&(C.undefined(r.endCharacter)||C.uinteger(r.endCharacter))&&(C.undefined(r.kind)||C.string(r.kind))}e.is=n})(pa||(pa={}));var ti;(function(e){function t(i,r){return{location:i,message:r}}e.create=t;function n(i){var r=i;return C.defined(r)&&tn.is(r.location)&&C.string(r.message)}e.is=n})(ti||(ti={}));var ga;(function(e){e.Error=1,e.Warning=2,e.Information=3,e.Hint=4})(ga||(ga={}));var ba;(function(e){e.Unnecessary=1,e.Deprecated=2})(ba||(ba={}));var va;(function(e){function t(n){var i=n;return i!=null&&C.string(i.href)}e.is=t})(va||(va={}));var rn;(function(e){function t(i,r,a,s,o,l){var u={range:i,message:r};return C.defined(a)&&(u.severity=a),C.defined(s)&&(u.code=s),C.defined(o)&&(u.source=o),C.defined(l)&&(u.relatedInformation=l),u}e.create=t;function n(i){var r,a=i;return C.defined(a)&&Y.is(a.range)&&C.string(a.message)&&(C.number(a.severity)||C.undefined(a.severity))&&(C.integer(a.code)||C.string(a.code)||C.undefined(a.code))&&(C.undefined(a.codeDescription)||C.string((r=a.codeDescription)===null||r===void 0?void 0:r.href))&&(C.string(a.source)||C.undefined(a.source))&&(C.undefined(a.relatedInformation)||C.typedArray(a.relatedInformation,ti.is))}e.is=n})(rn||(rn={}));var Mt;(function(e){function t(i,r){for(var a=[],s=2;s<arguments.length;s++)a[s-2]=arguments[s];var o={title:i,command:r};return C.defined(a)&&a.length>0&&(o.arguments=a),o}e.create=t;function n(i){var r=i;return C.defined(r)&&C.string(r.title)&&C.string(r.command)}e.is=n})(Mt||(Mt={}));var se;(function(e){function t(a,s){return{range:a,newText:s}}e.replace=t;function n(a,s){return{range:{start:a,end:a},newText:s}}e.insert=n;function i(a){return{range:a,newText:""}}e.del=i;function r(a){var s=a;return C.objectLiteral(s)&&C.string(s.newText)&&Y.is(s.range)}e.is=r})(se||(se={}));var _t;(function(e){function t(i,r,a){var s={label:i};return r!==void 0&&(s.needsConfirmation=r),a!==void 0&&(s.description=a),s}e.create=t;function n(i){var r=i;return r!==void 0&&C.objectLiteral(r)&&C.string(r.label)&&(C.boolean(r.needsConfirmation)||r.needsConfirmation===void 0)&&(C.string(r.description)||r.description===void 0)}e.is=n})(_t||(_t={}));var de;(function(e){function t(n){var i=n;return typeof i=="string"}e.is=t})(de||(de={}));var Xe;(function(e){function t(a,s,o){return{range:a,newText:s,annotationId:o}}e.replace=t;function n(a,s,o){return{range:{start:a,end:a},newText:s,annotationId:o}}e.insert=n;function i(a,s){return{range:a,newText:"",annotationId:s}}e.del=i;function r(a){var s=a;return se.is(s)&&(_t.is(s.annotationId)||de.is(s.annotationId))}e.is=r})(Xe||(Xe={}));var an;(function(e){function t(i,r){return{textDocument:i,edits:r}}e.create=t;function n(i){var r=i;return C.defined(r)&&on.is(r.textDocument)&&Array.isArray(r.edits)}e.is=n})(an||(an={}));var Dt;(function(e){function t(i,r,a){var s={kind:"create",uri:i};return r!==void 0&&(r.overwrite!==void 0||r.ignoreIfExists!==void 0)&&(s.options=r),a!==void 0&&(s.annotationId=a),s}e.create=t;function n(i){var r=i;return r&&r.kind==="create"&&C.string(r.uri)&&(r.options===void 0||(r.options.overwrite===void 0||C.boolean(r.options.overwrite))&&(r.options.ignoreIfExists===void 0||C.boolean(r.options.ignoreIfExists)))&&(r.annotationId===void 0||de.is(r.annotationId))}e.is=n})(Dt||(Dt={}));var Nt;(function(e){function t(i,r,a,s){var o={kind:"rename",oldUri:i,newUri:r};return a!==void 0&&(a.overwrite!==void 0||a.ignoreIfExists!==void 0)&&(o.options=a),s!==void 0&&(o.annotationId=s),o}e.create=t;function n(i){var r=i;return r&&r.kind==="rename"&&C.string(r.oldUri)&&C.string(r.newUri)&&(r.options===void 0||(r.options.overwrite===void 0||C.boolean(r.options.overwrite))&&(r.options.ignoreIfExists===void 0||C.boolean(r.options.ignoreIfExists)))&&(r.annotationId===void 0||de.is(r.annotationId))}e.is=n})(Nt||(Nt={}));var It;(function(e){function t(i,r,a){var s={kind:"delete",uri:i};return r!==void 0&&(r.recursive!==void 0||r.ignoreIfNotExists!==void 0)&&(s.options=r),a!==void 0&&(s.annotationId=a),s}e.create=t;function n(i){var r=i;return r&&r.kind==="delete"&&C.string(r.uri)&&(r.options===void 0||(r.options.recursive===void 0||C.boolean(r.options.recursive))&&(r.options.ignoreIfNotExists===void 0||C.boolean(r.options.ignoreIfNotExists)))&&(r.annotationId===void 0||de.is(r.annotationId))}e.is=n})(It||(It={}));var ni;(function(e){function t(n){var i=n;return i&&(i.changes!==void 0||i.documentChanges!==void 0)&&(i.documentChanges===void 0||i.documentChanges.every(function(r){return C.string(r.kind)?Dt.is(r)||Nt.is(r)||It.is(r):an.is(r)}))}e.is=t})(ni||(ni={}));var sn=function(){function e(t,n){this.edits=t,this.changeAnnotations=n}return e.prototype.insert=function(t,n,i){var r,a;if(i===void 0?r=se.insert(t,n):de.is(i)?(a=i,r=Xe.insert(t,n,i)):(this.assertChangeAnnotations(this.changeAnnotations),a=this.changeAnnotations.manage(i),r=Xe.insert(t,n,a)),this.edits.push(r),a!==void 0)return a},e.prototype.replace=function(t,n,i){var r,a;if(i===void 0?r=se.replace(t,n):de.is(i)?(a=i,r=Xe.replace(t,n,i)):(this.assertChangeAnnotations(this.changeAnnotations),a=this.changeAnnotations.manage(i),r=Xe.replace(t,n,a)),this.edits.push(r),a!==void 0)return a},e.prototype.delete=function(t,n){var i,r;if(n===void 0?i=se.del(t):de.is(n)?(r=n,i=Xe.del(t,n)):(this.assertChangeAnnotations(this.changeAnnotations),r=this.changeAnnotations.manage(n),i=Xe.del(t,r)),this.edits.push(i),r!==void 0)return r},e.prototype.add=function(t){this.edits.push(t)},e.prototype.all=function(){return this.edits},e.prototype.clear=function(){this.edits.splice(0,this.edits.length)},e.prototype.assertChangeAnnotations=function(t){if(t===void 0)throw new Error("Text edit change is not configured to manage change annotations.")},e}(),_a=function(){function e(t){this._annotations=t===void 0?Object.create(null):t,this._counter=0,this._size=0}return e.prototype.all=function(){return this._annotations},Object.defineProperty(e.prototype,"size",{get:function(){return this._size},enumerable:!1,configurable:!0}),e.prototype.manage=function(t,n){var i;if(de.is(t)?i=t:(i=this.nextId(),n=t),this._annotations[i]!==void 0)throw new Error("Id "+i+" is already in use.");if(n===void 0)throw new Error("No annotation provided for id "+i);return this._annotations[i]=n,this._size++,i},e.prototype.nextId=function(){return this._counter++,this._counter.toString()},e}();(function(){function e(t){var n=this;this._textEditChanges=Object.create(null),t!==void 0?(this._workspaceEdit=t,t.documentChanges?(this._changeAnnotations=new _a(t.changeAnnotations),t.changeAnnotations=this._changeAnnotations.all(),t.documentChanges.forEach(function(i){if(an.is(i)){var r=new sn(i.edits,n._changeAnnotations);n._textEditChanges[i.textDocument.uri]=r}})):t.changes&&Object.keys(t.changes).forEach(function(i){var r=new sn(t.changes[i]);n._textEditChanges[i]=r})):this._workspaceEdit={}}return Object.defineProperty(e.prototype,"edit",{get:function(){return this.initDocumentChanges(),this._changeAnnotations!==void 0&&(this._changeAnnotations.size===0?this._workspaceEdit.changeAnnotations=void 0:this._workspaceEdit.changeAnnotations=this._changeAnnotations.all()),this._workspaceEdit},enumerable:!1,configurable:!0}),e.prototype.getTextEditChange=function(t){if(on.is(t)){if(this.initDocumentChanges(),this._workspaceEdit.documentChanges===void 0)throw new Error("Workspace edit is not configured for document changes.");var n={uri:t.uri,version:t.version},i=this._textEditChanges[n.uri];if(!i){var r=[],a={textDocument:n,edits:r};this._workspaceEdit.documentChanges.push(a),i=new sn(r,this._changeAnnotations),this._textEditChanges[n.uri]=i}return i}else{if(this.initChanges(),this._workspaceEdit.changes===void 0)throw new Error("Workspace edit is not configured for normal text edit changes.");var i=this._textEditChanges[t];if(!i){var r=[];this._workspaceEdit.changes[t]=r,i=new sn(r),this._textEditChanges[t]=i}return i}},e.prototype.initDocumentChanges=function(){this._workspaceEdit.documentChanges===void 0&&this._workspaceEdit.changes===void 0&&(this._changeAnnotations=new _a,this._workspaceEdit.documentChanges=[],this._workspaceEdit.changeAnnotations=this._changeAnnotations.all())},e.prototype.initChanges=function(){this._workspaceEdit.documentChanges===void 0&&this._workspaceEdit.changes===void 0&&(this._workspaceEdit.changes=Object.create(null))},e.prototype.createFile=function(t,n,i){if(this.initDocumentChanges(),this._workspaceEdit.documentChanges===void 0)throw new Error("Workspace edit is not configured for document changes.");var r;_t.is(n)||de.is(n)?r=n:i=n;var a,s;if(r===void 0?a=Dt.create(t,i):(s=de.is(r)?r:this._changeAnnotations.manage(r),a=Dt.create(t,i,s)),this._workspaceEdit.documentChanges.push(a),s!==void 0)return s},e.prototype.renameFile=function(t,n,i,r){if(this.initDocumentChanges(),this._workspaceEdit.documentChanges===void 0)throw new Error("Workspace edit is not configured for document changes.");var a;_t.is(i)||de.is(i)?a=i:r=i;var s,o;if(a===void 0?s=Nt.create(t,n,r):(o=de.is(a)?a:this._changeAnnotations.manage(a),s=Nt.create(t,n,r,o)),this._workspaceEdit.documentChanges.push(s),o!==void 0)return o},e.prototype.deleteFile=function(t,n,i){if(this.initDocumentChanges(),this._workspaceEdit.documentChanges===void 0)throw new Error("Workspace edit is not configured for document changes.");var r;_t.is(n)||de.is(n)?r=n:i=n;var a,s;if(r===void 0?a=It.create(t,i):(s=de.is(r)?r:this._changeAnnotations.manage(r),a=It.create(t,i,s)),this._workspaceEdit.documentChanges.push(a),s!==void 0)return s},e})();var wa;(function(e){function t(i){return{uri:i}}e.create=t;function n(i){var r=i;return C.defined(r)&&C.string(r.uri)}e.is=n})(wa||(wa={}));var ya;(function(e){function t(i,r){return{uri:i,version:r}}e.create=t;function n(i){var r=i;return C.defined(r)&&C.string(r.uri)&&C.integer(r.version)}e.is=n})(ya||(ya={}));var on;(function(e){function t(i,r){return{uri:i,version:r}}e.create=t;function n(i){var r=i;return C.defined(r)&&C.string(r.uri)&&(r.version===null||C.integer(r.version))}e.is=n})(on||(on={}));var xa;(function(e){function t(i,r,a,s){return{uri:i,languageId:r,version:a,text:s}}e.create=t;function n(i){var r=i;return C.defined(r)&&C.string(r.uri)&&C.string(r.languageId)&&C.integer(r.version)&&C.string(r.text)}e.is=n})(xa||(xa={}));var Ee;(function(e){e.PlainText="plaintext",e.Markdown="markdown"})(Ee||(Ee={})),function(e){function t(n){var i=n;return i===e.PlainText||i===e.Markdown}e.is=t}(Ee||(Ee={}));var ii;(function(e){function t(n){var i=n;return C.objectLiteral(n)&&Ee.is(i.kind)&&C.string(i.value)}e.is=t})(ii||(ii={}));var be;(function(e){e.Text=1,e.Method=2,e.Function=3,e.Constructor=4,e.Field=5,e.Variable=6,e.Class=7,e.Interface=8,e.Module=9,e.Property=10,e.Unit=11,e.Value=12,e.Enum=13,e.Keyword=14,e.Snippet=15,e.Color=16,e.File=17,e.Reference=18,e.Folder=19,e.EnumMember=20,e.Constant=21,e.Struct=22,e.Event=23,e.Operator=24,e.TypeParameter=25})(be||(be={}));var Re;(function(e){e.PlainText=1,e.Snippet=2})(Re||(Re={}));var Ta;(function(e){e.Deprecated=1})(Ta||(Ta={}));var ka;(function(e){function t(i,r,a){return{newText:i,insert:r,replace:a}}e.create=t;function n(i){var r=i;return r&&C.string(r.newText)&&Y.is(r.insert)&&Y.is(r.replace)}e.is=n})(ka||(ka={}));var Aa;(function(e){e.asIs=1,e.adjustIndentation=2})(Aa||(Aa={}));var Sa;(function(e){function t(n){return{label:n}}e.create=t})(Sa||(Sa={}));var La;(function(e){function t(n,i){return{items:n||[],isIncomplete:!!i}}e.create=t})(La||(La={}));var ln;(function(e){function t(i){return i.replace(/[\\`*_{}[\]()#+\-.!]/g,"\\$&")}e.fromPlainText=t;function n(i){var r=i;return C.string(r)||C.objectLiteral(r)&&C.string(r.language)&&C.string(r.value)}e.is=n})(ln||(ln={}));var Ca;(function(e){function t(n){var i=n;return!!i&&C.objectLiteral(i)&&(ii.is(i.contents)||ln.is(i.contents)||C.typedArray(i.contents,ln.is))&&(n.range===void 0||Y.is(n.range))}e.is=t})(Ca||(Ca={}));var Ea;(function(e){function t(n,i){return i?{label:n,documentation:i}:{label:n}}e.create=t})(Ea||(Ea={}));var Ra;(function(e){function t(n,i){for(var r=[],a=2;a<arguments.length;a++)r[a-2]=arguments[a];var s={label:n};return C.defined(i)&&(s.documentation=i),C.defined(r)?s.parameters=r:s.parameters=[],s}e.create=t})(Ra||(Ra={}));var un;(function(e){e.Text=1,e.Read=2,e.Write=3})(un||(un={}));var Ma;(function(e){function t(n,i){var r={range:n};return C.number(i)&&(r.kind=i),r}e.create=t})(Ma||(Ma={}));var ri;(function(e){e.File=1,e.Module=2,e.Namespace=3,e.Package=4,e.Class=5,e.Method=6,e.Property=7,e.Field=8,e.Constructor=9,e.Enum=10,e.Interface=11,e.Function=12,e.Variable=13,e.Constant=14,e.String=15,e.Number=16,e.Boolean=17,e.Array=18,e.Object=19,e.Key=20,e.Null=21,e.EnumMember=22,e.Struct=23,e.Event=24,e.Operator=25,e.TypeParameter=26})(ri||(ri={}));var Da;(function(e){e.Deprecated=1})(Da||(Da={}));var Na;(function(e){function t(n,i,r,a,s){var o={name:n,kind:i,location:{uri:a,range:r}};return s&&(o.containerName=s),o}e.create=t})(Na||(Na={}));var Ia;(function(e){function t(i,r,a,s,o,l){var u={name:i,detail:r,kind:a,range:s,selectionRange:o};return l!==void 0&&(u.children=l),u}e.create=t;function n(i){var r=i;return r&&C.string(r.name)&&C.number(r.kind)&&Y.is(r.range)&&Y.is(r.selectionRange)&&(r.detail===void 0||C.string(r.detail))&&(r.deprecated===void 0||C.boolean(r.deprecated))&&(r.children===void 0||Array.isArray(r.children))&&(r.tags===void 0||Array.isArray(r.tags))}e.is=n})(Ia||(Ia={}));var za;(function(e){e.Empty="",e.QuickFix="quickfix",e.Refactor="refactor",e.RefactorExtract="refactor.extract",e.RefactorInline="refactor.inline",e.RefactorRewrite="refactor.rewrite",e.Source="source",e.SourceOrganizeImports="source.organizeImports",e.SourceFixAll="source.fixAll"})(za||(za={}));var Ha;(function(e){function t(i,r){var a={diagnostics:i};return r!=null&&(a.only=r),a}e.create=t;function n(i){var r=i;return C.defined(r)&&C.typedArray(r.diagnostics,rn.is)&&(r.only===void 0||C.typedArray(r.only,C.string))}e.is=n})(Ha||(Ha={}));var Ua;(function(e){function t(i,r,a){var s={title:i},o=!0;return typeof r=="string"?(o=!1,s.kind=r):Mt.is(r)?s.command=r:s.edit=r,o&&a!==void 0&&(s.kind=a),s}e.create=t;function n(i){var r=i;return r&&C.string(r.title)&&(r.diagnostics===void 0||C.typedArray(r.diagnostics,rn.is))&&(r.kind===void 0||C.string(r.kind))&&(r.edit!==void 0||r.command!==void 0)&&(r.command===void 0||Mt.is(r.command))&&(r.isPreferred===void 0||C.boolean(r.isPreferred))&&(r.edit===void 0||ni.is(r.edit))}e.is=n})(Ua||(Ua={}));var Wa;(function(e){function t(i,r){var a={range:i};return C.defined(r)&&(a.data=r),a}e.create=t;function n(i){var r=i;return C.defined(r)&&Y.is(r.range)&&(C.undefined(r.command)||Mt.is(r.command))}e.is=n})(Wa||(Wa={}));var Fa;(function(e){function t(i,r){return{tabSize:i,insertSpaces:r}}e.create=t;function n(i){var r=i;return C.defined(r)&&C.uinteger(r.tabSize)&&C.boolean(r.insertSpaces)}e.is=n})(Fa||(Fa={}));var Pa;(function(e){function t(i,r,a){return{range:i,target:r,data:a}}e.create=t;function n(i){var r=i;return C.defined(r)&&Y.is(r.range)&&(C.undefined(r.target)||C.string(r.target))}e.is=n})(Pa||(Pa={}));var cn;(function(e){function t(i,r){return{range:i,parent:r}}e.create=t;function n(i){var r=i;return r!==void 0&&Y.is(r.range)&&(r.parent===void 0||e.is(r.parent))}e.is=n})(cn||(cn={}));var Ba;(function(e){function t(a,s,o,l){return new ql(a,s,o,l)}e.create=t;function n(a){var s=a;return!!(C.defined(s)&&C.string(s.uri)&&(C.undefined(s.languageId)||C.string(s.languageId))&&C.uinteger(s.lineCount)&&C.func(s.getText)&&C.func(s.positionAt)&&C.func(s.offsetAt))}e.is=n;function i(a,s){for(var o=a.getText(),l=r(s,function(b,p){var w=b.range.start.line-p.range.start.line;return w===0?b.range.start.character-p.range.start.character:w}),u=o.length,c=l.length-1;c>=0;c--){var d=l[c],m=a.offsetAt(d.range.start),f=a.offsetAt(d.range.end);if(f<=u)o=o.substring(0,m)+d.newText+o.substring(f,o.length);else throw new Error("Overlapping edit");u=m}return o}e.applyEdits=i;function r(a,s){if(a.length<=1)return a;var o=a.length/2|0,l=a.slice(0,o),u=a.slice(o);r(l,s),r(u,s);for(var c=0,d=0,m=0;c<l.length&&d<u.length;){var f=s(l[c],u[d]);f<=0?a[m++]=l[c++]:a[m++]=u[d++]}for(;c<l.length;)a[m++]=l[c++];for(;d<u.length;)a[m++]=u[d++];return a}})(Ba||(Ba={}));var ql=function(){function e(t,n,i,r){this._uri=t,this._languageId=n,this._version=i,this._content=r,this._lineOffsets=void 0}return Object.defineProperty(e.prototype,"uri",{get:function(){return this._uri},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"version",{get:function(){return this._version},enumerable:!1,configurable:!0}),e.prototype.getText=function(t){if(t){var n=this.offsetAt(t.start),i=this.offsetAt(t.end);return this._content.substring(n,i)}return this._content},e.prototype.update=function(t,n){this._content=t.text,this._version=n,this._lineOffsets=void 0},e.prototype.getLineOffsets=function(){if(this._lineOffsets===void 0){for(var t=[],n=this._content,i=!0,r=0;r<n.length;r++){i&&(t.push(r),i=!1);var a=n.charAt(r);i=a==="\r"||a===`
`,a==="\r"&&r+1<n.length&&n.charAt(r+1)===`
`&&r++}i&&n.length>0&&t.push(n.length),this._lineOffsets=t}return this._lineOffsets},e.prototype.positionAt=function(t){t=Math.max(Math.min(t,this._content.length),0);var n=this.getLineOffsets(),i=0,r=n.length;if(r===0)return ce.create(0,t);for(;i<r;){var a=Math.floor((i+r)/2);n[a]>t?r=a:i=a+1}var s=i-1;return ce.create(s,t-n[s])},e.prototype.offsetAt=function(t){var n=this.getLineOffsets();if(t.line>=n.length)return this._content.length;if(t.line<0)return 0;var i=n[t.line],r=t.line+1<n.length?n[t.line+1]:this._content.length;return Math.max(Math.min(i+t.character,r),i)},Object.defineProperty(e.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!1,configurable:!0}),e}(),C;(function(e){var t=Object.prototype.toString;function n(f){return typeof f<"u"}e.defined=n;function i(f){return typeof f>"u"}e.undefined=i;function r(f){return f===!0||f===!1}e.boolean=r;function a(f){return t.call(f)==="[object String]"}e.string=a;function s(f){return t.call(f)==="[object Number]"}e.number=s;function o(f,b,p){return t.call(f)==="[object Number]"&&b<=f&&f<=p}e.numberRange=o;function l(f){return t.call(f)==="[object Number]"&&-2147483648<=f&&f<=2147483647}e.integer=l;function u(f){return t.call(f)==="[object Number]"&&0<=f&&f<=2147483647}e.uinteger=u;function c(f){return t.call(f)==="[object Function]"}e.func=c;function d(f){return f!==null&&typeof f=="object"}e.objectLiteral=d;function m(f,b){return Array.isArray(f)&&f.every(b)}e.typedArray=m})(C||(C={}));var qa=class di{constructor(t,n,i,r){this._uri=t,this._languageId=n,this._version=i,this._content=r,this._lineOffsets=void 0}get uri(){return this._uri}get languageId(){return this._languageId}get version(){return this._version}getText(t){if(t){const n=this.offsetAt(t.start),i=this.offsetAt(t.end);return this._content.substring(n,i)}return this._content}update(t,n){for(let i of t)if(di.isIncremental(i)){const r=Va(i.range),a=this.offsetAt(r.start),s=this.offsetAt(r.end);this._content=this._content.substring(0,a)+i.text+this._content.substring(s,this._content.length);const o=Math.max(r.start.line,0),l=Math.max(r.end.line,0);let u=this._lineOffsets;const c=Oa(i.text,!1,a);if(l-o===c.length)for(let m=0,f=c.length;m<f;m++)u[m+o+1]=c[m];else c.length<1e4?u.splice(o+1,l-o,...c):this._lineOffsets=u=u.slice(0,o+1).concat(c,u.slice(l+1));const d=i.text.length-(s-a);if(d!==0)for(let m=o+1+c.length,f=u.length;m<f;m++)u[m]=u[m]+d}else if(di.isFull(i))this._content=i.text,this._lineOffsets=void 0;else throw new Error("Unknown change event received");this._version=n}getLineOffsets(){return this._lineOffsets===void 0&&(this._lineOffsets=Oa(this._content,!0)),this._lineOffsets}positionAt(t){t=Math.max(Math.min(t,this._content.length),0);let n=this.getLineOffsets(),i=0,r=n.length;if(r===0)return{line:0,character:t};for(;i<r;){let s=Math.floor((i+r)/2);n[s]>t?r=s:i=s+1}let a=i-1;return{line:a,character:t-n[a]}}offsetAt(t){let n=this.getLineOffsets();if(t.line>=n.length)return this._content.length;if(t.line<0)return 0;let i=n[t.line],r=t.line+1<n.length?n[t.line+1]:this._content.length;return Math.max(Math.min(i+t.character,r),i)}get lineCount(){return this.getLineOffsets().length}static isIncremental(t){let n=t;return n!=null&&typeof n.text=="string"&&n.range!==void 0&&(n.rangeLength===void 0||typeof n.rangeLength=="number")}static isFull(t){let n=t;return n!=null&&typeof n.text=="string"&&n.range===void 0&&n.rangeLength===void 0}},ai;(function(e){function t(r,a,s,o){return new qa(r,a,s,o)}e.create=t;function n(r,a,s){if(r instanceof qa)return r.update(a,s),r;throw new Error("TextDocument.update: document must be created by TextDocument.create")}e.update=n;function i(r,a){let s=r.getText(),o=si(a.map(Ol),(c,d)=>{let m=c.range.start.line-d.range.start.line;return m===0?c.range.start.character-d.range.start.character:m}),l=0;const u=[];for(const c of o){let d=r.offsetAt(c.range.start);if(d<l)throw new Error("Overlapping edit");d>l&&u.push(s.substring(l,d)),c.newText.length&&u.push(c.newText),l=r.offsetAt(c.range.end)}return u.push(s.substr(l)),u.join("")}e.applyEdits=i})(ai||(ai={}));function si(e,t){if(e.length<=1)return e;const n=e.length/2|0,i=e.slice(0,n),r=e.slice(n);si(i,t),si(r,t);let a=0,s=0,o=0;for(;a<i.length&&s<r.length;)t(i[a],r[s])<=0?e[o++]=i[a++]:e[o++]=r[s++];for(;a<i.length;)e[o++]=i[a++];for(;s<r.length;)e[o++]=r[s++];return e}function Oa(e,t,n=0){const i=t?[n]:[];for(let r=0;r<e.length;r++){let a=e.charCodeAt(r);(a===13||a===10)&&(a===13&&r+1<e.length&&e.charCodeAt(r+1)===10&&r++,i.push(n+r+1))}return i}function Va(e){const t=e.start,n=e.end;return t.line>n.line||t.line===n.line&&t.character>n.character?{start:n,end:t}:e}function Ol(e){const t=Va(e.range);return t!==e.range?{newText:e.newText,range:t}:e}var U;(function(e){e[e.StartCommentTag=0]="StartCommentTag",e[e.Comment=1]="Comment",e[e.EndCommentTag=2]="EndCommentTag",e[e.StartTagOpen=3]="StartTagOpen",e[e.StartTagClose=4]="StartTagClose",e[e.StartTagSelfClose=5]="StartTagSelfClose",e[e.StartTag=6]="StartTag",e[e.EndTagOpen=7]="EndTagOpen",e[e.EndTagClose=8]="EndTagClose",e[e.EndTag=9]="EndTag",e[e.DelimiterAssign=10]="DelimiterAssign",e[e.AttributeName=11]="AttributeName",e[e.AttributeValue=12]="AttributeValue",e[e.StartDoctypeTag=13]="StartDoctypeTag",e[e.Doctype=14]="Doctype",e[e.EndDoctypeTag=15]="EndDoctypeTag",e[e.Content=16]="Content",e[e.Whitespace=17]="Whitespace",e[e.Unknown=18]="Unknown",e[e.Script=19]="Script",e[e.Styles=20]="Styles",e[e.EOS=21]="EOS"})(U||(U={}));var V;(function(e){e[e.WithinContent=0]="WithinContent",e[e.AfterOpeningStartTag=1]="AfterOpeningStartTag",e[e.AfterOpeningEndTag=2]="AfterOpeningEndTag",e[e.WithinDoctype=3]="WithinDoctype",e[e.WithinTag=4]="WithinTag",e[e.WithinEndTag=5]="WithinEndTag",e[e.WithinComment=6]="WithinComment",e[e.WithinScriptContent=7]="WithinScriptContent",e[e.WithinStyleContent=8]="WithinStyleContent",e[e.AfterAttributeName=9]="AfterAttributeName",e[e.BeforeAttributeValue=10]="BeforeAttributeValue"})(V||(V={}));var ja;(function(e){e.LATEST={textDocument:{completion:{completionItem:{documentationFormat:[Ee.Markdown,Ee.PlainText]}},hover:{contentFormat:[Ee.Markdown,Ee.PlainText]}}}})(ja||(ja={}));var oi;(function(e){e[e.Unknown=0]="Unknown",e[e.File=1]="File",e[e.Directory=2]="Directory",e[e.SymbolicLink=64]="SymbolicLink"})(oi||(oi={}));var Je=Kn(),Vl=function(){function e(t,n){this.source=t,this.len=t.length,this.position=n}return e.prototype.eos=function(){return this.len<=this.position},e.prototype.getSource=function(){return this.source},e.prototype.pos=function(){return this.position},e.prototype.goBackTo=function(t){this.position=t},e.prototype.goBack=function(t){this.position-=t},e.prototype.advance=function(t){this.position+=t},e.prototype.goToEnd=function(){this.position=this.source.length},e.prototype.nextChar=function(){return this.source.charCodeAt(this.position++)||0},e.prototype.peekChar=function(t){return t===void 0&&(t=0),this.source.charCodeAt(this.position+t)||0},e.prototype.advanceIfChar=function(t){return t===this.source.charCodeAt(this.position)?(this.position++,!0):!1},e.prototype.advanceIfChars=function(t){var n;if(this.position+t.length>this.source.length)return!1;for(n=0;n<t.length;n++)if(this.source.charCodeAt(this.position+n)!==t[n])return!1;return this.advance(n),!0},e.prototype.advanceIfRegExp=function(t){var n=this.source.substr(this.position),i=n.match(t);return i?(this.position=this.position+i.index+i[0].length,i[0]):""},e.prototype.advanceUntilRegExp=function(t){var n=this.source.substr(this.position),i=n.match(t);return i?(this.position=this.position+i.index,i[0]):(this.goToEnd(),"")},e.prototype.advanceUntilChar=function(t){for(;this.position<this.source.length;){if(this.source.charCodeAt(this.position)===t)return!0;this.advance(1)}return!1},e.prototype.advanceUntilChars=function(t){for(;this.position+t.length<=this.source.length;){for(var n=0;n<t.length&&this.source.charCodeAt(this.position+n)===t[n];n++);if(n===t.length)return!0;this.advance(1)}return this.goToEnd(),!1},e.prototype.skipWhitespace=function(){var t=this.advanceWhileChar(function(n){return n===Yl||n===Zl||n===Xl||n===Ql||n===Jl});return t>0},e.prototype.advanceWhileChar=function(t){for(var n=this.position;this.position<this.len&&t(this.source.charCodeAt(this.position));)this.position++;return this.position-n},e}(),Ga=33,wt=45,hn=60,ze=62,li=47,jl=61,Gl=34,$l=39,Xl=10,Jl=13,Ql=12,Yl=32,Zl=9,Kl={"text/x-handlebars-template":!0,"text/html":!0};function we(e,t,n,i){t===void 0&&(t=0),n===void 0&&(n=V.WithinContent),i===void 0&&(i=!1);var r=new Vl(e,t),a=n,s=0,o=U.Unknown,l,u,c,d,m;function f(){return r.advanceIfRegExp(/^[_:\w][_:\w-.\d]*/).toLowerCase()}function b(){return r.advanceIfRegExp(/^[^\s"'></=\x00-\x0F\x7F\x80-\x9F]*/).toLowerCase()}function p(_,y,E){return o=y,s=_,l=E,y}function w(){var _=r.pos(),y=a,E=x();return E!==U.EOS&&_===r.pos()&&!(i&&(E===U.StartTagClose||E===U.EndTagClose))?(console.log("Scanner.scan has not advanced at offset "+_+", state before: "+y+" after: "+a),r.advance(1),p(_,U.Unknown)):E}function x(){var _=r.pos();if(r.eos())return p(_,U.EOS);var y;switch(a){case V.WithinComment:return r.advanceIfChars([wt,wt,ze])?(a=V.WithinContent,p(_,U.EndCommentTag)):(r.advanceUntilChars([wt,wt,ze]),p(_,U.Comment));case V.WithinDoctype:return r.advanceIfChar(ze)?(a=V.WithinContent,p(_,U.EndDoctypeTag)):(r.advanceUntilChar(ze),p(_,U.Doctype));case V.WithinContent:if(r.advanceIfChar(hn)){if(!r.eos()&&r.peekChar()===Ga){if(r.advanceIfChars([Ga,wt,wt]))return a=V.WithinComment,p(_,U.StartCommentTag);if(r.advanceIfRegExp(/^!doctype/i))return a=V.WithinDoctype,p(_,U.StartDoctypeTag)}return r.advanceIfChar(li)?(a=V.AfterOpeningEndTag,p(_,U.EndTagOpen)):(a=V.AfterOpeningStartTag,p(_,U.StartTagOpen))}return r.advanceUntilChar(hn),p(_,U.Content);case V.AfterOpeningEndTag:var E=f();return E.length>0?(a=V.WithinEndTag,p(_,U.EndTag)):r.skipWhitespace()?p(_,U.Whitespace,Je("error.unexpectedWhitespace","Tag name must directly follow the open bracket.")):(a=V.WithinEndTag,r.advanceUntilChar(ze),_<r.pos()?p(_,U.Unknown,Je("error.endTagNameExpected","End tag name expected.")):x());case V.WithinEndTag:if(r.skipWhitespace())return p(_,U.Whitespace);if(r.advanceIfChar(ze))return a=V.WithinContent,p(_,U.EndTagClose);if(i&&r.peekChar()===hn)return a=V.WithinContent,p(_,U.EndTagClose,Je("error.closingBracketMissing","Closing bracket missing."));y=Je("error.closingBracketExpected","Closing bracket expected.");break;case V.AfterOpeningStartTag:return c=f(),m=void 0,d=void 0,c.length>0?(u=!1,a=V.WithinTag,p(_,U.StartTag)):r.skipWhitespace()?p(_,U.Whitespace,Je("error.unexpectedWhitespace","Tag name must directly follow the open bracket.")):(a=V.WithinTag,r.advanceUntilChar(ze),_<r.pos()?p(_,U.Unknown,Je("error.startTagNameExpected","Start tag name expected.")):x());case V.WithinTag:return r.skipWhitespace()?(u=!0,p(_,U.Whitespace)):u&&(d=b(),d.length>0)?(a=V.AfterAttributeName,u=!1,p(_,U.AttributeName)):r.advanceIfChars([li,ze])?(a=V.WithinContent,p(_,U.StartTagSelfClose)):r.advanceIfChar(ze)?(c==="script"?m&&Kl[m]?a=V.WithinContent:a=V.WithinScriptContent:c==="style"?a=V.WithinStyleContent:a=V.WithinContent,p(_,U.StartTagClose)):i&&r.peekChar()===hn?(a=V.WithinContent,p(_,U.StartTagClose,Je("error.closingBracketMissing","Closing bracket missing."))):(r.advance(1),p(_,U.Unknown,Je("error.unexpectedCharacterInTag","Unexpected character in tag.")));case V.AfterAttributeName:return r.skipWhitespace()?(u=!0,p(_,U.Whitespace)):r.advanceIfChar(jl)?(a=V.BeforeAttributeValue,p(_,U.DelimiterAssign)):(a=V.WithinTag,x());case V.BeforeAttributeValue:if(r.skipWhitespace())return p(_,U.Whitespace);var R=r.advanceIfRegExp(/^[^\s"'`=<>]+/);if(R.length>0)return r.peekChar()===ze&&r.peekChar(-1)===li&&(r.goBack(1),R=R.substr(0,R.length-1)),d==="type"&&(m=R),a=V.WithinTag,u=!1,p(_,U.AttributeValue);var P=r.peekChar();return P===$l||P===Gl?(r.advance(1),r.advanceUntilChar(P)&&r.advance(1),d==="type"&&(m=r.getSource().substring(_+1,r.pos()-1)),a=V.WithinTag,u=!1,p(_,U.AttributeValue)):(a=V.WithinTag,u=!1,x());case V.WithinScriptContent:for(var v=1;!r.eos();){var g=r.advanceIfRegExp(/<!--|-->|<\/?script\s*\/?>?/i);if(g.length===0)return r.goToEnd(),p(_,U.Script);if(g==="<!--")v===1&&(v=2);else if(g==="-->")v=1;else if(g[1]!=="/")v===2&&(v=3);else if(v===3)v=2;else{r.goBack(g.length);break}}return a=V.WithinContent,_<r.pos()?p(_,U.Script):x();case V.WithinStyleContent:return r.advanceUntilRegExp(/<\/style/i),a=V.WithinContent,_<r.pos()?p(_,U.Styles):x()}return r.advance(1),a=V.WithinContent,p(_,U.Unknown,y)}return{scan:w,getTokenType:function(){return o},getTokenOffset:function(){return s},getTokenLength:function(){return r.pos()-s},getTokenEnd:function(){return r.pos()},getTokenText:function(){return r.getSource().substring(s,r.pos())},getScannerState:function(){return a},getTokenError:function(){return l}}}function $a(e,t){var n=0,i=e.length;if(i===0)return 0;for(;n<i;){var r=Math.floor((n+i)/2);t(e[r])?i=r:n=r+1}return n}function eu(e,t,n){for(var i=0,r=e.length-1;i<=r;){var a=(i+r)/2|0,s=n(e[a],t);if(s<0)i=a+1;else if(s>0)r=a-1;else return a}return-(i+1)}var tu=["area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr"];function dn(e){return!!e&&eu(tu,e.toLowerCase(),function(t,n){return t.localeCompare(n)})>=0}var Xa=function(){function e(t,n,i,r){this.start=t,this.end=n,this.children=i,this.parent=r,this.closed=!1}return Object.defineProperty(e.prototype,"attributeNames",{get:function(){return this.attributes?Object.keys(this.attributes):[]},enumerable:!1,configurable:!0}),e.prototype.isSameTag=function(t){return this.tag===void 0?t===void 0:t!==void 0&&this.tag.length===t.length&&this.tag.toLowerCase()===t},Object.defineProperty(e.prototype,"firstChild",{get:function(){return this.children[0]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lastChild",{get:function(){return this.children.length?this.children[this.children.length-1]:void 0},enumerable:!1,configurable:!0}),e.prototype.findNodeBefore=function(t){var n=$a(this.children,function(a){return t<=a.start})-1;if(n>=0){var i=this.children[n];if(t>i.start){if(t<i.end)return i.findNodeBefore(t);var r=i.lastChild;return r&&r.end===i.end?i.findNodeBefore(t):i}}return this},e.prototype.findNodeAt=function(t){var n=$a(this.children,function(r){return t<=r.start})-1;if(n>=0){var i=this.children[n];if(t>i.start&&t<=i.end)return i.findNodeAt(t)}return this},e}();function Ja(e){for(var t=we(e,void 0,void 0,!0),n=new Xa(0,e.length,[],void 0),i=n,r=-1,a=void 0,s=null,o=t.scan();o!==U.EOS;){switch(o){case U.StartTagOpen:var l=new Xa(t.getTokenOffset(),e.length,[],i);i.children.push(l),i=l;break;case U.StartTag:i.tag=t.getTokenText();break;case U.StartTagClose:i.parent&&(i.end=t.getTokenEnd(),t.getTokenLength()?(i.startTagEnd=t.getTokenEnd(),i.tag&&dn(i.tag)&&(i.closed=!0,i=i.parent)):i=i.parent);break;case U.StartTagSelfClose:i.parent&&(i.closed=!0,i.end=t.getTokenEnd(),i.startTagEnd=t.getTokenEnd(),i=i.parent);break;case U.EndTagOpen:r=t.getTokenOffset(),a=void 0;break;case U.EndTag:a=t.getTokenText().toLowerCase();break;case U.EndTagClose:for(var u=i;!u.isSameTag(a)&&u.parent;)u=u.parent;if(u.parent){for(;i!==u;)i.end=r,i.closed=!1,i=i.parent;i.closed=!0,i.endTagStart=r,i.end=t.getTokenEnd(),i=i.parent}break;case U.AttributeName:{s=t.getTokenText();var c=i.attributes;c||(i.attributes=c={}),c[s]=null;break}case U.AttributeValue:{var d=t.getTokenText(),c=i.attributes;c&&s&&(c[s]=d,s=null);break}}o=t.scan()}for(;i.parent;)i.end=e.length,i.closed=!1,i=i.parent;return{roots:n.children,findNodeBefore:n.findNodeBefore.bind(n),findNodeAt:n.findNodeAt.bind(n)}}var zt={"Aacute;":"Á",Aacute:"Á","aacute;":"á",aacute:"á","Abreve;":"Ă","abreve;":"ă","ac;":"∾","acd;":"∿","acE;":"∾̳","Acirc;":"Â",Acirc:"Â","acirc;":"â",acirc:"â","acute;":"´",acute:"´","Acy;":"А","acy;":"а","AElig;":"Æ",AElig:"Æ","aelig;":"æ",aelig:"æ","af;":"⁡","Afr;":"𝔄","afr;":"𝔞","Agrave;":"À",Agrave:"À","agrave;":"à",agrave:"à","alefsym;":"ℵ","aleph;":"ℵ","Alpha;":"Α","alpha;":"α","Amacr;":"Ā","amacr;":"ā","amalg;":"⨿","AMP;":"&",AMP:"&","amp;":"&",amp:"&","And;":"⩓","and;":"∧","andand;":"⩕","andd;":"⩜","andslope;":"⩘","andv;":"⩚","ang;":"∠","ange;":"⦤","angle;":"∠","angmsd;":"∡","angmsdaa;":"⦨","angmsdab;":"⦩","angmsdac;":"⦪","angmsdad;":"⦫","angmsdae;":"⦬","angmsdaf;":"⦭","angmsdag;":"⦮","angmsdah;":"⦯","angrt;":"∟","angrtvb;":"⊾","angrtvbd;":"⦝","angsph;":"∢","angst;":"Å","angzarr;":"⍼","Aogon;":"Ą","aogon;":"ą","Aopf;":"𝔸","aopf;":"𝕒","ap;":"≈","apacir;":"⩯","apE;":"⩰","ape;":"≊","apid;":"≋","apos;":"'","ApplyFunction;":"⁡","approx;":"≈","approxeq;":"≊","Aring;":"Å",Aring:"Å","aring;":"å",aring:"å","Ascr;":"𝒜","ascr;":"𝒶","Assign;":"≔","ast;":"*","asymp;":"≈","asympeq;":"≍","Atilde;":"Ã",Atilde:"Ã","atilde;":"ã",atilde:"ã","Auml;":"Ä",Auml:"Ä","auml;":"ä",auml:"ä","awconint;":"∳","awint;":"⨑","backcong;":"≌","backepsilon;":"϶","backprime;":"‵","backsim;":"∽","backsimeq;":"⋍","Backslash;":"∖","Barv;":"⫧","barvee;":"⊽","Barwed;":"⌆","barwed;":"⌅","barwedge;":"⌅","bbrk;":"⎵","bbrktbrk;":"⎶","bcong;":"≌","Bcy;":"Б","bcy;":"б","bdquo;":"„","becaus;":"∵","Because;":"∵","because;":"∵","bemptyv;":"⦰","bepsi;":"϶","bernou;":"ℬ","Bernoullis;":"ℬ","Beta;":"Β","beta;":"β","beth;":"ℶ","between;":"≬","Bfr;":"𝔅","bfr;":"𝔟","bigcap;":"⋂","bigcirc;":"◯","bigcup;":"⋃","bigodot;":"⨀","bigoplus;":"⨁","bigotimes;":"⨂","bigsqcup;":"⨆","bigstar;":"★","bigtriangledown;":"▽","bigtriangleup;":"△","biguplus;":"⨄","bigvee;":"⋁","bigwedge;":"⋀","bkarow;":"⤍","blacklozenge;":"⧫","blacksquare;":"▪","blacktriangle;":"▴","blacktriangledown;":"▾","blacktriangleleft;":"◂","blacktriangleright;":"▸","blank;":"␣","blk12;":"▒","blk14;":"░","blk34;":"▓","block;":"█","bne;":"=⃥","bnequiv;":"≡⃥","bNot;":"⫭","bnot;":"⌐","Bopf;":"𝔹","bopf;":"𝕓","bot;":"⊥","bottom;":"⊥","bowtie;":"⋈","boxbox;":"⧉","boxDL;":"╗","boxDl;":"╖","boxdL;":"╕","boxdl;":"┐","boxDR;":"╔","boxDr;":"╓","boxdR;":"╒","boxdr;":"┌","boxH;":"═","boxh;":"─","boxHD;":"╦","boxHd;":"╤","boxhD;":"╥","boxhd;":"┬","boxHU;":"╩","boxHu;":"╧","boxhU;":"╨","boxhu;":"┴","boxminus;":"⊟","boxplus;":"⊞","boxtimes;":"⊠","boxUL;":"╝","boxUl;":"╜","boxuL;":"╛","boxul;":"┘","boxUR;":"╚","boxUr;":"╙","boxuR;":"╘","boxur;":"└","boxV;":"║","boxv;":"│","boxVH;":"╬","boxVh;":"╫","boxvH;":"╪","boxvh;":"┼","boxVL;":"╣","boxVl;":"╢","boxvL;":"╡","boxvl;":"┤","boxVR;":"╠","boxVr;":"╟","boxvR;":"╞","boxvr;":"├","bprime;":"‵","Breve;":"˘","breve;":"˘","brvbar;":"¦",brvbar:"¦","Bscr;":"ℬ","bscr;":"𝒷","bsemi;":"⁏","bsim;":"∽","bsime;":"⋍","bsol;":"\\","bsolb;":"⧅","bsolhsub;":"⟈","bull;":"•","bullet;":"•","bump;":"≎","bumpE;":"⪮","bumpe;":"≏","Bumpeq;":"≎","bumpeq;":"≏","Cacute;":"Ć","cacute;":"ć","Cap;":"⋒","cap;":"∩","capand;":"⩄","capbrcup;":"⩉","capcap;":"⩋","capcup;":"⩇","capdot;":"⩀","CapitalDifferentialD;":"ⅅ","caps;":"∩︀","caret;":"⁁","caron;":"ˇ","Cayleys;":"ℭ","ccaps;":"⩍","Ccaron;":"Č","ccaron;":"č","Ccedil;":"Ç",Ccedil:"Ç","ccedil;":"ç",ccedil:"ç","Ccirc;":"Ĉ","ccirc;":"ĉ","Cconint;":"∰","ccups;":"⩌","ccupssm;":"⩐","Cdot;":"Ċ","cdot;":"ċ","cedil;":"¸",cedil:"¸","Cedilla;":"¸","cemptyv;":"⦲","cent;":"¢",cent:"¢","CenterDot;":"·","centerdot;":"·","Cfr;":"ℭ","cfr;":"𝔠","CHcy;":"Ч","chcy;":"ч","check;":"✓","checkmark;":"✓","Chi;":"Χ","chi;":"χ","cir;":"○","circ;":"ˆ","circeq;":"≗","circlearrowleft;":"↺","circlearrowright;":"↻","circledast;":"⊛","circledcirc;":"⊚","circleddash;":"⊝","CircleDot;":"⊙","circledR;":"®","circledS;":"Ⓢ","CircleMinus;":"⊖","CirclePlus;":"⊕","CircleTimes;":"⊗","cirE;":"⧃","cire;":"≗","cirfnint;":"⨐","cirmid;":"⫯","cirscir;":"⧂","ClockwiseContourIntegral;":"∲","CloseCurlyDoubleQuote;":"”","CloseCurlyQuote;":"’","clubs;":"♣","clubsuit;":"♣","Colon;":"∷","colon;":":","Colone;":"⩴","colone;":"≔","coloneq;":"≔","comma;":",","commat;":"@","comp;":"∁","compfn;":"∘","complement;":"∁","complexes;":"ℂ","cong;":"≅","congdot;":"⩭","Congruent;":"≡","Conint;":"∯","conint;":"∮","ContourIntegral;":"∮","Copf;":"ℂ","copf;":"𝕔","coprod;":"∐","Coproduct;":"∐","COPY;":"©",COPY:"©","copy;":"©",copy:"©","copysr;":"℗","CounterClockwiseContourIntegral;":"∳","crarr;":"↵","Cross;":"⨯","cross;":"✗","Cscr;":"𝒞","cscr;":"𝒸","csub;":"⫏","csube;":"⫑","csup;":"⫐","csupe;":"⫒","ctdot;":"⋯","cudarrl;":"⤸","cudarrr;":"⤵","cuepr;":"⋞","cuesc;":"⋟","cularr;":"↶","cularrp;":"⤽","Cup;":"⋓","cup;":"∪","cupbrcap;":"⩈","CupCap;":"≍","cupcap;":"⩆","cupcup;":"⩊","cupdot;":"⊍","cupor;":"⩅","cups;":"∪︀","curarr;":"↷","curarrm;":"⤼","curlyeqprec;":"⋞","curlyeqsucc;":"⋟","curlyvee;":"⋎","curlywedge;":"⋏","curren;":"¤",curren:"¤","curvearrowleft;":"↶","curvearrowright;":"↷","cuvee;":"⋎","cuwed;":"⋏","cwconint;":"∲","cwint;":"∱","cylcty;":"⌭","Dagger;":"‡","dagger;":"†","daleth;":"ℸ","Darr;":"↡","dArr;":"⇓","darr;":"↓","dash;":"‐","Dashv;":"⫤","dashv;":"⊣","dbkarow;":"⤏","dblac;":"˝","Dcaron;":"Ď","dcaron;":"ď","Dcy;":"Д","dcy;":"д","DD;":"ⅅ","dd;":"ⅆ","ddagger;":"‡","ddarr;":"⇊","DDotrahd;":"⤑","ddotseq;":"⩷","deg;":"°",deg:"°","Del;":"∇","Delta;":"Δ","delta;":"δ","demptyv;":"⦱","dfisht;":"⥿","Dfr;":"𝔇","dfr;":"𝔡","dHar;":"⥥","dharl;":"⇃","dharr;":"⇂","DiacriticalAcute;":"´","DiacriticalDot;":"˙","DiacriticalDoubleAcute;":"˝","DiacriticalGrave;":"`","DiacriticalTilde;":"˜","diam;":"⋄","Diamond;":"⋄","diamond;":"⋄","diamondsuit;":"♦","diams;":"♦","die;":"¨","DifferentialD;":"ⅆ","digamma;":"ϝ","disin;":"⋲","div;":"÷","divide;":"÷",divide:"÷","divideontimes;":"⋇","divonx;":"⋇","DJcy;":"Ђ","djcy;":"ђ","dlcorn;":"⌞","dlcrop;":"⌍","dollar;":"$","Dopf;":"𝔻","dopf;":"𝕕","Dot;":"¨","dot;":"˙","DotDot;":"⃜","doteq;":"≐","doteqdot;":"≑","DotEqual;":"≐","dotminus;":"∸","dotplus;":"∔","dotsquare;":"⊡","doublebarwedge;":"⌆","DoubleContourIntegral;":"∯","DoubleDot;":"¨","DoubleDownArrow;":"⇓","DoubleLeftArrow;":"⇐","DoubleLeftRightArrow;":"⇔","DoubleLeftTee;":"⫤","DoubleLongLeftArrow;":"⟸","DoubleLongLeftRightArrow;":"⟺","DoubleLongRightArrow;":"⟹","DoubleRightArrow;":"⇒","DoubleRightTee;":"⊨","DoubleUpArrow;":"⇑","DoubleUpDownArrow;":"⇕","DoubleVerticalBar;":"∥","DownArrow;":"↓","Downarrow;":"⇓","downarrow;":"↓","DownArrowBar;":"⤓","DownArrowUpArrow;":"⇵","DownBreve;":"̑","downdownarrows;":"⇊","downharpoonleft;":"⇃","downharpoonright;":"⇂","DownLeftRightVector;":"⥐","DownLeftTeeVector;":"⥞","DownLeftVector;":"↽","DownLeftVectorBar;":"⥖","DownRightTeeVector;":"⥟","DownRightVector;":"⇁","DownRightVectorBar;":"⥗","DownTee;":"⊤","DownTeeArrow;":"↧","drbkarow;":"⤐","drcorn;":"⌟","drcrop;":"⌌","Dscr;":"𝒟","dscr;":"𝒹","DScy;":"Ѕ","dscy;":"ѕ","dsol;":"⧶","Dstrok;":"Đ","dstrok;":"đ","dtdot;":"⋱","dtri;":"▿","dtrif;":"▾","duarr;":"⇵","duhar;":"⥯","dwangle;":"⦦","DZcy;":"Џ","dzcy;":"џ","dzigrarr;":"⟿","Eacute;":"É",Eacute:"É","eacute;":"é",eacute:"é","easter;":"⩮","Ecaron;":"Ě","ecaron;":"ě","ecir;":"≖","Ecirc;":"Ê",Ecirc:"Ê","ecirc;":"ê",ecirc:"ê","ecolon;":"≕","Ecy;":"Э","ecy;":"э","eDDot;":"⩷","Edot;":"Ė","eDot;":"≑","edot;":"ė","ee;":"ⅇ","efDot;":"≒","Efr;":"𝔈","efr;":"𝔢","eg;":"⪚","Egrave;":"È",Egrave:"È","egrave;":"è",egrave:"è","egs;":"⪖","egsdot;":"⪘","el;":"⪙","Element;":"∈","elinters;":"⏧","ell;":"ℓ","els;":"⪕","elsdot;":"⪗","Emacr;":"Ē","emacr;":"ē","empty;":"∅","emptyset;":"∅","EmptySmallSquare;":"◻","emptyv;":"∅","EmptyVerySmallSquare;":"▫","emsp;":" ","emsp13;":" ","emsp14;":" ","ENG;":"Ŋ","eng;":"ŋ","ensp;":" ","Eogon;":"Ę","eogon;":"ę","Eopf;":"𝔼","eopf;":"𝕖","epar;":"⋕","eparsl;":"⧣","eplus;":"⩱","epsi;":"ε","Epsilon;":"Ε","epsilon;":"ε","epsiv;":"ϵ","eqcirc;":"≖","eqcolon;":"≕","eqsim;":"≂","eqslantgtr;":"⪖","eqslantless;":"⪕","Equal;":"⩵","equals;":"=","EqualTilde;":"≂","equest;":"≟","Equilibrium;":"⇌","equiv;":"≡","equivDD;":"⩸","eqvparsl;":"⧥","erarr;":"⥱","erDot;":"≓","Escr;":"ℰ","escr;":"ℯ","esdot;":"≐","Esim;":"⩳","esim;":"≂","Eta;":"Η","eta;":"η","ETH;":"Ð",ETH:"Ð","eth;":"ð",eth:"ð","Euml;":"Ë",Euml:"Ë","euml;":"ë",euml:"ë","euro;":"€","excl;":"!","exist;":"∃","Exists;":"∃","expectation;":"ℰ","ExponentialE;":"ⅇ","exponentiale;":"ⅇ","fallingdotseq;":"≒","Fcy;":"Ф","fcy;":"ф","female;":"♀","ffilig;":"ﬃ","fflig;":"ﬀ","ffllig;":"ﬄ","Ffr;":"𝔉","ffr;":"𝔣","filig;":"ﬁ","FilledSmallSquare;":"◼","FilledVerySmallSquare;":"▪","fjlig;":"fj","flat;":"♭","fllig;":"ﬂ","fltns;":"▱","fnof;":"ƒ","Fopf;":"𝔽","fopf;":"𝕗","ForAll;":"∀","forall;":"∀","fork;":"⋔","forkv;":"⫙","Fouriertrf;":"ℱ","fpartint;":"⨍","frac12;":"½",frac12:"½","frac13;":"⅓","frac14;":"¼",frac14:"¼","frac15;":"⅕","frac16;":"⅙","frac18;":"⅛","frac23;":"⅔","frac25;":"⅖","frac34;":"¾",frac34:"¾","frac35;":"⅗","frac38;":"⅜","frac45;":"⅘","frac56;":"⅚","frac58;":"⅝","frac78;":"⅞","frasl;":"⁄","frown;":"⌢","Fscr;":"ℱ","fscr;":"𝒻","gacute;":"ǵ","Gamma;":"Γ","gamma;":"γ","Gammad;":"Ϝ","gammad;":"ϝ","gap;":"⪆","Gbreve;":"Ğ","gbreve;":"ğ","Gcedil;":"Ģ","Gcirc;":"Ĝ","gcirc;":"ĝ","Gcy;":"Г","gcy;":"г","Gdot;":"Ġ","gdot;":"ġ","gE;":"≧","ge;":"≥","gEl;":"⪌","gel;":"⋛","geq;":"≥","geqq;":"≧","geqslant;":"⩾","ges;":"⩾","gescc;":"⪩","gesdot;":"⪀","gesdoto;":"⪂","gesdotol;":"⪄","gesl;":"⋛︀","gesles;":"⪔","Gfr;":"𝔊","gfr;":"𝔤","Gg;":"⋙","gg;":"≫","ggg;":"⋙","gimel;":"ℷ","GJcy;":"Ѓ","gjcy;":"ѓ","gl;":"≷","gla;":"⪥","glE;":"⪒","glj;":"⪤","gnap;":"⪊","gnapprox;":"⪊","gnE;":"≩","gne;":"⪈","gneq;":"⪈","gneqq;":"≩","gnsim;":"⋧","Gopf;":"𝔾","gopf;":"𝕘","grave;":"`","GreaterEqual;":"≥","GreaterEqualLess;":"⋛","GreaterFullEqual;":"≧","GreaterGreater;":"⪢","GreaterLess;":"≷","GreaterSlantEqual;":"⩾","GreaterTilde;":"≳","Gscr;":"𝒢","gscr;":"ℊ","gsim;":"≳","gsime;":"⪎","gsiml;":"⪐","GT;":">",GT:">","Gt;":"≫","gt;":">",gt:">","gtcc;":"⪧","gtcir;":"⩺","gtdot;":"⋗","gtlPar;":"⦕","gtquest;":"⩼","gtrapprox;":"⪆","gtrarr;":"⥸","gtrdot;":"⋗","gtreqless;":"⋛","gtreqqless;":"⪌","gtrless;":"≷","gtrsim;":"≳","gvertneqq;":"≩︀","gvnE;":"≩︀","Hacek;":"ˇ","hairsp;":" ","half;":"½","hamilt;":"ℋ","HARDcy;":"Ъ","hardcy;":"ъ","hArr;":"⇔","harr;":"↔","harrcir;":"⥈","harrw;":"↭","Hat;":"^","hbar;":"ℏ","Hcirc;":"Ĥ","hcirc;":"ĥ","hearts;":"♥","heartsuit;":"♥","hellip;":"…","hercon;":"⊹","Hfr;":"ℌ","hfr;":"𝔥","HilbertSpace;":"ℋ","hksearow;":"⤥","hkswarow;":"⤦","hoarr;":"⇿","homtht;":"∻","hookleftarrow;":"↩","hookrightarrow;":"↪","Hopf;":"ℍ","hopf;":"𝕙","horbar;":"―","HorizontalLine;":"─","Hscr;":"ℋ","hscr;":"𝒽","hslash;":"ℏ","Hstrok;":"Ħ","hstrok;":"ħ","HumpDownHump;":"≎","HumpEqual;":"≏","hybull;":"⁃","hyphen;":"‐","Iacute;":"Í",Iacute:"Í","iacute;":"í",iacute:"í","ic;":"⁣","Icirc;":"Î",Icirc:"Î","icirc;":"î",icirc:"î","Icy;":"И","icy;":"и","Idot;":"İ","IEcy;":"Е","iecy;":"е","iexcl;":"¡",iexcl:"¡","iff;":"⇔","Ifr;":"ℑ","ifr;":"𝔦","Igrave;":"Ì",Igrave:"Ì","igrave;":"ì",igrave:"ì","ii;":"ⅈ","iiiint;":"⨌","iiint;":"∭","iinfin;":"⧜","iiota;":"℩","IJlig;":"Ĳ","ijlig;":"ĳ","Im;":"ℑ","Imacr;":"Ī","imacr;":"ī","image;":"ℑ","ImaginaryI;":"ⅈ","imagline;":"ℐ","imagpart;":"ℑ","imath;":"ı","imof;":"⊷","imped;":"Ƶ","Implies;":"⇒","in;":"∈","incare;":"℅","infin;":"∞","infintie;":"⧝","inodot;":"ı","Int;":"∬","int;":"∫","intcal;":"⊺","integers;":"ℤ","Integral;":"∫","intercal;":"⊺","Intersection;":"⋂","intlarhk;":"⨗","intprod;":"⨼","InvisibleComma;":"⁣","InvisibleTimes;":"⁢","IOcy;":"Ё","iocy;":"ё","Iogon;":"Į","iogon;":"į","Iopf;":"𝕀","iopf;":"𝕚","Iota;":"Ι","iota;":"ι","iprod;":"⨼","iquest;":"¿",iquest:"¿","Iscr;":"ℐ","iscr;":"𝒾","isin;":"∈","isindot;":"⋵","isinE;":"⋹","isins;":"⋴","isinsv;":"⋳","isinv;":"∈","it;":"⁢","Itilde;":"Ĩ","itilde;":"ĩ","Iukcy;":"І","iukcy;":"і","Iuml;":"Ï",Iuml:"Ï","iuml;":"ï",iuml:"ï","Jcirc;":"Ĵ","jcirc;":"ĵ","Jcy;":"Й","jcy;":"й","Jfr;":"𝔍","jfr;":"𝔧","jmath;":"ȷ","Jopf;":"𝕁","jopf;":"𝕛","Jscr;":"𝒥","jscr;":"𝒿","Jsercy;":"Ј","jsercy;":"ј","Jukcy;":"Є","jukcy;":"є","Kappa;":"Κ","kappa;":"κ","kappav;":"ϰ","Kcedil;":"Ķ","kcedil;":"ķ","Kcy;":"К","kcy;":"к","Kfr;":"𝔎","kfr;":"𝔨","kgreen;":"ĸ","KHcy;":"Х","khcy;":"х","KJcy;":"Ќ","kjcy;":"ќ","Kopf;":"𝕂","kopf;":"𝕜","Kscr;":"𝒦","kscr;":"𝓀","lAarr;":"⇚","Lacute;":"Ĺ","lacute;":"ĺ","laemptyv;":"⦴","lagran;":"ℒ","Lambda;":"Λ","lambda;":"λ","Lang;":"⟪","lang;":"⟨","langd;":"⦑","langle;":"⟨","lap;":"⪅","Laplacetrf;":"ℒ","laquo;":"«",laquo:"«","Larr;":"↞","lArr;":"⇐","larr;":"←","larrb;":"⇤","larrbfs;":"⤟","larrfs;":"⤝","larrhk;":"↩","larrlp;":"↫","larrpl;":"⤹","larrsim;":"⥳","larrtl;":"↢","lat;":"⪫","lAtail;":"⤛","latail;":"⤙","late;":"⪭","lates;":"⪭︀","lBarr;":"⤎","lbarr;":"⤌","lbbrk;":"❲","lbrace;":"{","lbrack;":"[","lbrke;":"⦋","lbrksld;":"⦏","lbrkslu;":"⦍","Lcaron;":"Ľ","lcaron;":"ľ","Lcedil;":"Ļ","lcedil;":"ļ","lceil;":"⌈","lcub;":"{","Lcy;":"Л","lcy;":"л","ldca;":"⤶","ldquo;":"“","ldquor;":"„","ldrdhar;":"⥧","ldrushar;":"⥋","ldsh;":"↲","lE;":"≦","le;":"≤","LeftAngleBracket;":"⟨","LeftArrow;":"←","Leftarrow;":"⇐","leftarrow;":"←","LeftArrowBar;":"⇤","LeftArrowRightArrow;":"⇆","leftarrowtail;":"↢","LeftCeiling;":"⌈","LeftDoubleBracket;":"⟦","LeftDownTeeVector;":"⥡","LeftDownVector;":"⇃","LeftDownVectorBar;":"⥙","LeftFloor;":"⌊","leftharpoondown;":"↽","leftharpoonup;":"↼","leftleftarrows;":"⇇","LeftRightArrow;":"↔","Leftrightarrow;":"⇔","leftrightarrow;":"↔","leftrightarrows;":"⇆","leftrightharpoons;":"⇋","leftrightsquigarrow;":"↭","LeftRightVector;":"⥎","LeftTee;":"⊣","LeftTeeArrow;":"↤","LeftTeeVector;":"⥚","leftthreetimes;":"⋋","LeftTriangle;":"⊲","LeftTriangleBar;":"⧏","LeftTriangleEqual;":"⊴","LeftUpDownVector;":"⥑","LeftUpTeeVector;":"⥠","LeftUpVector;":"↿","LeftUpVectorBar;":"⥘","LeftVector;":"↼","LeftVectorBar;":"⥒","lEg;":"⪋","leg;":"⋚","leq;":"≤","leqq;":"≦","leqslant;":"⩽","les;":"⩽","lescc;":"⪨","lesdot;":"⩿","lesdoto;":"⪁","lesdotor;":"⪃","lesg;":"⋚︀","lesges;":"⪓","lessapprox;":"⪅","lessdot;":"⋖","lesseqgtr;":"⋚","lesseqqgtr;":"⪋","LessEqualGreater;":"⋚","LessFullEqual;":"≦","LessGreater;":"≶","lessgtr;":"≶","LessLess;":"⪡","lesssim;":"≲","LessSlantEqual;":"⩽","LessTilde;":"≲","lfisht;":"⥼","lfloor;":"⌊","Lfr;":"𝔏","lfr;":"𝔩","lg;":"≶","lgE;":"⪑","lHar;":"⥢","lhard;":"↽","lharu;":"↼","lharul;":"⥪","lhblk;":"▄","LJcy;":"Љ","ljcy;":"љ","Ll;":"⋘","ll;":"≪","llarr;":"⇇","llcorner;":"⌞","Lleftarrow;":"⇚","llhard;":"⥫","lltri;":"◺","Lmidot;":"Ŀ","lmidot;":"ŀ","lmoust;":"⎰","lmoustache;":"⎰","lnap;":"⪉","lnapprox;":"⪉","lnE;":"≨","lne;":"⪇","lneq;":"⪇","lneqq;":"≨","lnsim;":"⋦","loang;":"⟬","loarr;":"⇽","lobrk;":"⟦","LongLeftArrow;":"⟵","Longleftarrow;":"⟸","longleftarrow;":"⟵","LongLeftRightArrow;":"⟷","Longleftrightarrow;":"⟺","longleftrightarrow;":"⟷","longmapsto;":"⟼","LongRightArrow;":"⟶","Longrightarrow;":"⟹","longrightarrow;":"⟶","looparrowleft;":"↫","looparrowright;":"↬","lopar;":"⦅","Lopf;":"𝕃","lopf;":"𝕝","loplus;":"⨭","lotimes;":"⨴","lowast;":"∗","lowbar;":"_","LowerLeftArrow;":"↙","LowerRightArrow;":"↘","loz;":"◊","lozenge;":"◊","lozf;":"⧫","lpar;":"(","lparlt;":"⦓","lrarr;":"⇆","lrcorner;":"⌟","lrhar;":"⇋","lrhard;":"⥭","lrm;":"‎","lrtri;":"⊿","lsaquo;":"‹","Lscr;":"ℒ","lscr;":"𝓁","Lsh;":"↰","lsh;":"↰","lsim;":"≲","lsime;":"⪍","lsimg;":"⪏","lsqb;":"[","lsquo;":"‘","lsquor;":"‚","Lstrok;":"Ł","lstrok;":"ł","LT;":"<",LT:"<","Lt;":"≪","lt;":"<",lt:"<","ltcc;":"⪦","ltcir;":"⩹","ltdot;":"⋖","lthree;":"⋋","ltimes;":"⋉","ltlarr;":"⥶","ltquest;":"⩻","ltri;":"◃","ltrie;":"⊴","ltrif;":"◂","ltrPar;":"⦖","lurdshar;":"⥊","luruhar;":"⥦","lvertneqq;":"≨︀","lvnE;":"≨︀","macr;":"¯",macr:"¯","male;":"♂","malt;":"✠","maltese;":"✠","Map;":"⤅","map;":"↦","mapsto;":"↦","mapstodown;":"↧","mapstoleft;":"↤","mapstoup;":"↥","marker;":"▮","mcomma;":"⨩","Mcy;":"М","mcy;":"м","mdash;":"—","mDDot;":"∺","measuredangle;":"∡","MediumSpace;":" ","Mellintrf;":"ℳ","Mfr;":"𝔐","mfr;":"𝔪","mho;":"℧","micro;":"µ",micro:"µ","mid;":"∣","midast;":"*","midcir;":"⫰","middot;":"·",middot:"·","minus;":"−","minusb;":"⊟","minusd;":"∸","minusdu;":"⨪","MinusPlus;":"∓","mlcp;":"⫛","mldr;":"…","mnplus;":"∓","models;":"⊧","Mopf;":"𝕄","mopf;":"𝕞","mp;":"∓","Mscr;":"ℳ","mscr;":"𝓂","mstpos;":"∾","Mu;":"Μ","mu;":"μ","multimap;":"⊸","mumap;":"⊸","nabla;":"∇","Nacute;":"Ń","nacute;":"ń","nang;":"∠⃒","nap;":"≉","napE;":"⩰̸","napid;":"≋̸","napos;":"ŉ","napprox;":"≉","natur;":"♮","natural;":"♮","naturals;":"ℕ","nbsp;":" ",nbsp:" ","nbump;":"≎̸","nbumpe;":"≏̸","ncap;":"⩃","Ncaron;":"Ň","ncaron;":"ň","Ncedil;":"Ņ","ncedil;":"ņ","ncong;":"≇","ncongdot;":"⩭̸","ncup;":"⩂","Ncy;":"Н","ncy;":"н","ndash;":"–","ne;":"≠","nearhk;":"⤤","neArr;":"⇗","nearr;":"↗","nearrow;":"↗","nedot;":"≐̸","NegativeMediumSpace;":"​","NegativeThickSpace;":"​","NegativeThinSpace;":"​","NegativeVeryThinSpace;":"​","nequiv;":"≢","nesear;":"⤨","nesim;":"≂̸","NestedGreaterGreater;":"≫","NestedLessLess;":"≪","NewLine;":`
`,"nexist;":"∄","nexists;":"∄","Nfr;":"𝔑","nfr;":"𝔫","ngE;":"≧̸","nge;":"≱","ngeq;":"≱","ngeqq;":"≧̸","ngeqslant;":"⩾̸","nges;":"⩾̸","nGg;":"⋙̸","ngsim;":"≵","nGt;":"≫⃒","ngt;":"≯","ngtr;":"≯","nGtv;":"≫̸","nhArr;":"⇎","nharr;":"↮","nhpar;":"⫲","ni;":"∋","nis;":"⋼","nisd;":"⋺","niv;":"∋","NJcy;":"Њ","njcy;":"њ","nlArr;":"⇍","nlarr;":"↚","nldr;":"‥","nlE;":"≦̸","nle;":"≰","nLeftarrow;":"⇍","nleftarrow;":"↚","nLeftrightarrow;":"⇎","nleftrightarrow;":"↮","nleq;":"≰","nleqq;":"≦̸","nleqslant;":"⩽̸","nles;":"⩽̸","nless;":"≮","nLl;":"⋘̸","nlsim;":"≴","nLt;":"≪⃒","nlt;":"≮","nltri;":"⋪","nltrie;":"⋬","nLtv;":"≪̸","nmid;":"∤","NoBreak;":"⁠","NonBreakingSpace;":" ","Nopf;":"ℕ","nopf;":"𝕟","Not;":"⫬","not;":"¬",not:"¬","NotCongruent;":"≢","NotCupCap;":"≭","NotDoubleVerticalBar;":"∦","NotElement;":"∉","NotEqual;":"≠","NotEqualTilde;":"≂̸","NotExists;":"∄","NotGreater;":"≯","NotGreaterEqual;":"≱","NotGreaterFullEqual;":"≧̸","NotGreaterGreater;":"≫̸","NotGreaterLess;":"≹","NotGreaterSlantEqual;":"⩾̸","NotGreaterTilde;":"≵","NotHumpDownHump;":"≎̸","NotHumpEqual;":"≏̸","notin;":"∉","notindot;":"⋵̸","notinE;":"⋹̸","notinva;":"∉","notinvb;":"⋷","notinvc;":"⋶","NotLeftTriangle;":"⋪","NotLeftTriangleBar;":"⧏̸","NotLeftTriangleEqual;":"⋬","NotLess;":"≮","NotLessEqual;":"≰","NotLessGreater;":"≸","NotLessLess;":"≪̸","NotLessSlantEqual;":"⩽̸","NotLessTilde;":"≴","NotNestedGreaterGreater;":"⪢̸","NotNestedLessLess;":"⪡̸","notni;":"∌","notniva;":"∌","notnivb;":"⋾","notnivc;":"⋽","NotPrecedes;":"⊀","NotPrecedesEqual;":"⪯̸","NotPrecedesSlantEqual;":"⋠","NotReverseElement;":"∌","NotRightTriangle;":"⋫","NotRightTriangleBar;":"⧐̸","NotRightTriangleEqual;":"⋭","NotSquareSubset;":"⊏̸","NotSquareSubsetEqual;":"⋢","NotSquareSuperset;":"⊐̸","NotSquareSupersetEqual;":"⋣","NotSubset;":"⊂⃒","NotSubsetEqual;":"⊈","NotSucceeds;":"⊁","NotSucceedsEqual;":"⪰̸","NotSucceedsSlantEqual;":"⋡","NotSucceedsTilde;":"≿̸","NotSuperset;":"⊃⃒","NotSupersetEqual;":"⊉","NotTilde;":"≁","NotTildeEqual;":"≄","NotTildeFullEqual;":"≇","NotTildeTilde;":"≉","NotVerticalBar;":"∤","npar;":"∦","nparallel;":"∦","nparsl;":"⫽⃥","npart;":"∂̸","npolint;":"⨔","npr;":"⊀","nprcue;":"⋠","npre;":"⪯̸","nprec;":"⊀","npreceq;":"⪯̸","nrArr;":"⇏","nrarr;":"↛","nrarrc;":"⤳̸","nrarrw;":"↝̸","nRightarrow;":"⇏","nrightarrow;":"↛","nrtri;":"⋫","nrtrie;":"⋭","nsc;":"⊁","nsccue;":"⋡","nsce;":"⪰̸","Nscr;":"𝒩","nscr;":"𝓃","nshortmid;":"∤","nshortparallel;":"∦","nsim;":"≁","nsime;":"≄","nsimeq;":"≄","nsmid;":"∤","nspar;":"∦","nsqsube;":"⋢","nsqsupe;":"⋣","nsub;":"⊄","nsubE;":"⫅̸","nsube;":"⊈","nsubset;":"⊂⃒","nsubseteq;":"⊈","nsubseteqq;":"⫅̸","nsucc;":"⊁","nsucceq;":"⪰̸","nsup;":"⊅","nsupE;":"⫆̸","nsupe;":"⊉","nsupset;":"⊃⃒","nsupseteq;":"⊉","nsupseteqq;":"⫆̸","ntgl;":"≹","Ntilde;":"Ñ",Ntilde:"Ñ","ntilde;":"ñ",ntilde:"ñ","ntlg;":"≸","ntriangleleft;":"⋪","ntrianglelefteq;":"⋬","ntriangleright;":"⋫","ntrianglerighteq;":"⋭","Nu;":"Ν","nu;":"ν","num;":"#","numero;":"№","numsp;":" ","nvap;":"≍⃒","nVDash;":"⊯","nVdash;":"⊮","nvDash;":"⊭","nvdash;":"⊬","nvge;":"≥⃒","nvgt;":">⃒","nvHarr;":"⤄","nvinfin;":"⧞","nvlArr;":"⤂","nvle;":"≤⃒","nvlt;":"<⃒","nvltrie;":"⊴⃒","nvrArr;":"⤃","nvrtrie;":"⊵⃒","nvsim;":"∼⃒","nwarhk;":"⤣","nwArr;":"⇖","nwarr;":"↖","nwarrow;":"↖","nwnear;":"⤧","Oacute;":"Ó",Oacute:"Ó","oacute;":"ó",oacute:"ó","oast;":"⊛","ocir;":"⊚","Ocirc;":"Ô",Ocirc:"Ô","ocirc;":"ô",ocirc:"ô","Ocy;":"О","ocy;":"о","odash;":"⊝","Odblac;":"Ő","odblac;":"ő","odiv;":"⨸","odot;":"⊙","odsold;":"⦼","OElig;":"Œ","oelig;":"œ","ofcir;":"⦿","Ofr;":"𝔒","ofr;":"𝔬","ogon;":"˛","Ograve;":"Ò",Ograve:"Ò","ograve;":"ò",ograve:"ò","ogt;":"⧁","ohbar;":"⦵","ohm;":"Ω","oint;":"∮","olarr;":"↺","olcir;":"⦾","olcross;":"⦻","oline;":"‾","olt;":"⧀","Omacr;":"Ō","omacr;":"ō","Omega;":"Ω","omega;":"ω","Omicron;":"Ο","omicron;":"ο","omid;":"⦶","ominus;":"⊖","Oopf;":"𝕆","oopf;":"𝕠","opar;":"⦷","OpenCurlyDoubleQuote;":"“","OpenCurlyQuote;":"‘","operp;":"⦹","oplus;":"⊕","Or;":"⩔","or;":"∨","orarr;":"↻","ord;":"⩝","order;":"ℴ","orderof;":"ℴ","ordf;":"ª",ordf:"ª","ordm;":"º",ordm:"º","origof;":"⊶","oror;":"⩖","orslope;":"⩗","orv;":"⩛","oS;":"Ⓢ","Oscr;":"𝒪","oscr;":"ℴ","Oslash;":"Ø",Oslash:"Ø","oslash;":"ø",oslash:"ø","osol;":"⊘","Otilde;":"Õ",Otilde:"Õ","otilde;":"õ",otilde:"õ","Otimes;":"⨷","otimes;":"⊗","otimesas;":"⨶","Ouml;":"Ö",Ouml:"Ö","ouml;":"ö",ouml:"ö","ovbar;":"⌽","OverBar;":"‾","OverBrace;":"⏞","OverBracket;":"⎴","OverParenthesis;":"⏜","par;":"∥","para;":"¶",para:"¶","parallel;":"∥","parsim;":"⫳","parsl;":"⫽","part;":"∂","PartialD;":"∂","Pcy;":"П","pcy;":"п","percnt;":"%","period;":".","permil;":"‰","perp;":"⊥","pertenk;":"‱","Pfr;":"𝔓","pfr;":"𝔭","Phi;":"Φ","phi;":"φ","phiv;":"ϕ","phmmat;":"ℳ","phone;":"☎","Pi;":"Π","pi;":"π","pitchfork;":"⋔","piv;":"ϖ","planck;":"ℏ","planckh;":"ℎ","plankv;":"ℏ","plus;":"+","plusacir;":"⨣","plusb;":"⊞","pluscir;":"⨢","plusdo;":"∔","plusdu;":"⨥","pluse;":"⩲","PlusMinus;":"±","plusmn;":"±",plusmn:"±","plussim;":"⨦","plustwo;":"⨧","pm;":"±","Poincareplane;":"ℌ","pointint;":"⨕","Popf;":"ℙ","popf;":"𝕡","pound;":"£",pound:"£","Pr;":"⪻","pr;":"≺","prap;":"⪷","prcue;":"≼","prE;":"⪳","pre;":"⪯","prec;":"≺","precapprox;":"⪷","preccurlyeq;":"≼","Precedes;":"≺","PrecedesEqual;":"⪯","PrecedesSlantEqual;":"≼","PrecedesTilde;":"≾","preceq;":"⪯","precnapprox;":"⪹","precneqq;":"⪵","precnsim;":"⋨","precsim;":"≾","Prime;":"″","prime;":"′","primes;":"ℙ","prnap;":"⪹","prnE;":"⪵","prnsim;":"⋨","prod;":"∏","Product;":"∏","profalar;":"⌮","profline;":"⌒","profsurf;":"⌓","prop;":"∝","Proportion;":"∷","Proportional;":"∝","propto;":"∝","prsim;":"≾","prurel;":"⊰","Pscr;":"𝒫","pscr;":"𝓅","Psi;":"Ψ","psi;":"ψ","puncsp;":" ","Qfr;":"𝔔","qfr;":"𝔮","qint;":"⨌","Qopf;":"ℚ","qopf;":"𝕢","qprime;":"⁗","Qscr;":"𝒬","qscr;":"𝓆","quaternions;":"ℍ","quatint;":"⨖","quest;":"?","questeq;":"≟","QUOT;":'"',QUOT:'"',"quot;":'"',quot:'"',"rAarr;":"⇛","race;":"∽̱","Racute;":"Ŕ","racute;":"ŕ","radic;":"√","raemptyv;":"⦳","Rang;":"⟫","rang;":"⟩","rangd;":"⦒","range;":"⦥","rangle;":"⟩","raquo;":"»",raquo:"»","Rarr;":"↠","rArr;":"⇒","rarr;":"→","rarrap;":"⥵","rarrb;":"⇥","rarrbfs;":"⤠","rarrc;":"⤳","rarrfs;":"⤞","rarrhk;":"↪","rarrlp;":"↬","rarrpl;":"⥅","rarrsim;":"⥴","Rarrtl;":"⤖","rarrtl;":"↣","rarrw;":"↝","rAtail;":"⤜","ratail;":"⤚","ratio;":"∶","rationals;":"ℚ","RBarr;":"⤐","rBarr;":"⤏","rbarr;":"⤍","rbbrk;":"❳","rbrace;":"}","rbrack;":"]","rbrke;":"⦌","rbrksld;":"⦎","rbrkslu;":"⦐","Rcaron;":"Ř","rcaron;":"ř","Rcedil;":"Ŗ","rcedil;":"ŗ","rceil;":"⌉","rcub;":"}","Rcy;":"Р","rcy;":"р","rdca;":"⤷","rdldhar;":"⥩","rdquo;":"”","rdquor;":"”","rdsh;":"↳","Re;":"ℜ","real;":"ℜ","realine;":"ℛ","realpart;":"ℜ","reals;":"ℝ","rect;":"▭","REG;":"®",REG:"®","reg;":"®",reg:"®","ReverseElement;":"∋","ReverseEquilibrium;":"⇋","ReverseUpEquilibrium;":"⥯","rfisht;":"⥽","rfloor;":"⌋","Rfr;":"ℜ","rfr;":"𝔯","rHar;":"⥤","rhard;":"⇁","rharu;":"⇀","rharul;":"⥬","Rho;":"Ρ","rho;":"ρ","rhov;":"ϱ","RightAngleBracket;":"⟩","RightArrow;":"→","Rightarrow;":"⇒","rightarrow;":"→","RightArrowBar;":"⇥","RightArrowLeftArrow;":"⇄","rightarrowtail;":"↣","RightCeiling;":"⌉","RightDoubleBracket;":"⟧","RightDownTeeVector;":"⥝","RightDownVector;":"⇂","RightDownVectorBar;":"⥕","RightFloor;":"⌋","rightharpoondown;":"⇁","rightharpoonup;":"⇀","rightleftarrows;":"⇄","rightleftharpoons;":"⇌","rightrightarrows;":"⇉","rightsquigarrow;":"↝","RightTee;":"⊢","RightTeeArrow;":"↦","RightTeeVector;":"⥛","rightthreetimes;":"⋌","RightTriangle;":"⊳","RightTriangleBar;":"⧐","RightTriangleEqual;":"⊵","RightUpDownVector;":"⥏","RightUpTeeVector;":"⥜","RightUpVector;":"↾","RightUpVectorBar;":"⥔","RightVector;":"⇀","RightVectorBar;":"⥓","ring;":"˚","risingdotseq;":"≓","rlarr;":"⇄","rlhar;":"⇌","rlm;":"‏","rmoust;":"⎱","rmoustache;":"⎱","rnmid;":"⫮","roang;":"⟭","roarr;":"⇾","robrk;":"⟧","ropar;":"⦆","Ropf;":"ℝ","ropf;":"𝕣","roplus;":"⨮","rotimes;":"⨵","RoundImplies;":"⥰","rpar;":")","rpargt;":"⦔","rppolint;":"⨒","rrarr;":"⇉","Rrightarrow;":"⇛","rsaquo;":"›","Rscr;":"ℛ","rscr;":"𝓇","Rsh;":"↱","rsh;":"↱","rsqb;":"]","rsquo;":"’","rsquor;":"’","rthree;":"⋌","rtimes;":"⋊","rtri;":"▹","rtrie;":"⊵","rtrif;":"▸","rtriltri;":"⧎","RuleDelayed;":"⧴","ruluhar;":"⥨","rx;":"℞","Sacute;":"Ś","sacute;":"ś","sbquo;":"‚","Sc;":"⪼","sc;":"≻","scap;":"⪸","Scaron;":"Š","scaron;":"š","sccue;":"≽","scE;":"⪴","sce;":"⪰","Scedil;":"Ş","scedil;":"ş","Scirc;":"Ŝ","scirc;":"ŝ","scnap;":"⪺","scnE;":"⪶","scnsim;":"⋩","scpolint;":"⨓","scsim;":"≿","Scy;":"С","scy;":"с","sdot;":"⋅","sdotb;":"⊡","sdote;":"⩦","searhk;":"⤥","seArr;":"⇘","searr;":"↘","searrow;":"↘","sect;":"§",sect:"§","semi;":";","seswar;":"⤩","setminus;":"∖","setmn;":"∖","sext;":"✶","Sfr;":"𝔖","sfr;":"𝔰","sfrown;":"⌢","sharp;":"♯","SHCHcy;":"Щ","shchcy;":"щ","SHcy;":"Ш","shcy;":"ш","ShortDownArrow;":"↓","ShortLeftArrow;":"←","shortmid;":"∣","shortparallel;":"∥","ShortRightArrow;":"→","ShortUpArrow;":"↑","shy;":"­",shy:"­","Sigma;":"Σ","sigma;":"σ","sigmaf;":"ς","sigmav;":"ς","sim;":"∼","simdot;":"⩪","sime;":"≃","simeq;":"≃","simg;":"⪞","simgE;":"⪠","siml;":"⪝","simlE;":"⪟","simne;":"≆","simplus;":"⨤","simrarr;":"⥲","slarr;":"←","SmallCircle;":"∘","smallsetminus;":"∖","smashp;":"⨳","smeparsl;":"⧤","smid;":"∣","smile;":"⌣","smt;":"⪪","smte;":"⪬","smtes;":"⪬︀","SOFTcy;":"Ь","softcy;":"ь","sol;":"/","solb;":"⧄","solbar;":"⌿","Sopf;":"𝕊","sopf;":"𝕤","spades;":"♠","spadesuit;":"♠","spar;":"∥","sqcap;":"⊓","sqcaps;":"⊓︀","sqcup;":"⊔","sqcups;":"⊔︀","Sqrt;":"√","sqsub;":"⊏","sqsube;":"⊑","sqsubset;":"⊏","sqsubseteq;":"⊑","sqsup;":"⊐","sqsupe;":"⊒","sqsupset;":"⊐","sqsupseteq;":"⊒","squ;":"□","Square;":"□","square;":"□","SquareIntersection;":"⊓","SquareSubset;":"⊏","SquareSubsetEqual;":"⊑","SquareSuperset;":"⊐","SquareSupersetEqual;":"⊒","SquareUnion;":"⊔","squarf;":"▪","squf;":"▪","srarr;":"→","Sscr;":"𝒮","sscr;":"𝓈","ssetmn;":"∖","ssmile;":"⌣","sstarf;":"⋆","Star;":"⋆","star;":"☆","starf;":"★","straightepsilon;":"ϵ","straightphi;":"ϕ","strns;":"¯","Sub;":"⋐","sub;":"⊂","subdot;":"⪽","subE;":"⫅","sube;":"⊆","subedot;":"⫃","submult;":"⫁","subnE;":"⫋","subne;":"⊊","subplus;":"⪿","subrarr;":"⥹","Subset;":"⋐","subset;":"⊂","subseteq;":"⊆","subseteqq;":"⫅","SubsetEqual;":"⊆","subsetneq;":"⊊","subsetneqq;":"⫋","subsim;":"⫇","subsub;":"⫕","subsup;":"⫓","succ;":"≻","succapprox;":"⪸","succcurlyeq;":"≽","Succeeds;":"≻","SucceedsEqual;":"⪰","SucceedsSlantEqual;":"≽","SucceedsTilde;":"≿","succeq;":"⪰","succnapprox;":"⪺","succneqq;":"⪶","succnsim;":"⋩","succsim;":"≿","SuchThat;":"∋","Sum;":"∑","sum;":"∑","sung;":"♪","Sup;":"⋑","sup;":"⊃","sup1;":"¹",sup1:"¹","sup2;":"²",sup2:"²","sup3;":"³",sup3:"³","supdot;":"⪾","supdsub;":"⫘","supE;":"⫆","supe;":"⊇","supedot;":"⫄","Superset;":"⊃","SupersetEqual;":"⊇","suphsol;":"⟉","suphsub;":"⫗","suplarr;":"⥻","supmult;":"⫂","supnE;":"⫌","supne;":"⊋","supplus;":"⫀","Supset;":"⋑","supset;":"⊃","supseteq;":"⊇","supseteqq;":"⫆","supsetneq;":"⊋","supsetneqq;":"⫌","supsim;":"⫈","supsub;":"⫔","supsup;":"⫖","swarhk;":"⤦","swArr;":"⇙","swarr;":"↙","swarrow;":"↙","swnwar;":"⤪","szlig;":"ß",szlig:"ß","Tab;":"	","target;":"⌖","Tau;":"Τ","tau;":"τ","tbrk;":"⎴","Tcaron;":"Ť","tcaron;":"ť","Tcedil;":"Ţ","tcedil;":"ţ","Tcy;":"Т","tcy;":"т","tdot;":"⃛","telrec;":"⌕","Tfr;":"𝔗","tfr;":"𝔱","there4;":"∴","Therefore;":"∴","therefore;":"∴","Theta;":"Θ","theta;":"θ","thetasym;":"ϑ","thetav;":"ϑ","thickapprox;":"≈","thicksim;":"∼","ThickSpace;":"  ","thinsp;":" ","ThinSpace;":" ","thkap;":"≈","thksim;":"∼","THORN;":"Þ",THORN:"Þ","thorn;":"þ",thorn:"þ","Tilde;":"∼","tilde;":"˜","TildeEqual;":"≃","TildeFullEqual;":"≅","TildeTilde;":"≈","times;":"×",times:"×","timesb;":"⊠","timesbar;":"⨱","timesd;":"⨰","tint;":"∭","toea;":"⤨","top;":"⊤","topbot;":"⌶","topcir;":"⫱","Topf;":"𝕋","topf;":"𝕥","topfork;":"⫚","tosa;":"⤩","tprime;":"‴","TRADE;":"™","trade;":"™","triangle;":"▵","triangledown;":"▿","triangleleft;":"◃","trianglelefteq;":"⊴","triangleq;":"≜","triangleright;":"▹","trianglerighteq;":"⊵","tridot;":"◬","trie;":"≜","triminus;":"⨺","TripleDot;":"⃛","triplus;":"⨹","trisb;":"⧍","tritime;":"⨻","trpezium;":"⏢","Tscr;":"𝒯","tscr;":"𝓉","TScy;":"Ц","tscy;":"ц","TSHcy;":"Ћ","tshcy;":"ћ","Tstrok;":"Ŧ","tstrok;":"ŧ","twixt;":"≬","twoheadleftarrow;":"↞","twoheadrightarrow;":"↠","Uacute;":"Ú",Uacute:"Ú","uacute;":"ú",uacute:"ú","Uarr;":"↟","uArr;":"⇑","uarr;":"↑","Uarrocir;":"⥉","Ubrcy;":"Ў","ubrcy;":"ў","Ubreve;":"Ŭ","ubreve;":"ŭ","Ucirc;":"Û",Ucirc:"Û","ucirc;":"û",ucirc:"û","Ucy;":"У","ucy;":"у","udarr;":"⇅","Udblac;":"Ű","udblac;":"ű","udhar;":"⥮","ufisht;":"⥾","Ufr;":"𝔘","ufr;":"𝔲","Ugrave;":"Ù",Ugrave:"Ù","ugrave;":"ù",ugrave:"ù","uHar;":"⥣","uharl;":"↿","uharr;":"↾","uhblk;":"▀","ulcorn;":"⌜","ulcorner;":"⌜","ulcrop;":"⌏","ultri;":"◸","Umacr;":"Ū","umacr;":"ū","uml;":"¨",uml:"¨","UnderBar;":"_","UnderBrace;":"⏟","UnderBracket;":"⎵","UnderParenthesis;":"⏝","Union;":"⋃","UnionPlus;":"⊎","Uogon;":"Ų","uogon;":"ų","Uopf;":"𝕌","uopf;":"𝕦","UpArrow;":"↑","Uparrow;":"⇑","uparrow;":"↑","UpArrowBar;":"⤒","UpArrowDownArrow;":"⇅","UpDownArrow;":"↕","Updownarrow;":"⇕","updownarrow;":"↕","UpEquilibrium;":"⥮","upharpoonleft;":"↿","upharpoonright;":"↾","uplus;":"⊎","UpperLeftArrow;":"↖","UpperRightArrow;":"↗","Upsi;":"ϒ","upsi;":"υ","upsih;":"ϒ","Upsilon;":"Υ","upsilon;":"υ","UpTee;":"⊥","UpTeeArrow;":"↥","upuparrows;":"⇈","urcorn;":"⌝","urcorner;":"⌝","urcrop;":"⌎","Uring;":"Ů","uring;":"ů","urtri;":"◹","Uscr;":"𝒰","uscr;":"𝓊","utdot;":"⋰","Utilde;":"Ũ","utilde;":"ũ","utri;":"▵","utrif;":"▴","uuarr;":"⇈","Uuml;":"Ü",Uuml:"Ü","uuml;":"ü",uuml:"ü","uwangle;":"⦧","vangrt;":"⦜","varepsilon;":"ϵ","varkappa;":"ϰ","varnothing;":"∅","varphi;":"ϕ","varpi;":"ϖ","varpropto;":"∝","vArr;":"⇕","varr;":"↕","varrho;":"ϱ","varsigma;":"ς","varsubsetneq;":"⊊︀","varsubsetneqq;":"⫋︀","varsupsetneq;":"⊋︀","varsupsetneqq;":"⫌︀","vartheta;":"ϑ","vartriangleleft;":"⊲","vartriangleright;":"⊳","Vbar;":"⫫","vBar;":"⫨","vBarv;":"⫩","Vcy;":"В","vcy;":"в","VDash;":"⊫","Vdash;":"⊩","vDash;":"⊨","vdash;":"⊢","Vdashl;":"⫦","Vee;":"⋁","vee;":"∨","veebar;":"⊻","veeeq;":"≚","vellip;":"⋮","Verbar;":"‖","verbar;":"|","Vert;":"‖","vert;":"|","VerticalBar;":"∣","VerticalLine;":"|","VerticalSeparator;":"❘","VerticalTilde;":"≀","VeryThinSpace;":" ","Vfr;":"𝔙","vfr;":"𝔳","vltri;":"⊲","vnsub;":"⊂⃒","vnsup;":"⊃⃒","Vopf;":"𝕍","vopf;":"𝕧","vprop;":"∝","vrtri;":"⊳","Vscr;":"𝒱","vscr;":"𝓋","vsubnE;":"⫋︀","vsubne;":"⊊︀","vsupnE;":"⫌︀","vsupne;":"⊋︀","Vvdash;":"⊪","vzigzag;":"⦚","Wcirc;":"Ŵ","wcirc;":"ŵ","wedbar;":"⩟","Wedge;":"⋀","wedge;":"∧","wedgeq;":"≙","weierp;":"℘","Wfr;":"𝔚","wfr;":"𝔴","Wopf;":"𝕎","wopf;":"𝕨","wp;":"℘","wr;":"≀","wreath;":"≀","Wscr;":"𝒲","wscr;":"𝓌","xcap;":"⋂","xcirc;":"◯","xcup;":"⋃","xdtri;":"▽","Xfr;":"𝔛","xfr;":"𝔵","xhArr;":"⟺","xharr;":"⟷","Xi;":"Ξ","xi;":"ξ","xlArr;":"⟸","xlarr;":"⟵","xmap;":"⟼","xnis;":"⋻","xodot;":"⨀","Xopf;":"𝕏","xopf;":"𝕩","xoplus;":"⨁","xotime;":"⨂","xrArr;":"⟹","xrarr;":"⟶","Xscr;":"𝒳","xscr;":"𝓍","xsqcup;":"⨆","xuplus;":"⨄","xutri;":"△","xvee;":"⋁","xwedge;":"⋀","Yacute;":"Ý",Yacute:"Ý","yacute;":"ý",yacute:"ý","YAcy;":"Я","yacy;":"я","Ycirc;":"Ŷ","ycirc;":"ŷ","Ycy;":"Ы","ycy;":"ы","yen;":"¥",yen:"¥","Yfr;":"𝔜","yfr;":"𝔶","YIcy;":"Ї","yicy;":"ї","Yopf;":"𝕐","yopf;":"𝕪","Yscr;":"𝒴","yscr;":"𝓎","YUcy;":"Ю","yucy;":"ю","Yuml;":"Ÿ","yuml;":"ÿ",yuml:"ÿ","Zacute;":"Ź","zacute;":"ź","Zcaron;":"Ž","zcaron;":"ž","Zcy;":"З","zcy;":"з","Zdot;":"Ż","zdot;":"ż","zeetrf;":"ℨ","ZeroWidthSpace;":"​","Zeta;":"Ζ","zeta;":"ζ","Zfr;":"ℨ","zfr;":"𝔷","ZHcy;":"Ж","zhcy;":"ж","zigrarr;":"⇝","Zopf;":"ℤ","zopf;":"𝕫","Zscr;":"𝒵","zscr;":"𝓏","zwj;":"‍","zwnj;":"‌"};function Qe(e,t){if(e.length<t.length)return!1;for(var n=0;n<t.length;n++)if(e[n]!==t[n])return!1;return!0}function nu(e,t){var n=e.length-t.length;return n>0?e.lastIndexOf(t)===n:n===0?e===t:!1}function Qa(e,t){for(var n="";t>0;)(t&1)===1&&(n+=e),e+=e,t=t>>>1;return n}var iu=97,ru=122,au=65,su=90,ou=48,lu=57;function Ht(e,t){var n=e.charCodeAt(t);return iu<=n&&n<=ru||au<=n&&n<=su||ou<=n&&n<=lu}function mn(e){return typeof e<"u"}function uu(e){if(e)return typeof e=="string"?{kind:"markdown",value:e}:{kind:"markdown",value:e.value}}var Ya=function(){function e(t,n){var i=this;this.id=t,this._tags=[],this._tagMap={},this._valueSetMap={},this._tags=n.tags||[],this._globalAttributes=n.globalAttributes||[],this._tags.forEach(function(r){i._tagMap[r.name.toLowerCase()]=r}),n.valueSets&&n.valueSets.forEach(function(r){i._valueSetMap[r.name]=r.values})}return e.prototype.isApplicable=function(){return!0},e.prototype.getId=function(){return this.id},e.prototype.provideTags=function(){return this._tags},e.prototype.provideAttributes=function(t){var n=[],i=function(a){n.push(a)},r=this._tagMap[t.toLowerCase()];return r&&r.attributes.forEach(i),this._globalAttributes.forEach(i),n},e.prototype.provideValues=function(t,n){var i=this,r=[];n=n.toLowerCase();var a=function(o){o.forEach(function(l){l.name.toLowerCase()===n&&(l.values&&l.values.forEach(function(u){r.push(u)}),l.valueSet&&i._valueSetMap[l.valueSet]&&i._valueSetMap[l.valueSet].forEach(function(u){r.push(u)}))})},s=this._tagMap[t.toLowerCase()];return s&&a(s.attributes),a(this._globalAttributes),r},e}();function tt(e,t,n){t===void 0&&(t={});var i={kind:n?"markdown":"plaintext",value:""};if(e.description&&t.documentation!==!1){var r=uu(e.description);r&&(i.value+=r.value)}if(e.references&&e.references.length>0&&t.references!==!1&&(i.value.length&&(i.value+=`

`),n?i.value+=e.references.map(function(a){return"[".concat(a.name,"](").concat(a.url,")")}).join(" | "):i.value+=e.references.map(function(a){return"".concat(a.name,": ").concat(a.url)}).join(`
`)),i.value!=="")return i}var Za=function(e,t,n,i){function r(a){return a instanceof n?a:new n(function(s){s(a)})}return new(n||(n=Promise))(function(a,s){function o(c){try{u(i.next(c))}catch(d){s(d)}}function l(c){try{u(i.throw(c))}catch(d){s(d)}}function u(c){c.done?a(c.value):r(c.value).then(o,l)}u((i=i.apply(e,[])).next())})},Ka=function(e,t){var n={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},i,r,a,s;return s={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function o(u){return function(c){return l([u,c])}}function l(u){if(i)throw new TypeError("Generator is already executing.");for(;n;)try{if(i=1,r&&(a=u[0]&2?r.return:u[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,u[1])).done)return a;switch(r=0,a&&(u=[u[0]&2,a.value]),u[0]){case 0:case 1:a=u;break;case 4:return n.label++,{value:u[1],done:!1};case 5:n.label++,r=u[1],u=[0];continue;case 7:u=n.ops.pop(),n.trys.pop();continue;default:if(a=n.trys,!(a=a.length>0&&a[a.length-1])&&(u[0]===6||u[0]===2)){n=0;continue}if(u[0]===3&&(!a||u[1]>a[0]&&u[1]<a[3])){n.label=u[1];break}if(u[0]===6&&n.label<a[1]){n.label=a[1],a=u;break}if(a&&n.label<a[2]){n.label=a[2],n.ops.push(u);break}a[2]&&n.ops.pop(),n.trys.pop();continue}u=t.call(e,n)}catch(c){u=[6,c],r=0}finally{i=a=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}},cu=function(){function e(t){this.readDirectory=t,this.atributeCompletions=[]}return e.prototype.onHtmlAttributeValue=function(t){fu(t.tag,t.attribute)&&this.atributeCompletions.push(t)},e.prototype.computeCompletions=function(t,n){return Za(this,void 0,void 0,function(){var i,r,a,s,o,l,u,c,d,m;return Ka(this,function(f){switch(f.label){case 0:i={items:[],isIncomplete:!1},r=0,a=this.atributeCompletions,f.label=1;case 1:return r<a.length?(s=a[r],o=du(t.getText(s.range)),mu(o)?o==="."||o===".."?(i.isIncomplete=!0,[3,4]):[3,2]:[3,4]):[3,5];case 2:return l=pu(s.value,o,s.range),[4,this.providePathSuggestions(s.value,l,t,n)];case 3:for(u=f.sent(),c=0,d=u;c<d.length;c++)m=d[c],i.items.push(m);f.label=4;case 4:return r++,[3,1];case 5:return[2,i]}})})},e.prototype.providePathSuggestions=function(t,n,i,r){return Za(this,void 0,void 0,function(){var a,s,o,l,u,c,d,m,f;return Ka(this,function(b){switch(b.label){case 0:if(a=t.substring(0,t.lastIndexOf("/")+1),s=r.resolveReference(a||".",i.uri),!s)return[3,4];b.label=1;case 1:return b.trys.push([1,3,,4]),o=[],[4,this.readDirectory(s)];case 2:for(l=b.sent(),u=0,c=l;u<c.length;u++)d=c[u],m=d[0],f=d[1],m.charCodeAt(0)!==hu&&o.push(gu(m,f===oi.Directory,n));return[2,o];case 3:return b.sent(),[3,4];case 4:return[2,[]]}})})},e}(),hu=46;function du(e){return Qe(e,"'")||Qe(e,'"')?e.slice(1,-1):e}function mu(e){return!(Qe(e,"http")||Qe(e,"https")||Qe(e,"//"))}function fu(e,t){if(t==="src"||t==="href")return!0;var n=vu[e];return n?typeof n=="string"?n===t:n.indexOf(t)!==-1:!1}function pu(e,t,n){var i,r=e.lastIndexOf("/");if(r===-1)i=bu(n,1,-1);else{var a=t.slice(r+1),s=Ut(n.end,-1-a.length),o=a.indexOf(" "),l=void 0;o!==-1?l=Ut(s,o):l=Ut(n.end,-1),i=Y.create(s,l)}return i}function gu(e,t,n){return t?(e=e+"/",{label:e,kind:be.Folder,textEdit:se.replace(n,e),command:{title:"Suggest",command:"editor.action.triggerSuggest"}}):{label:e,kind:be.File,textEdit:se.replace(n,e)}}function Ut(e,t){return ce.create(e.line,e.character+t)}function bu(e,t,n){var i=Ut(e.start,t),r=Ut(e.end,n);return Y.create(i,r)}var vu={a:"href",area:"href",body:"background",del:"cite",form:"action",frame:["src","longdesc"],img:["src","longdesc"],ins:"cite",link:"href",object:"data",q:"cite",script:"src",audio:"src",button:"formaction",command:"icon",embed:"src",html:"manifest",input:["src","formaction"],source:"src",track:"src",video:["src","poster"]},_u=function(e,t,n,i){function r(a){return a instanceof n?a:new n(function(s){s(a)})}return new(n||(n=Promise))(function(a,s){function o(c){try{u(i.next(c))}catch(d){s(d)}}function l(c){try{u(i.throw(c))}catch(d){s(d)}}function u(c){c.done?a(c.value):r(c.value).then(o,l)}u((i=i.apply(e,[])).next())})},wu=function(e,t){var n={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},i,r,a,s;return s={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(s[Symbol.iterator]=function(){return this}),s;function o(u){return function(c){return l([u,c])}}function l(u){if(i)throw new TypeError("Generator is already executing.");for(;n;)try{if(i=1,r&&(a=u[0]&2?r.return:u[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,u[1])).done)return a;switch(r=0,a&&(u=[u[0]&2,a.value]),u[0]){case 0:case 1:a=u;break;case 4:return n.label++,{value:u[1],done:!1};case 5:n.label++,r=u[1],u=[0];continue;case 7:u=n.ops.pop(),n.trys.pop();continue;default:if(a=n.trys,!(a=a.length>0&&a[a.length-1])&&(u[0]===6||u[0]===2)){n=0;continue}if(u[0]===3&&(!a||u[1]>a[0]&&u[1]<a[3])){n.label=u[1];break}if(u[0]===6&&n.label<a[1]){n.label=a[1],a=u;break}if(a&&n.label<a[2]){n.label=a[2],n.ops.push(u);break}a[2]&&n.ops.pop(),n.trys.pop();continue}u=t.call(e,n)}catch(c){u=[6,c],r=0}finally{i=a=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}},yu=Kn(),xu=function(){function e(t,n){this.lsOptions=t,this.dataManager=n,this.completionParticipants=[]}return e.prototype.setCompletionParticipants=function(t){this.completionParticipants=t||[]},e.prototype.doComplete2=function(t,n,i,r,a){return _u(this,void 0,void 0,function(){var s,o,l,u;return wu(this,function(c){switch(c.label){case 0:if(!this.lsOptions.fileSystemProvider||!this.lsOptions.fileSystemProvider.readDirectory)return[2,this.doComplete(t,n,i,a)];s=new cu(this.lsOptions.fileSystemProvider.readDirectory),o=this.completionParticipants,this.completionParticipants=[s].concat(o),l=this.doComplete(t,n,i,a),c.label=1;case 1:return c.trys.push([1,,3,4]),[4,s.computeCompletions(t,r)];case 2:return u=c.sent(),[2,{isIncomplete:l.isIncomplete||u.isIncomplete,items:u.items.concat(l.items)}];case 3:return this.completionParticipants=o,[7];case 4:return[2]}})})},e.prototype.doComplete=function(t,n,i,r){var a=this._doComplete(t,n,i,r);return this.convertCompletionList(a)},e.prototype._doComplete=function(t,n,i,r){var a={isIncomplete:!1,items:[]},s=this.completionParticipants,o=this.dataManager.getDataProviders().filter(function(I){return I.isApplicable(t.languageId)&&(!r||r[I.getId()]!==!1)}),l=this.doesSupportMarkdown(),u=t.getText(),c=t.offsetAt(n),d=i.findNodeBefore(c);if(!d)return a;var m=we(u,d.start),f="",b;function p(I,z){return z===void 0&&(z=c),I>c&&(I=c),{start:t.positionAt(I),end:t.positionAt(z)}}function w(I,z){var B=p(I,z);return o.forEach(function(X){X.provideTags().forEach(function(Q){a.items.push({label:Q.name,kind:be.Property,documentation:tt(Q,void 0,l),textEdit:se.replace(B,Q.name),insertTextFormat:Re.PlainText})})}),a}function x(I){for(var z=I;z>0;){var B=u.charAt(z-1);if(`
\r`.indexOf(B)>=0)return u.substring(z,I);if(!fn(B))return null;z--}return u.substring(0,I)}function _(I,z,B){B===void 0&&(B=c);var X=p(I,B),Q=es(u,B,V.WithinEndTag,U.EndTagClose)?"":">",J=d;for(z&&(J=J.parent);J;){var Z=J.tag;if(Z&&(!J.closed||J.endTagStart&&J.endTagStart>c)){var fe={label:"/"+Z,kind:be.Property,filterText:"/"+Z,textEdit:se.replace(X,"/"+Z+Q),insertTextFormat:Re.PlainText},He=x(J.start),Ye=x(I-1);if(He!==null&&Ye!==null&&He!==Ye){var xe=He+"</"+Z+Q;fe.textEdit=se.replace(p(I-1-Ye.length),xe),fe.filterText=Ye+"</"+Z}return a.items.push(fe),a}J=J.parent}return z||o.forEach(function(nt){nt.provideTags().forEach(function(Me){a.items.push({label:"/"+Me.name,kind:be.Property,documentation:tt(Me,void 0,l),filterText:"/"+Me.name+Q,textEdit:se.replace(X,"/"+Me.name+Q),insertTextFormat:Re.PlainText})})}),a}function y(I,z){if(r&&r.hideAutoCompleteProposals)return a;if(!dn(z)){var B=t.positionAt(I);a.items.push({label:"</"+z+">",kind:be.Property,filterText:"</"+z+">",textEdit:se.insert(B,"$0</"+z+">"),insertTextFormat:Re.Snippet})}return a}function E(I,z){return w(I,z),_(I,!0,z),a}function R(){var I=Object.create(null);return d.attributeNames.forEach(function(z){I[z]=!0}),I}function P(I,z){var B;z===void 0&&(z=c);for(var X=c;X<z&&u[X]!=="<";)X++;var Q=u.substring(I,z),J=p(I,X),Z="";if(!es(u,z,V.AfterAttributeName,U.DelimiterAssign)){var fe=(B=r?.attributeDefaultValue)!==null&&B!==void 0?B:"doublequotes";fe==="empty"?Z="=$1":fe==="singlequotes"?Z="='$1'":Z='="$1"'}var He=R();return He[Q]=!1,o.forEach(function(Ye){Ye.provideAttributes(f).forEach(function(xe){if(!He[xe.name]){He[xe.name]=!0;var nt=xe.name,Me;xe.valueSet!=="v"&&Z.length&&(nt=nt+Z,(xe.valueSet||xe.name==="style")&&(Me={title:"Suggest",command:"editor.action.triggerSuggest"})),a.items.push({label:xe.name,kind:xe.valueSet==="handler"?be.Function:be.Value,documentation:tt(xe,void 0,l),textEdit:se.replace(J,nt),insertTextFormat:Re.Snippet,command:Me})}})}),v(J,He),a}function v(I,z){var B="data-",X={};X[B]="".concat(B,'$1="$2"');function Q(J){J.attributeNames.forEach(function(Z){Qe(Z,B)&&!X[Z]&&!z[Z]&&(X[Z]=Z+'="$1"')}),J.children.forEach(function(Z){return Q(Z)})}i&&i.roots.forEach(function(J){return Q(J)}),Object.keys(X).forEach(function(J){return a.items.push({label:J,kind:be.Value,textEdit:se.replace(I,X[J]),insertTextFormat:Re.Snippet})})}function g(I,z){z===void 0&&(z=c);var B,X,Q;if(c>I&&c<=z&&Tu(u[I])){var J=I+1,Z=z;z>I&&u[z-1]===u[I]&&Z--;var fe=ku(u,c,J),He=Au(u,c,Z);B=p(fe,He),Q=c>=J&&c<=Z?u.substring(J,c):"",X=!1}else B=p(I,z),Q=u.substring(I,c),X=!0;if(s.length>0)for(var Ye=f.toLowerCase(),xe=b.toLowerCase(),nt=p(I,z),Me=0,ds=s;Me<ds.length;Me++){var ms=ds[Me];ms.onHtmlAttributeValue&&ms.onHtmlAttributeValue({document:t,position:n,tag:Ye,attribute:xe,value:Q,range:nt})}return o.forEach(function(ac){ac.provideValues(f,b).forEach(function(pn){var fs=X?'"'+pn.name+'"':pn.name;a.items.push({label:pn.name,filterText:fs,kind:be.Unit,documentation:tt(pn,void 0,l),textEdit:se.replace(B,fs),insertTextFormat:Re.PlainText})})}),S(),a}function T(I){return c===m.getTokenEnd()&&(N=m.scan(),N===I&&m.getTokenOffset()===c)?m.getTokenEnd():c}function q(){for(var I=0,z=s;I<z.length;I++){var B=z[I];B.onHtmlContent&&B.onHtmlContent({document:t,position:n})}return S()}function S(){for(var I=c-1,z=n.character;I>=0&&Ht(u,I);)I--,z--;if(I>=0&&u[I]==="&"){var B=Y.create(ce.create(n.line,z-1),n);for(var X in zt)if(nu(X,";")){var Q="&"+X;a.items.push({label:Q,kind:be.Keyword,documentation:yu("entity.propose","Character entity representing '".concat(zt[X],"'")),textEdit:se.replace(B,Q),insertTextFormat:Re.PlainText})}}return a}function k(I,z){var B=p(I,z);a.items.push({label:"!DOCTYPE",kind:be.Property,documentation:"A preamble for an HTML document.",textEdit:se.replace(B,"!DOCTYPE html>"),insertTextFormat:Re.PlainText})}for(var N=m.scan();N!==U.EOS&&m.getTokenOffset()<=c;){switch(N){case U.StartTagOpen:if(m.getTokenEnd()===c){var D=T(U.StartTag);return n.line===0&&k(c,D),E(c,D)}break;case U.StartTag:if(m.getTokenOffset()<=c&&c<=m.getTokenEnd())return w(m.getTokenOffset(),m.getTokenEnd());f=m.getTokenText();break;case U.AttributeName:if(m.getTokenOffset()<=c&&c<=m.getTokenEnd())return P(m.getTokenOffset(),m.getTokenEnd());b=m.getTokenText();break;case U.DelimiterAssign:if(m.getTokenEnd()===c){var D=T(U.AttributeValue);return g(c,D)}break;case U.AttributeValue:if(m.getTokenOffset()<=c&&c<=m.getTokenEnd())return g(m.getTokenOffset(),m.getTokenEnd());break;case U.Whitespace:if(c<=m.getTokenEnd())switch(m.getScannerState()){case V.AfterOpeningStartTag:var H=m.getTokenOffset(),F=T(U.StartTag);return E(H,F);case V.WithinTag:case V.AfterAttributeName:return P(m.getTokenEnd());case V.BeforeAttributeValue:return g(m.getTokenEnd());case V.AfterOpeningEndTag:return _(m.getTokenOffset()-1,!1);case V.WithinContent:return q()}break;case U.EndTagOpen:if(c<=m.getTokenEnd()){var L=m.getTokenOffset()+1,A=T(U.EndTag);return _(L,!1,A)}break;case U.EndTag:if(c<=m.getTokenEnd())for(var M=m.getTokenOffset()-1;M>=0;){var W=u.charAt(M);if(W==="/")return _(M,!1,m.getTokenEnd());if(!fn(W))break;M--}break;case U.StartTagClose:if(c<=m.getTokenEnd()&&f)return y(m.getTokenEnd(),f);break;case U.Content:if(c<=m.getTokenEnd())return q();break;default:if(c<=m.getTokenEnd())return a;break}N=m.scan()}return a},e.prototype.doQuoteComplete=function(t,n,i,r){var a,s=t.offsetAt(n);if(s<=0)return null;var o=(a=r?.attributeDefaultValue)!==null&&a!==void 0?a:"doublequotes";if(o==="empty")return null;var l=t.getText().charAt(s-1);if(l!=="=")return null;var u=o==="doublequotes"?'"$1"':"'$1'",c=i.findNodeBefore(s);if(c&&c.attributes&&c.start<s&&(!c.endTagStart||c.endTagStart>s))for(var d=we(t.getText(),c.start),m=d.scan();m!==U.EOS&&d.getTokenEnd()<=s;){if(m===U.AttributeName&&d.getTokenEnd()===s-1)return m=d.scan(),m!==U.DelimiterAssign||(m=d.scan(),m===U.Unknown||m===U.AttributeValue)?null:u;m=d.scan()}return null},e.prototype.doTagComplete=function(t,n,i){var r=t.offsetAt(n);if(r<=0)return null;var a=t.getText().charAt(r-1);if(a===">"){var s=i.findNodeBefore(r);if(s&&s.tag&&!dn(s.tag)&&s.start<r&&(!s.endTagStart||s.endTagStart>r))for(var o=we(t.getText(),s.start),l=o.scan();l!==U.EOS&&o.getTokenEnd()<=r;){if(l===U.StartTagClose&&o.getTokenEnd()===r)return"$0</".concat(s.tag,">");l=o.scan()}}else if(a==="/"){for(var s=i.findNodeBefore(r);s&&s.closed&&!(s.endTagStart&&s.endTagStart>r);)s=s.parent;if(s&&s.tag)for(var o=we(t.getText(),s.start),l=o.scan();l!==U.EOS&&o.getTokenEnd()<=r;){if(l===U.EndTagOpen&&o.getTokenEnd()===r)return"".concat(s.tag,">");l=o.scan()}}return null},e.prototype.convertCompletionList=function(t){return this.doesSupportMarkdown()||t.items.forEach(function(n){n.documentation&&typeof n.documentation!="string"&&(n.documentation={kind:"plaintext",value:n.documentation.value})}),t},e.prototype.doesSupportMarkdown=function(){var t,n,i;if(!mn(this.supportsMarkdown)){if(!mn(this.lsOptions.clientCapabilities))return this.supportsMarkdown=!0,this.supportsMarkdown;var r=(i=(n=(t=this.lsOptions.clientCapabilities.textDocument)===null||t===void 0?void 0:t.completion)===null||n===void 0?void 0:n.completionItem)===null||i===void 0?void 0:i.documentationFormat;this.supportsMarkdown=Array.isArray(r)&&r.indexOf(Ee.Markdown)!==-1}return this.supportsMarkdown},e}();function Tu(e){return/^["']*$/.test(e)}function fn(e){return/^\s*$/.test(e)}function es(e,t,n,i){for(var r=we(e,t,n),a=r.scan();a===U.Whitespace;)a=r.scan();return a===i}function ku(e,t,n){for(;t>n&&!fn(e[t-1]);)t--;return t}function Au(e,t,n){for(;t<n&&!fn(e[t]);)t++;return t}var Su=Kn(),Lu=function(){function e(t,n){this.lsOptions=t,this.dataManager=n}return e.prototype.doHover=function(t,n,i,r){var a=this.convertContents.bind(this),s=this.doesSupportMarkdown(),o=t.offsetAt(n),l=i.findNodeAt(o),u=t.getText();if(!l||!l.tag)return null;var c=this.dataManager.getDataProviders().filter(function(k){return k.isApplicable(t.languageId)});function d(k,N,D){for(var H=function(W){var I=null;if(W.provideTags().forEach(function(z){if(z.name.toLowerCase()===k.toLowerCase()){var B=tt(z,r,s);B||(B={kind:s?"markdown":"plaintext",value:""}),I={contents:B,range:N}}}),I)return I.contents=a(I.contents),{value:I}},F=0,L=c;F<L.length;F++){var A=L[F],M=H(A);if(typeof M=="object")return M.value}return null}function m(k,N,D){for(var H=function(W){var I=null;if(W.provideAttributes(k).forEach(function(z){if(N===z.name&&z.description){var B=tt(z,r,s);B?I={contents:B,range:D}:I=null}}),I)return I.contents=a(I.contents),{value:I}},F=0,L=c;F<L.length;F++){var A=L[F],M=H(A);if(typeof M=="object")return M.value}return null}function f(k,N,D,H){for(var F=function(I){var z=null;if(I.provideValues(k,N).forEach(function(B){if(D===B.name&&B.description){var X=tt(B,r,s);X?z={contents:X,range:H}:z=null}}),z)return z.contents=a(z.contents),{value:z}},L=0,A=c;L<A.length;L++){var M=A[L],W=F(M);if(typeof W=="object")return W.value}return null}function b(k,N){var D=x(k);for(var H in zt){var F=null,L="&"+H;if(D===L){var A=zt[H].charCodeAt(0).toString(16).toUpperCase(),M="U+";if(A.length<4)for(var W=4-A.length,I=0;I<W;)M+="0",I+=1;M+=A;var z=Su("entity.propose","Character entity representing '".concat(zt[H],"', unicode equivalent '").concat(M,"'"));z?F={contents:z,range:N}:F=null}if(F)return F.contents=a(F.contents),F}return null}function p(k,N){for(var D=we(t.getText(),N),H=D.scan();H!==U.EOS&&(D.getTokenEnd()<o||D.getTokenEnd()===o&&H!==k);)H=D.scan();return H===k&&o<=D.getTokenEnd()?{start:t.positionAt(D.getTokenOffset()),end:t.positionAt(D.getTokenEnd())}:null}function w(){for(var k=o-1,N=n.character;k>=0&&Ht(u,k);)k--,N--;for(var D=k+1,H=N;Ht(u,D);)D++,H++;if(k>=0&&u[k]==="&"){var F=null;return u[D]===";"?F=Y.create(ce.create(n.line,N),ce.create(n.line,H+1)):F=Y.create(ce.create(n.line,N),ce.create(n.line,H)),F}return null}function x(k){for(var N=o-1,D="&";N>=0&&Ht(k,N);)N--;for(N=N+1;Ht(k,N);)D+=k[N],N+=1;return D+=";",D}if(l.endTagStart&&o>=l.endTagStart){var _=p(U.EndTag,l.endTagStart);return _?d(l.tag,_):null}var y=p(U.StartTag,l.start);if(y)return d(l.tag,y);var E=p(U.AttributeName,l.start);if(E){var R=l.tag,P=t.getText(E);return m(R,P,E)}var v=w();if(v)return b(u,v);function g(k,N){for(var D=we(t.getText(),k),H=D.scan(),F=void 0;H!==U.EOS&&D.getTokenEnd()<=N;)H=D.scan(),H===U.AttributeName&&(F=D.getTokenText());return F}var T=p(U.AttributeValue,l.start);if(T){var R=l.tag,q=Cu(t.getText(T)),S=g(l.start,t.offsetAt(T.start));if(S)return f(R,S,q,T)}return null},e.prototype.convertContents=function(t){if(!this.doesSupportMarkdown()){if(typeof t=="string")return t;if("kind"in t)return{kind:"plaintext",value:t.value};if(Array.isArray(t))t.map(function(n){return typeof n=="string"?n:n.value});else return t.value}return t},e.prototype.doesSupportMarkdown=function(){var t,n,i;if(!mn(this.supportsMarkdown)){if(!mn(this.lsOptions.clientCapabilities))return this.supportsMarkdown=!0,this.supportsMarkdown;var r=(i=(n=(t=this.lsOptions.clientCapabilities)===null||t===void 0?void 0:t.textDocument)===null||n===void 0?void 0:n.hover)===null||i===void 0?void 0:i.contentFormat;this.supportsMarkdown=Array.isArray(r)&&r.indexOf(Ee.Markdown)!==-1}return this.supportsMarkdown},e}();function Cu(e){return e.length<=1?e.replace(/['"]/,""):((e[0]==="'"||e[0]==='"')&&(e=e.slice(1)),(e[e.length-1]==="'"||e[e.length-1]==='"')&&(e=e.slice(0,-1)),e)}function Eu(e,t){return e}var ts;(function(){var e=[,,function(r){function a(l){this.__parent=l,this.__character_count=0,this.__indent_count=-1,this.__alignment_count=0,this.__wrap_point_index=0,this.__wrap_point_character_count=0,this.__wrap_point_indent_count=-1,this.__wrap_point_alignment_count=0,this.__items=[]}a.prototype.clone_empty=function(){var l=new a(this.__parent);return l.set_indent(this.__indent_count,this.__alignment_count),l},a.prototype.item=function(l){return l<0?this.__items[this.__items.length+l]:this.__items[l]},a.prototype.has_match=function(l){for(var u=this.__items.length-1;u>=0;u--)if(this.__items[u].match(l))return!0;return!1},a.prototype.set_indent=function(l,u){this.is_empty()&&(this.__indent_count=l||0,this.__alignment_count=u||0,this.__character_count=this.__parent.get_indent_size(this.__indent_count,this.__alignment_count))},a.prototype._set_wrap_point=function(){this.__parent.wrap_line_length&&(this.__wrap_point_index=this.__items.length,this.__wrap_point_character_count=this.__character_count,this.__wrap_point_indent_count=this.__parent.next_line.__indent_count,this.__wrap_point_alignment_count=this.__parent.next_line.__alignment_count)},a.prototype._should_wrap=function(){return this.__wrap_point_index&&this.__character_count>this.__parent.wrap_line_length&&this.__wrap_point_character_count>this.__parent.next_line.__character_count},a.prototype._allow_wrap=function(){if(this._should_wrap()){this.__parent.add_new_line();var l=this.__parent.current_line;return l.set_indent(this.__wrap_point_indent_count,this.__wrap_point_alignment_count),l.__items=this.__items.slice(this.__wrap_point_index),this.__items=this.__items.slice(0,this.__wrap_point_index),l.__character_count+=this.__character_count-this.__wrap_point_character_count,this.__character_count=this.__wrap_point_character_count,l.__items[0]===" "&&(l.__items.splice(0,1),l.__character_count-=1),!0}return!1},a.prototype.is_empty=function(){return this.__items.length===0},a.prototype.last=function(){return this.is_empty()?null:this.__items[this.__items.length-1]},a.prototype.push=function(l){this.__items.push(l);var u=l.lastIndexOf(`
`);u!==-1?this.__character_count=l.length-u:this.__character_count+=l.length},a.prototype.pop=function(){var l=null;return this.is_empty()||(l=this.__items.pop(),this.__character_count-=l.length),l},a.prototype._remove_indent=function(){this.__indent_count>0&&(this.__indent_count-=1,this.__character_count-=this.__parent.indent_size)},a.prototype._remove_wrap_indent=function(){this.__wrap_point_indent_count>0&&(this.__wrap_point_indent_count-=1)},a.prototype.trim=function(){for(;this.last()===" ";)this.__items.pop(),this.__character_count-=1},a.prototype.toString=function(){var l="";return this.is_empty()?this.__parent.indent_empty_lines&&(l=this.__parent.get_indent_string(this.__indent_count)):(l=this.__parent.get_indent_string(this.__indent_count,this.__alignment_count),l+=this.__items.join("")),l};function s(l,u){this.__cache=[""],this.__indent_size=l.indent_size,this.__indent_string=l.indent_char,l.indent_with_tabs||(this.__indent_string=new Array(l.indent_size+1).join(l.indent_char)),u=u||"",l.indent_level>0&&(u=new Array(l.indent_level+1).join(this.__indent_string)),this.__base_string=u,this.__base_string_length=u.length}s.prototype.get_indent_size=function(l,u){var c=this.__base_string_length;return u=u||0,l<0&&(c=0),c+=l*this.__indent_size,c+=u,c},s.prototype.get_indent_string=function(l,u){var c=this.__base_string;return u=u||0,l<0&&(l=0,c=""),u+=l*this.__indent_size,this.__ensure_cache(u),c+=this.__cache[u],c},s.prototype.__ensure_cache=function(l){for(;l>=this.__cache.length;)this.__add_column()},s.prototype.__add_column=function(){var l=this.__cache.length,u=0,c="";this.__indent_size&&l>=this.__indent_size&&(u=Math.floor(l/this.__indent_size),l-=u*this.__indent_size,c=new Array(u+1).join(this.__indent_string)),l&&(c+=new Array(l+1).join(" ")),this.__cache.push(c)};function o(l,u){this.__indent_cache=new s(l,u),this.raw=!1,this._end_with_newline=l.end_with_newline,this.indent_size=l.indent_size,this.wrap_line_length=l.wrap_line_length,this.indent_empty_lines=l.indent_empty_lines,this.__lines=[],this.previous_line=null,this.current_line=null,this.next_line=new a(this),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1,this.__add_outputline()}o.prototype.__add_outputline=function(){this.previous_line=this.current_line,this.current_line=this.next_line.clone_empty(),this.__lines.push(this.current_line)},o.prototype.get_line_number=function(){return this.__lines.length},o.prototype.get_indent_string=function(l,u){return this.__indent_cache.get_indent_string(l,u)},o.prototype.get_indent_size=function(l,u){return this.__indent_cache.get_indent_size(l,u)},o.prototype.is_empty=function(){return!this.previous_line&&this.current_line.is_empty()},o.prototype.add_new_line=function(l){return this.is_empty()||!l&&this.just_added_newline()?!1:(this.raw||this.__add_outputline(),!0)},o.prototype.get_code=function(l){this.trim(!0);var u=this.current_line.pop();u&&(u[u.length-1]===`
`&&(u=u.replace(/\n+$/g,"")),this.current_line.push(u)),this._end_with_newline&&this.__add_outputline();var c=this.__lines.join(`
`);return l!==`
`&&(c=c.replace(/[\n]/g,l)),c},o.prototype.set_wrap_point=function(){this.current_line._set_wrap_point()},o.prototype.set_indent=function(l,u){return l=l||0,u=u||0,this.next_line.set_indent(l,u),this.__lines.length>1?(this.current_line.set_indent(l,u),!0):(this.current_line.set_indent(),!1)},o.prototype.add_raw_token=function(l){for(var u=0;u<l.newlines;u++)this.__add_outputline();this.current_line.set_indent(-1),this.current_line.push(l.whitespace_before),this.current_line.push(l.text),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1},o.prototype.add_token=function(l){this.__add_space_before_token(),this.current_line.push(l),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=this.current_line._allow_wrap()},o.prototype.__add_space_before_token=function(){this.space_before_token&&!this.just_added_newline()&&(this.non_breaking_space||this.set_wrap_point(),this.current_line.push(" "))},o.prototype.remove_indent=function(l){for(var u=this.__lines.length;l<u;)this.__lines[l]._remove_indent(),l++;this.current_line._remove_wrap_indent()},o.prototype.trim=function(l){for(l=l===void 0?!1:l,this.current_line.trim();l&&this.__lines.length>1&&this.current_line.is_empty();)this.__lines.pop(),this.current_line=this.__lines[this.__lines.length-1],this.current_line.trim();this.previous_line=this.__lines.length>1?this.__lines[this.__lines.length-2]:null},o.prototype.just_added_newline=function(){return this.current_line.is_empty()},o.prototype.just_added_blankline=function(){return this.is_empty()||this.current_line.is_empty()&&this.previous_line.is_empty()},o.prototype.ensure_empty_line_above=function(l,u){for(var c=this.__lines.length-2;c>=0;){var d=this.__lines[c];if(d.is_empty())break;if(d.item(0).indexOf(l)!==0&&d.item(-1)!==u){this.__lines.splice(c+1,0,new a(this)),this.previous_line=this.__lines[this.__lines.length-2];break}c--}},r.exports.Output=o},,,,function(r){function a(l,u){this.raw_options=s(l,u),this.disabled=this._get_boolean("disabled"),this.eol=this._get_characters("eol","auto"),this.end_with_newline=this._get_boolean("end_with_newline"),this.indent_size=this._get_number("indent_size",4),this.indent_char=this._get_characters("indent_char"," "),this.indent_level=this._get_number("indent_level"),this.preserve_newlines=this._get_boolean("preserve_newlines",!0),this.max_preserve_newlines=this._get_number("max_preserve_newlines",32786),this.preserve_newlines||(this.max_preserve_newlines=0),this.indent_with_tabs=this._get_boolean("indent_with_tabs",this.indent_char==="	"),this.indent_with_tabs&&(this.indent_char="	",this.indent_size===1&&(this.indent_size=4)),this.wrap_line_length=this._get_number("wrap_line_length",this._get_number("max_char")),this.indent_empty_lines=this._get_boolean("indent_empty_lines"),this.templating=this._get_selection_list("templating",["auto","none","django","erb","handlebars","php","smarty"],["auto"])}a.prototype._get_array=function(l,u){var c=this.raw_options[l],d=u||[];return typeof c=="object"?c!==null&&typeof c.concat=="function"&&(d=c.concat()):typeof c=="string"&&(d=c.split(/[^a-zA-Z0-9_\/\-]+/)),d},a.prototype._get_boolean=function(l,u){var c=this.raw_options[l],d=c===void 0?!!u:!!c;return d},a.prototype._get_characters=function(l,u){var c=this.raw_options[l],d=u||"";return typeof c=="string"&&(d=c.replace(/\\r/,"\r").replace(/\\n/,`
`).replace(/\\t/,"	")),d},a.prototype._get_number=function(l,u){var c=this.raw_options[l];u=parseInt(u,10),isNaN(u)&&(u=0);var d=parseInt(c,10);return isNaN(d)&&(d=u),d},a.prototype._get_selection=function(l,u,c){var d=this._get_selection_list(l,u,c);if(d.length!==1)throw new Error("Invalid Option Value: The option '"+l+`' can only be one of the following values:
`+u+`
You passed in: '`+this.raw_options[l]+"'");return d[0]},a.prototype._get_selection_list=function(l,u,c){if(!u||u.length===0)throw new Error("Selection list cannot be empty.");if(c=c||[u[0]],!this._is_valid_selection(c,u))throw new Error("Invalid Default Value!");var d=this._get_array(l,c);if(!this._is_valid_selection(d,u))throw new Error("Invalid Option Value: The option '"+l+`' can contain only the following values:
`+u+`
You passed in: '`+this.raw_options[l]+"'");return d},a.prototype._is_valid_selection=function(l,u){return l.length&&u.length&&!l.some(function(c){return u.indexOf(c)===-1})};function s(l,u){var c={};l=o(l);var d;for(d in l)d!==u&&(c[d]=l[d]);if(u&&l[u])for(d in l[u])c[d]=l[u][d];return c}function o(l){var u={},c;for(c in l){var d=c.replace(/-/g,"_");u[d]=l[c]}return u}r.exports.Options=a,r.exports.normalizeOpts=o,r.exports.mergeOpts=s},,function(r){var a=RegExp.prototype.hasOwnProperty("sticky");function s(o){this.__input=o||"",this.__input_length=this.__input.length,this.__position=0}s.prototype.restart=function(){this.__position=0},s.prototype.back=function(){this.__position>0&&(this.__position-=1)},s.prototype.hasNext=function(){return this.__position<this.__input_length},s.prototype.next=function(){var o=null;return this.hasNext()&&(o=this.__input.charAt(this.__position),this.__position+=1),o},s.prototype.peek=function(o){var l=null;return o=o||0,o+=this.__position,o>=0&&o<this.__input_length&&(l=this.__input.charAt(o)),l},s.prototype.__match=function(o,l){o.lastIndex=l;var u=o.exec(this.__input);return u&&!(a&&o.sticky)&&u.index!==l&&(u=null),u},s.prototype.test=function(o,l){return l=l||0,l+=this.__position,l>=0&&l<this.__input_length?!!this.__match(o,l):!1},s.prototype.testChar=function(o,l){var u=this.peek(l);return o.lastIndex=0,u!==null&&o.test(u)},s.prototype.match=function(o){var l=this.__match(o,this.__position);return l?this.__position+=l[0].length:l=null,l},s.prototype.read=function(o,l,u){var c="",d;return o&&(d=this.match(o),d&&(c+=d[0])),l&&(d||!o)&&(c+=this.readUntil(l,u)),c},s.prototype.readUntil=function(o,l){var u="",c=this.__position;o.lastIndex=this.__position;var d=o.exec(this.__input);return d?(c=d.index,l&&(c+=d[0].length)):c=this.__input_length,u=this.__input.substring(this.__position,c),this.__position=c,u},s.prototype.readUntilAfter=function(o){return this.readUntil(o,!0)},s.prototype.get_regexp=function(o,l){var u=null,c="g";return l&&a&&(c="y"),typeof o=="string"&&o!==""?u=new RegExp(o,c):o&&(u=new RegExp(o.source,c)),u},s.prototype.get_literal_regexp=function(o){return RegExp(o.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"))},s.prototype.peekUntilAfter=function(o){var l=this.__position,u=this.readUntilAfter(o);return this.__position=l,u},s.prototype.lookBack=function(o){var l=this.__position-1;return l>=o.length&&this.__input.substring(l-o.length,l).toLowerCase()===o},r.exports.InputScanner=s},,,,,function(r){function a(s,o){s=typeof s=="string"?s:s.source,o=typeof o=="string"?o:o.source,this.__directives_block_pattern=new RegExp(s+/ beautify( \w+[:]\w+)+ /.source+o,"g"),this.__directive_pattern=/ (\w+)[:](\w+)/g,this.__directives_end_ignore_pattern=new RegExp(s+/\sbeautify\signore:end\s/.source+o,"g")}a.prototype.get_directives=function(s){if(!s.match(this.__directives_block_pattern))return null;var o={};this.__directive_pattern.lastIndex=0;for(var l=this.__directive_pattern.exec(s);l;)o[l[1]]=l[2],l=this.__directive_pattern.exec(s);return o},a.prototype.readIgnored=function(s){return s.readUntilAfter(this.__directives_end_ignore_pattern)},r.exports.Directives=a},,function(r,a,s){var o=s(16).Beautifier,l=s(17).Options;function u(c,d){var m=new o(c,d);return m.beautify()}r.exports=u,r.exports.defaultOptions=function(){return new l}},function(r,a,s){var o=s(17).Options,l=s(2).Output,u=s(8).InputScanner,c=s(13).Directives,d=new c(/\/\*/,/\*\//),m=/\r\n|[\r\n]/,f=/\r\n|[\r\n]/g,b=/\s/,p=/(?:\s|\n)+/g,w=/\/\*(?:[\s\S]*?)((?:\*\/)|$)/g,x=/\/\/(?:[^\n\r\u2028\u2029]*)/g;function _(y,E){this._source_text=y||"",this._options=new o(E),this._ch=null,this._input=null,this.NESTED_AT_RULE={"@page":!0,"@font-face":!0,"@keyframes":!0,"@media":!0,"@supports":!0,"@document":!0},this.CONDITIONAL_GROUP_RULE={"@media":!0,"@supports":!0,"@document":!0}}_.prototype.eatString=function(y){var E="";for(this._ch=this._input.next();this._ch;){if(E+=this._ch,this._ch==="\\")E+=this._input.next();else if(y.indexOf(this._ch)!==-1||this._ch===`
`)break;this._ch=this._input.next()}return E},_.prototype.eatWhitespace=function(y){for(var E=b.test(this._input.peek()),R=0;b.test(this._input.peek());)this._ch=this._input.next(),y&&this._ch===`
`&&(R===0||R<this._options.max_preserve_newlines)&&(R++,this._output.add_new_line(!0));return E},_.prototype.foundNestedPseudoClass=function(){for(var y=0,E=1,R=this._input.peek(E);R;){if(R==="{")return!0;if(R==="(")y+=1;else if(R===")"){if(y===0)return!1;y-=1}else if(R===";"||R==="}")return!1;E++,R=this._input.peek(E)}return!1},_.prototype.print_string=function(y){this._output.set_indent(this._indentLevel),this._output.non_breaking_space=!0,this._output.add_token(y)},_.prototype.preserveSingleSpace=function(y){y&&(this._output.space_before_token=!0)},_.prototype.indent=function(){this._indentLevel++},_.prototype.outdent=function(){this._indentLevel>0&&this._indentLevel--},_.prototype.beautify=function(){if(this._options.disabled)return this._source_text;var y=this._source_text,E=this._options.eol;E==="auto"&&(E=`
`,y&&m.test(y||"")&&(E=y.match(m)[0])),y=y.replace(f,`
`);var R=y.match(/^[\t ]*/)[0];this._output=new l(this._options,R),this._input=new u(y),this._indentLevel=0,this._nestedLevel=0,this._ch=null;for(var P=0,v=!1,g=!1,T=!1,q=!1,S=!1,k=this._ch,N,D,H;N=this._input.read(p),D=N!=="",H=k,this._ch=this._input.next(),this._ch==="\\"&&this._input.hasNext()&&(this._ch+=this._input.next()),k=this._ch,this._ch;)if(this._ch==="/"&&this._input.peek()==="*"){this._output.add_new_line(),this._input.back();var F=this._input.read(w),L=d.get_directives(F);L&&L.ignore==="start"&&(F+=d.readIgnored(this._input)),this.print_string(F),this.eatWhitespace(!0),this._output.add_new_line()}else if(this._ch==="/"&&this._input.peek()==="/")this._output.space_before_token=!0,this._input.back(),this.print_string(this._input.read(x)),this.eatWhitespace(!0);else if(this._ch==="@")if(this.preserveSingleSpace(D),this._input.peek()==="{")this.print_string(this._ch+this.eatString("}"));else{this.print_string(this._ch);var A=this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);A.match(/[ :]$/)&&(A=this.eatString(": ").replace(/\s$/,""),this.print_string(A),this._output.space_before_token=!0),A=A.replace(/\s$/,""),A==="extend"?q=!0:A==="import"&&(S=!0),A in this.NESTED_AT_RULE?(this._nestedLevel+=1,A in this.CONDITIONAL_GROUP_RULE&&(T=!0)):!v&&P===0&&A.indexOf(":")!==-1&&(g=!0,this.indent())}else this._ch==="#"&&this._input.peek()==="{"?(this.preserveSingleSpace(D),this.print_string(this._ch+this.eatString("}"))):this._ch==="{"?(g&&(g=!1,this.outdent()),T?(T=!1,v=this._indentLevel>=this._nestedLevel):v=this._indentLevel>=this._nestedLevel-1,this._options.newline_between_rules&&v&&this._output.previous_line&&this._output.previous_line.item(-1)!=="{"&&this._output.ensure_empty_line_above("/",","),this._output.space_before_token=!0,this._options.brace_style==="expand"?(this._output.add_new_line(),this.print_string(this._ch),this.indent(),this._output.set_indent(this._indentLevel)):(this.indent(),this.print_string(this._ch)),this.eatWhitespace(!0),this._output.add_new_line()):this._ch==="}"?(this.outdent(),this._output.add_new_line(),H==="{"&&this._output.trim(!0),S=!1,q=!1,g&&(this.outdent(),g=!1),this.print_string(this._ch),v=!1,this._nestedLevel&&this._nestedLevel--,this.eatWhitespace(!0),this._output.add_new_line(),this._options.newline_between_rules&&!this._output.just_added_blankline()&&this._input.peek()!=="}"&&this._output.add_new_line(!0)):this._ch===":"?(v||T)&&!(this._input.lookBack("&")||this.foundNestedPseudoClass())&&!this._input.lookBack("(")&&!q&&P===0?(this.print_string(":"),g||(g=!0,this._output.space_before_token=!0,this.eatWhitespace(!0),this.indent())):(this._input.lookBack(" ")&&(this._output.space_before_token=!0),this._input.peek()===":"?(this._ch=this._input.next(),this.print_string("::")):this.print_string(":")):this._ch==='"'||this._ch==="'"?(this.preserveSingleSpace(D),this.print_string(this._ch+this.eatString(this._ch)),this.eatWhitespace(!0)):this._ch===";"?P===0?(g&&(this.outdent(),g=!1),q=!1,S=!1,this.print_string(this._ch),this.eatWhitespace(!0),this._input.peek()!=="/"&&this._output.add_new_line()):(this.print_string(this._ch),this.eatWhitespace(!0),this._output.space_before_token=!0):this._ch==="("?this._input.lookBack("url")?(this.print_string(this._ch),this.eatWhitespace(),P++,this.indent(),this._ch=this._input.next(),this._ch===")"||this._ch==='"'||this._ch==="'"?this._input.back():this._ch&&(this.print_string(this._ch+this.eatString(")")),P&&(P--,this.outdent()))):(this.preserveSingleSpace(D),this.print_string(this._ch),this.eatWhitespace(),P++,this.indent()):this._ch===")"?(P&&(P--,this.outdent()),this.print_string(this._ch)):this._ch===","?(this.print_string(this._ch),this.eatWhitespace(!0),this._options.selector_separator_newline&&!g&&P===0&&!S&&!q?this._output.add_new_line():this._output.space_before_token=!0):(this._ch===">"||this._ch==="+"||this._ch==="~")&&!g&&P===0?this._options.space_around_combinator?(this._output.space_before_token=!0,this.print_string(this._ch),this._output.space_before_token=!0):(this.print_string(this._ch),this.eatWhitespace(),this._ch&&b.test(this._ch)&&(this._ch="")):this._ch==="]"?this.print_string(this._ch):this._ch==="["?(this.preserveSingleSpace(D),this.print_string(this._ch)):this._ch==="="?(this.eatWhitespace(),this.print_string("="),b.test(this._ch)&&(this._ch="")):this._ch==="!"&&!this._input.lookBack("\\")?(this.print_string(" "),this.print_string(this._ch)):(this.preserveSingleSpace(D),this.print_string(this._ch));var M=this._output.get_code(E);return M},r.exports.Beautifier=_},function(r,a,s){var o=s(6).Options;function l(u){o.call(this,u,"css"),this.selector_separator_newline=this._get_boolean("selector_separator_newline",!0),this.newline_between_rules=this._get_boolean("newline_between_rules",!0);var c=this._get_boolean("space_around_selector_separator");this.space_around_combinator=this._get_boolean("space_around_combinator")||c;var d=this._get_selection_list("brace_style",["collapse","expand","end-expand","none","preserve-inline"]);this.brace_style="collapse";for(var m=0;m<d.length;m++)d[m]!=="expand"?this.brace_style="collapse":this.brace_style=d[m]}l.prototype=new o,r.exports.Options=l}],t={};function n(r){var a=t[r];if(a!==void 0)return a.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}var i=n(15);ts=i})();var Ru=ts,ns;(function(){var e=[,,function(r){function a(l){this.__parent=l,this.__character_count=0,this.__indent_count=-1,this.__alignment_count=0,this.__wrap_point_index=0,this.__wrap_point_character_count=0,this.__wrap_point_indent_count=-1,this.__wrap_point_alignment_count=0,this.__items=[]}a.prototype.clone_empty=function(){var l=new a(this.__parent);return l.set_indent(this.__indent_count,this.__alignment_count),l},a.prototype.item=function(l){return l<0?this.__items[this.__items.length+l]:this.__items[l]},a.prototype.has_match=function(l){for(var u=this.__items.length-1;u>=0;u--)if(this.__items[u].match(l))return!0;return!1},a.prototype.set_indent=function(l,u){this.is_empty()&&(this.__indent_count=l||0,this.__alignment_count=u||0,this.__character_count=this.__parent.get_indent_size(this.__indent_count,this.__alignment_count))},a.prototype._set_wrap_point=function(){this.__parent.wrap_line_length&&(this.__wrap_point_index=this.__items.length,this.__wrap_point_character_count=this.__character_count,this.__wrap_point_indent_count=this.__parent.next_line.__indent_count,this.__wrap_point_alignment_count=this.__parent.next_line.__alignment_count)},a.prototype._should_wrap=function(){return this.__wrap_point_index&&this.__character_count>this.__parent.wrap_line_length&&this.__wrap_point_character_count>this.__parent.next_line.__character_count},a.prototype._allow_wrap=function(){if(this._should_wrap()){this.__parent.add_new_line();var l=this.__parent.current_line;return l.set_indent(this.__wrap_point_indent_count,this.__wrap_point_alignment_count),l.__items=this.__items.slice(this.__wrap_point_index),this.__items=this.__items.slice(0,this.__wrap_point_index),l.__character_count+=this.__character_count-this.__wrap_point_character_count,this.__character_count=this.__wrap_point_character_count,l.__items[0]===" "&&(l.__items.splice(0,1),l.__character_count-=1),!0}return!1},a.prototype.is_empty=function(){return this.__items.length===0},a.prototype.last=function(){return this.is_empty()?null:this.__items[this.__items.length-1]},a.prototype.push=function(l){this.__items.push(l);var u=l.lastIndexOf(`
`);u!==-1?this.__character_count=l.length-u:this.__character_count+=l.length},a.prototype.pop=function(){var l=null;return this.is_empty()||(l=this.__items.pop(),this.__character_count-=l.length),l},a.prototype._remove_indent=function(){this.__indent_count>0&&(this.__indent_count-=1,this.__character_count-=this.__parent.indent_size)},a.prototype._remove_wrap_indent=function(){this.__wrap_point_indent_count>0&&(this.__wrap_point_indent_count-=1)},a.prototype.trim=function(){for(;this.last()===" ";)this.__items.pop(),this.__character_count-=1},a.prototype.toString=function(){var l="";return this.is_empty()?this.__parent.indent_empty_lines&&(l=this.__parent.get_indent_string(this.__indent_count)):(l=this.__parent.get_indent_string(this.__indent_count,this.__alignment_count),l+=this.__items.join("")),l};function s(l,u){this.__cache=[""],this.__indent_size=l.indent_size,this.__indent_string=l.indent_char,l.indent_with_tabs||(this.__indent_string=new Array(l.indent_size+1).join(l.indent_char)),u=u||"",l.indent_level>0&&(u=new Array(l.indent_level+1).join(this.__indent_string)),this.__base_string=u,this.__base_string_length=u.length}s.prototype.get_indent_size=function(l,u){var c=this.__base_string_length;return u=u||0,l<0&&(c=0),c+=l*this.__indent_size,c+=u,c},s.prototype.get_indent_string=function(l,u){var c=this.__base_string;return u=u||0,l<0&&(l=0,c=""),u+=l*this.__indent_size,this.__ensure_cache(u),c+=this.__cache[u],c},s.prototype.__ensure_cache=function(l){for(;l>=this.__cache.length;)this.__add_column()},s.prototype.__add_column=function(){var l=this.__cache.length,u=0,c="";this.__indent_size&&l>=this.__indent_size&&(u=Math.floor(l/this.__indent_size),l-=u*this.__indent_size,c=new Array(u+1).join(this.__indent_string)),l&&(c+=new Array(l+1).join(" ")),this.__cache.push(c)};function o(l,u){this.__indent_cache=new s(l,u),this.raw=!1,this._end_with_newline=l.end_with_newline,this.indent_size=l.indent_size,this.wrap_line_length=l.wrap_line_length,this.indent_empty_lines=l.indent_empty_lines,this.__lines=[],this.previous_line=null,this.current_line=null,this.next_line=new a(this),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1,this.__add_outputline()}o.prototype.__add_outputline=function(){this.previous_line=this.current_line,this.current_line=this.next_line.clone_empty(),this.__lines.push(this.current_line)},o.prototype.get_line_number=function(){return this.__lines.length},o.prototype.get_indent_string=function(l,u){return this.__indent_cache.get_indent_string(l,u)},o.prototype.get_indent_size=function(l,u){return this.__indent_cache.get_indent_size(l,u)},o.prototype.is_empty=function(){return!this.previous_line&&this.current_line.is_empty()},o.prototype.add_new_line=function(l){return this.is_empty()||!l&&this.just_added_newline()?!1:(this.raw||this.__add_outputline(),!0)},o.prototype.get_code=function(l){this.trim(!0);var u=this.current_line.pop();u&&(u[u.length-1]===`
`&&(u=u.replace(/\n+$/g,"")),this.current_line.push(u)),this._end_with_newline&&this.__add_outputline();var c=this.__lines.join(`
`);return l!==`
`&&(c=c.replace(/[\n]/g,l)),c},o.prototype.set_wrap_point=function(){this.current_line._set_wrap_point()},o.prototype.set_indent=function(l,u){return l=l||0,u=u||0,this.next_line.set_indent(l,u),this.__lines.length>1?(this.current_line.set_indent(l,u),!0):(this.current_line.set_indent(),!1)},o.prototype.add_raw_token=function(l){for(var u=0;u<l.newlines;u++)this.__add_outputline();this.current_line.set_indent(-1),this.current_line.push(l.whitespace_before),this.current_line.push(l.text),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1},o.prototype.add_token=function(l){this.__add_space_before_token(),this.current_line.push(l),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=this.current_line._allow_wrap()},o.prototype.__add_space_before_token=function(){this.space_before_token&&!this.just_added_newline()&&(this.non_breaking_space||this.set_wrap_point(),this.current_line.push(" "))},o.prototype.remove_indent=function(l){for(var u=this.__lines.length;l<u;)this.__lines[l]._remove_indent(),l++;this.current_line._remove_wrap_indent()},o.prototype.trim=function(l){for(l=l===void 0?!1:l,this.current_line.trim();l&&this.__lines.length>1&&this.current_line.is_empty();)this.__lines.pop(),this.current_line=this.__lines[this.__lines.length-1],this.current_line.trim();this.previous_line=this.__lines.length>1?this.__lines[this.__lines.length-2]:null},o.prototype.just_added_newline=function(){return this.current_line.is_empty()},o.prototype.just_added_blankline=function(){return this.is_empty()||this.current_line.is_empty()&&this.previous_line.is_empty()},o.prototype.ensure_empty_line_above=function(l,u){for(var c=this.__lines.length-2;c>=0;){var d=this.__lines[c];if(d.is_empty())break;if(d.item(0).indexOf(l)!==0&&d.item(-1)!==u){this.__lines.splice(c+1,0,new a(this)),this.previous_line=this.__lines[this.__lines.length-2];break}c--}},r.exports.Output=o},function(r){function a(s,o,l,u){this.type=s,this.text=o,this.comments_before=null,this.newlines=l||0,this.whitespace_before=u||"",this.parent=null,this.next=null,this.previous=null,this.opened=null,this.closed=null,this.directives=null}r.exports.Token=a},,,function(r){function a(l,u){this.raw_options=s(l,u),this.disabled=this._get_boolean("disabled"),this.eol=this._get_characters("eol","auto"),this.end_with_newline=this._get_boolean("end_with_newline"),this.indent_size=this._get_number("indent_size",4),this.indent_char=this._get_characters("indent_char"," "),this.indent_level=this._get_number("indent_level"),this.preserve_newlines=this._get_boolean("preserve_newlines",!0),this.max_preserve_newlines=this._get_number("max_preserve_newlines",32786),this.preserve_newlines||(this.max_preserve_newlines=0),this.indent_with_tabs=this._get_boolean("indent_with_tabs",this.indent_char==="	"),this.indent_with_tabs&&(this.indent_char="	",this.indent_size===1&&(this.indent_size=4)),this.wrap_line_length=this._get_number("wrap_line_length",this._get_number("max_char")),this.indent_empty_lines=this._get_boolean("indent_empty_lines"),this.templating=this._get_selection_list("templating",["auto","none","django","erb","handlebars","php","smarty"],["auto"])}a.prototype._get_array=function(l,u){var c=this.raw_options[l],d=u||[];return typeof c=="object"?c!==null&&typeof c.concat=="function"&&(d=c.concat()):typeof c=="string"&&(d=c.split(/[^a-zA-Z0-9_\/\-]+/)),d},a.prototype._get_boolean=function(l,u){var c=this.raw_options[l],d=c===void 0?!!u:!!c;return d},a.prototype._get_characters=function(l,u){var c=this.raw_options[l],d=u||"";return typeof c=="string"&&(d=c.replace(/\\r/,"\r").replace(/\\n/,`
`).replace(/\\t/,"	")),d},a.prototype._get_number=function(l,u){var c=this.raw_options[l];u=parseInt(u,10),isNaN(u)&&(u=0);var d=parseInt(c,10);return isNaN(d)&&(d=u),d},a.prototype._get_selection=function(l,u,c){var d=this._get_selection_list(l,u,c);if(d.length!==1)throw new Error("Invalid Option Value: The option '"+l+`' can only be one of the following values:
`+u+`
You passed in: '`+this.raw_options[l]+"'");return d[0]},a.prototype._get_selection_list=function(l,u,c){if(!u||u.length===0)throw new Error("Selection list cannot be empty.");if(c=c||[u[0]],!this._is_valid_selection(c,u))throw new Error("Invalid Default Value!");var d=this._get_array(l,c);if(!this._is_valid_selection(d,u))throw new Error("Invalid Option Value: The option '"+l+`' can contain only the following values:
`+u+`
You passed in: '`+this.raw_options[l]+"'");return d},a.prototype._is_valid_selection=function(l,u){return l.length&&u.length&&!l.some(function(c){return u.indexOf(c)===-1})};function s(l,u){var c={};l=o(l);var d;for(d in l)d!==u&&(c[d]=l[d]);if(u&&l[u])for(d in l[u])c[d]=l[u][d];return c}function o(l){var u={},c;for(c in l){var d=c.replace(/-/g,"_");u[d]=l[c]}return u}r.exports.Options=a,r.exports.normalizeOpts=o,r.exports.mergeOpts=s},,function(r){var a=RegExp.prototype.hasOwnProperty("sticky");function s(o){this.__input=o||"",this.__input_length=this.__input.length,this.__position=0}s.prototype.restart=function(){this.__position=0},s.prototype.back=function(){this.__position>0&&(this.__position-=1)},s.prototype.hasNext=function(){return this.__position<this.__input_length},s.prototype.next=function(){var o=null;return this.hasNext()&&(o=this.__input.charAt(this.__position),this.__position+=1),o},s.prototype.peek=function(o){var l=null;return o=o||0,o+=this.__position,o>=0&&o<this.__input_length&&(l=this.__input.charAt(o)),l},s.prototype.__match=function(o,l){o.lastIndex=l;var u=o.exec(this.__input);return u&&!(a&&o.sticky)&&u.index!==l&&(u=null),u},s.prototype.test=function(o,l){return l=l||0,l+=this.__position,l>=0&&l<this.__input_length?!!this.__match(o,l):!1},s.prototype.testChar=function(o,l){var u=this.peek(l);return o.lastIndex=0,u!==null&&o.test(u)},s.prototype.match=function(o){var l=this.__match(o,this.__position);return l?this.__position+=l[0].length:l=null,l},s.prototype.read=function(o,l,u){var c="",d;return o&&(d=this.match(o),d&&(c+=d[0])),l&&(d||!o)&&(c+=this.readUntil(l,u)),c},s.prototype.readUntil=function(o,l){var u="",c=this.__position;o.lastIndex=this.__position;var d=o.exec(this.__input);return d?(c=d.index,l&&(c+=d[0].length)):c=this.__input_length,u=this.__input.substring(this.__position,c),this.__position=c,u},s.prototype.readUntilAfter=function(o){return this.readUntil(o,!0)},s.prototype.get_regexp=function(o,l){var u=null,c="g";return l&&a&&(c="y"),typeof o=="string"&&o!==""?u=new RegExp(o,c):o&&(u=new RegExp(o.source,c)),u},s.prototype.get_literal_regexp=function(o){return RegExp(o.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"))},s.prototype.peekUntilAfter=function(o){var l=this.__position,u=this.readUntilAfter(o);return this.__position=l,u},s.prototype.lookBack=function(o){var l=this.__position-1;return l>=o.length&&this.__input.substring(l-o.length,l).toLowerCase()===o},r.exports.InputScanner=s},function(r,a,s){var o=s(8).InputScanner,l=s(3).Token,u=s(10).TokenStream,c=s(11).WhitespacePattern,d={START:"TK_START",RAW:"TK_RAW",EOF:"TK_EOF"},m=function(f,b){this._input=new o(f),this._options=b||{},this.__tokens=null,this._patterns={},this._patterns.whitespace=new c(this._input)};m.prototype.tokenize=function(){this._input.restart(),this.__tokens=new u,this._reset();for(var f,b=new l(d.START,""),p=null,w=[],x=new u;b.type!==d.EOF;){for(f=this._get_next_token(b,p);this._is_comment(f);)x.add(f),f=this._get_next_token(b,p);x.isEmpty()||(f.comments_before=x,x=new u),f.parent=p,this._is_opening(f)?(w.push(p),p=f):p&&this._is_closing(f,p)&&(f.opened=p,p.closed=f,p=w.pop(),f.parent=p),f.previous=b,b.next=f,this.__tokens.add(f),b=f}return this.__tokens},m.prototype._is_first_token=function(){return this.__tokens.isEmpty()},m.prototype._reset=function(){},m.prototype._get_next_token=function(f,b){this._readWhitespace();var p=this._input.read(/.+/g);return p?this._create_token(d.RAW,p):this._create_token(d.EOF,"")},m.prototype._is_comment=function(f){return!1},m.prototype._is_opening=function(f){return!1},m.prototype._is_closing=function(f,b){return!1},m.prototype._create_token=function(f,b){var p=new l(f,b,this._patterns.whitespace.newline_count,this._patterns.whitespace.whitespace_before_token);return p},m.prototype._readWhitespace=function(){return this._patterns.whitespace.read()},r.exports.Tokenizer=m,r.exports.TOKEN=d},function(r){function a(s){this.__tokens=[],this.__tokens_length=this.__tokens.length,this.__position=0,this.__parent_token=s}a.prototype.restart=function(){this.__position=0},a.prototype.isEmpty=function(){return this.__tokens_length===0},a.prototype.hasNext=function(){return this.__position<this.__tokens_length},a.prototype.next=function(){var s=null;return this.hasNext()&&(s=this.__tokens[this.__position],this.__position+=1),s},a.prototype.peek=function(s){var o=null;return s=s||0,s+=this.__position,s>=0&&s<this.__tokens_length&&(o=this.__tokens[s]),o},a.prototype.add=function(s){this.__parent_token&&(s.parent=this.__parent_token),this.__tokens.push(s),this.__tokens_length+=1},r.exports.TokenStream=a},function(r,a,s){var o=s(12).Pattern;function l(u,c){o.call(this,u,c),c?this._line_regexp=this._input.get_regexp(c._line_regexp):this.__set_whitespace_patterns("",""),this.newline_count=0,this.whitespace_before_token=""}l.prototype=new o,l.prototype.__set_whitespace_patterns=function(u,c){u+="\\t ",c+="\\n\\r",this._match_pattern=this._input.get_regexp("["+u+c+"]+",!0),this._newline_regexp=this._input.get_regexp("\\r\\n|["+c+"]")},l.prototype.read=function(){this.newline_count=0,this.whitespace_before_token="";var u=this._input.read(this._match_pattern);if(u===" ")this.whitespace_before_token=" ";else if(u){var c=this.__split(this._newline_regexp,u);this.newline_count=c.length-1,this.whitespace_before_token=c[this.newline_count]}return u},l.prototype.matching=function(u,c){var d=this._create();return d.__set_whitespace_patterns(u,c),d._update(),d},l.prototype._create=function(){return new l(this._input,this)},l.prototype.__split=function(u,c){u.lastIndex=0;for(var d=0,m=[],f=u.exec(c);f;)m.push(c.substring(d,f.index)),d=f.index+f[0].length,f=u.exec(c);return d<c.length?m.push(c.substring(d,c.length)):m.push(""),m},r.exports.WhitespacePattern=l},function(r){function a(s,o){this._input=s,this._starting_pattern=null,this._match_pattern=null,this._until_pattern=null,this._until_after=!1,o&&(this._starting_pattern=this._input.get_regexp(o._starting_pattern,!0),this._match_pattern=this._input.get_regexp(o._match_pattern,!0),this._until_pattern=this._input.get_regexp(o._until_pattern),this._until_after=o._until_after)}a.prototype.read=function(){var s=this._input.read(this._starting_pattern);return(!this._starting_pattern||s)&&(s+=this._input.read(this._match_pattern,this._until_pattern,this._until_after)),s},a.prototype.read_match=function(){return this._input.match(this._match_pattern)},a.prototype.until_after=function(s){var o=this._create();return o._until_after=!0,o._until_pattern=this._input.get_regexp(s),o._update(),o},a.prototype.until=function(s){var o=this._create();return o._until_after=!1,o._until_pattern=this._input.get_regexp(s),o._update(),o},a.prototype.starting_with=function(s){var o=this._create();return o._starting_pattern=this._input.get_regexp(s,!0),o._update(),o},a.prototype.matching=function(s){var o=this._create();return o._match_pattern=this._input.get_regexp(s,!0),o._update(),o},a.prototype._create=function(){return new a(this._input,this)},a.prototype._update=function(){},r.exports.Pattern=a},function(r){function a(s,o){s=typeof s=="string"?s:s.source,o=typeof o=="string"?o:o.source,this.__directives_block_pattern=new RegExp(s+/ beautify( \w+[:]\w+)+ /.source+o,"g"),this.__directive_pattern=/ (\w+)[:](\w+)/g,this.__directives_end_ignore_pattern=new RegExp(s+/\sbeautify\signore:end\s/.source+o,"g")}a.prototype.get_directives=function(s){if(!s.match(this.__directives_block_pattern))return null;var o={};this.__directive_pattern.lastIndex=0;for(var l=this.__directive_pattern.exec(s);l;)o[l[1]]=l[2],l=this.__directive_pattern.exec(s);return o},a.prototype.readIgnored=function(s){return s.readUntilAfter(this.__directives_end_ignore_pattern)},r.exports.Directives=a},function(r,a,s){var o=s(12).Pattern,l={django:!1,erb:!1,handlebars:!1,php:!1,smarty:!1};function u(c,d){o.call(this,c,d),this.__template_pattern=null,this._disabled=Object.assign({},l),this._excluded=Object.assign({},l),d&&(this.__template_pattern=this._input.get_regexp(d.__template_pattern),this._excluded=Object.assign(this._excluded,d._excluded),this._disabled=Object.assign(this._disabled,d._disabled));var m=new o(c);this.__patterns={handlebars_comment:m.starting_with(/{{!--/).until_after(/--}}/),handlebars_unescaped:m.starting_with(/{{{/).until_after(/}}}/),handlebars:m.starting_with(/{{/).until_after(/}}/),php:m.starting_with(/<\?(?:[= ]|php)/).until_after(/\?>/),erb:m.starting_with(/<%[^%]/).until_after(/[^%]%>/),django:m.starting_with(/{%/).until_after(/%}/),django_value:m.starting_with(/{{/).until_after(/}}/),django_comment:m.starting_with(/{#/).until_after(/#}/),smarty:m.starting_with(/{(?=[^}{\s\n])/).until_after(/[^\s\n]}/),smarty_comment:m.starting_with(/{\*/).until_after(/\*}/),smarty_literal:m.starting_with(/{literal}/).until_after(/{\/literal}/)}}u.prototype=new o,u.prototype._create=function(){return new u(this._input,this)},u.prototype._update=function(){this.__set_templated_pattern()},u.prototype.disable=function(c){var d=this._create();return d._disabled[c]=!0,d._update(),d},u.prototype.read_options=function(c){var d=this._create();for(var m in l)d._disabled[m]=c.templating.indexOf(m)===-1;return d._update(),d},u.prototype.exclude=function(c){var d=this._create();return d._excluded[c]=!0,d._update(),d},u.prototype.read=function(){var c="";this._match_pattern?c=this._input.read(this._starting_pattern):c=this._input.read(this._starting_pattern,this.__template_pattern);for(var d=this._read_template();d;)this._match_pattern?d+=this._input.read(this._match_pattern):d+=this._input.readUntil(this.__template_pattern),c+=d,d=this._read_template();return this._until_after&&(c+=this._input.readUntilAfter(this._until_pattern)),c},u.prototype.__set_templated_pattern=function(){var c=[];this._disabled.php||c.push(this.__patterns.php._starting_pattern.source),this._disabled.handlebars||c.push(this.__patterns.handlebars._starting_pattern.source),this._disabled.erb||c.push(this.__patterns.erb._starting_pattern.source),this._disabled.django||(c.push(this.__patterns.django._starting_pattern.source),c.push(this.__patterns.django_value._starting_pattern.source),c.push(this.__patterns.django_comment._starting_pattern.source)),this._disabled.smarty||c.push(this.__patterns.smarty._starting_pattern.source),this._until_pattern&&c.push(this._until_pattern.source),this.__template_pattern=this._input.get_regexp("(?:"+c.join("|")+")")},u.prototype._read_template=function(){var c="",d=this._input.peek();if(d==="<"){var m=this._input.peek(1);!this._disabled.php&&!this._excluded.php&&m==="?"&&(c=c||this.__patterns.php.read()),!this._disabled.erb&&!this._excluded.erb&&m==="%"&&(c=c||this.__patterns.erb.read())}else d==="{"&&(!this._disabled.handlebars&&!this._excluded.handlebars&&(c=c||this.__patterns.handlebars_comment.read(),c=c||this.__patterns.handlebars_unescaped.read(),c=c||this.__patterns.handlebars.read()),this._disabled.django||(!this._excluded.django&&!this._excluded.handlebars&&(c=c||this.__patterns.django_value.read()),this._excluded.django||(c=c||this.__patterns.django_comment.read(),c=c||this.__patterns.django.read())),this._disabled.smarty||this._disabled.django&&this._disabled.handlebars&&(c=c||this.__patterns.smarty_comment.read(),c=c||this.__patterns.smarty_literal.read(),c=c||this.__patterns.smarty.read()));return c},r.exports.TemplatablePattern=u},,,,function(r,a,s){var o=s(19).Beautifier,l=s(20).Options;function u(c,d,m,f){var b=new o(c,d,m,f);return b.beautify()}r.exports=u,r.exports.defaultOptions=function(){return new l}},function(r,a,s){var o=s(20).Options,l=s(2).Output,u=s(21).Tokenizer,c=s(21).TOKEN,d=/\r\n|[\r\n]/,m=/\r\n|[\r\n]/g,f=function(v,g){this.indent_level=0,this.alignment_size=0,this.max_preserve_newlines=v.max_preserve_newlines,this.preserve_newlines=v.preserve_newlines,this._output=new l(v,g)};f.prototype.current_line_has_match=function(v){return this._output.current_line.has_match(v)},f.prototype.set_space_before_token=function(v,g){this._output.space_before_token=v,this._output.non_breaking_space=g},f.prototype.set_wrap_point=function(){this._output.set_indent(this.indent_level,this.alignment_size),this._output.set_wrap_point()},f.prototype.add_raw_token=function(v){this._output.add_raw_token(v)},f.prototype.print_preserved_newlines=function(v){var g=0;v.type!==c.TEXT&&v.previous.type!==c.TEXT&&(g=v.newlines?1:0),this.preserve_newlines&&(g=v.newlines<this.max_preserve_newlines+1?v.newlines:this.max_preserve_newlines+1);for(var T=0;T<g;T++)this.print_newline(T>0);return g!==0},f.prototype.traverse_whitespace=function(v){return v.whitespace_before||v.newlines?(this.print_preserved_newlines(v)||(this._output.space_before_token=!0),!0):!1},f.prototype.previous_token_wrapped=function(){return this._output.previous_token_wrapped},f.prototype.print_newline=function(v){this._output.add_new_line(v)},f.prototype.print_token=function(v){v.text&&(this._output.set_indent(this.indent_level,this.alignment_size),this._output.add_token(v.text))},f.prototype.indent=function(){this.indent_level++},f.prototype.get_full_indent=function(v){return v=this.indent_level+(v||0),v<1?"":this._output.get_indent_string(v)};var b=function(v){for(var g=null,T=v.next;T.type!==c.EOF&&v.closed!==T;){if(T.type===c.ATTRIBUTE&&T.text==="type"){T.next&&T.next.type===c.EQUALS&&T.next.next&&T.next.next.type===c.VALUE&&(g=T.next.next.text);break}T=T.next}return g},p=function(v,g){var T=null,q=null;return g.closed?(v==="script"?T="text/javascript":v==="style"&&(T="text/css"),T=b(g)||T,T.search("text/css")>-1?q="css":T.search(/module|((text|application|dojo)\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\+)?json|method|aspect))/)>-1?q="javascript":T.search(/(text|application|dojo)\/(x-)?(html)/)>-1?q="html":T.search(/test\/null/)>-1&&(q="null"),q):null};function w(v,g){return g.indexOf(v)!==-1}function x(v,g,T){this.parent=v||null,this.tag=g?g.tag_name:"",this.indent_level=T||0,this.parser_token=g||null}function _(v){this._printer=v,this._current_frame=null}_.prototype.get_parser_token=function(){return this._current_frame?this._current_frame.parser_token:null},_.prototype.record_tag=function(v){var g=new x(this._current_frame,v,this._printer.indent_level);this._current_frame=g},_.prototype._try_pop_frame=function(v){var g=null;return v&&(g=v.parser_token,this._printer.indent_level=v.indent_level,this._current_frame=v.parent),g},_.prototype._get_frame=function(v,g){for(var T=this._current_frame;T&&v.indexOf(T.tag)===-1;){if(g&&g.indexOf(T.tag)!==-1){T=null;break}T=T.parent}return T},_.prototype.try_pop=function(v,g){var T=this._get_frame([v],g);return this._try_pop_frame(T)},_.prototype.indent_to_tag=function(v){var g=this._get_frame(v);g&&(this._printer.indent_level=g.indent_level)};function y(v,g,T,q){this._source_text=v||"",g=g||{},this._js_beautify=T,this._css_beautify=q,this._tag_stack=null;var S=new o(g,"html");this._options=S,this._is_wrap_attributes_force=this._options.wrap_attributes.substr(0,5)==="force",this._is_wrap_attributes_force_expand_multiline=this._options.wrap_attributes==="force-expand-multiline",this._is_wrap_attributes_force_aligned=this._options.wrap_attributes==="force-aligned",this._is_wrap_attributes_aligned_multiple=this._options.wrap_attributes==="aligned-multiple",this._is_wrap_attributes_preserve=this._options.wrap_attributes.substr(0,8)==="preserve",this._is_wrap_attributes_preserve_aligned=this._options.wrap_attributes==="preserve-aligned"}y.prototype.beautify=function(){if(this._options.disabled)return this._source_text;var v=this._source_text,g=this._options.eol;this._options.eol==="auto"&&(g=`
`,v&&d.test(v)&&(g=v.match(d)[0])),v=v.replace(m,`
`);var T=v.match(/^[\t ]*/)[0],q={text:"",type:""},S=new E,k=new f(this._options,T),N=new u(v,this._options).tokenize();this._tag_stack=new _(k);for(var D=null,H=N.next();H.type!==c.EOF;)H.type===c.TAG_OPEN||H.type===c.COMMENT?(D=this._handle_tag_open(k,H,S,q),S=D):H.type===c.ATTRIBUTE||H.type===c.EQUALS||H.type===c.VALUE||H.type===c.TEXT&&!S.tag_complete?D=this._handle_inside_tag(k,H,S,N):H.type===c.TAG_CLOSE?D=this._handle_tag_close(k,H,S):H.type===c.TEXT?D=this._handle_text(k,H,S):k.add_raw_token(H),q=D,H=N.next();var F=k._output.get_code(g);return F},y.prototype._handle_tag_close=function(v,g,T){var q={text:g.text,type:g.type};return v.alignment_size=0,T.tag_complete=!0,v.set_space_before_token(g.newlines||g.whitespace_before!=="",!0),T.is_unformatted?v.add_raw_token(g):(T.tag_start_char==="<"&&(v.set_space_before_token(g.text[0]==="/",!0),this._is_wrap_attributes_force_expand_multiline&&T.has_wrapped_attrs&&v.print_newline(!1)),v.print_token(g)),T.indent_content&&!(T.is_unformatted||T.is_content_unformatted)&&(v.indent(),T.indent_content=!1),!T.is_inline_element&&!(T.is_unformatted||T.is_content_unformatted)&&v.set_wrap_point(),q},y.prototype._handle_inside_tag=function(v,g,T,q){var S=T.has_wrapped_attrs,k={text:g.text,type:g.type};if(v.set_space_before_token(g.newlines||g.whitespace_before!=="",!0),T.is_unformatted)v.add_raw_token(g);else if(T.tag_start_char==="{"&&g.type===c.TEXT)v.print_preserved_newlines(g)?(g.newlines=0,v.add_raw_token(g)):v.print_token(g);else{if(g.type===c.ATTRIBUTE?(v.set_space_before_token(!0),T.attr_count+=1):(g.type===c.EQUALS||g.type===c.VALUE&&g.previous.type===c.EQUALS)&&v.set_space_before_token(!1),g.type===c.ATTRIBUTE&&T.tag_start_char==="<"&&((this._is_wrap_attributes_preserve||this._is_wrap_attributes_preserve_aligned)&&(v.traverse_whitespace(g),S=S||g.newlines!==0),this._is_wrap_attributes_force)){var N=T.attr_count>1;if(this._is_wrap_attributes_force_expand_multiline&&T.attr_count===1){var D=!0,H=0,F;do{if(F=q.peek(H),F.type===c.ATTRIBUTE){D=!1;break}H+=1}while(H<4&&F.type!==c.EOF&&F.type!==c.TAG_CLOSE);N=!D}N&&(v.print_newline(!1),S=!0)}v.print_token(g),S=S||v.previous_token_wrapped(),T.has_wrapped_attrs=S}return k},y.prototype._handle_text=function(v,g,T){var q={text:g.text,type:"TK_CONTENT"};return T.custom_beautifier_name?this._print_custom_beatifier_text(v,g,T):T.is_unformatted||T.is_content_unformatted?v.add_raw_token(g):(v.traverse_whitespace(g),v.print_token(g)),q},y.prototype._print_custom_beatifier_text=function(v,g,T){var q=this;if(g.text!==""){var S=g.text,k,N=1,D="",H="";T.custom_beautifier_name==="javascript"&&typeof this._js_beautify=="function"?k=this._js_beautify:T.custom_beautifier_name==="css"&&typeof this._css_beautify=="function"?k=this._css_beautify:T.custom_beautifier_name==="html"&&(k=function(I,z){var B=new y(I,z,q._js_beautify,q._css_beautify);return B.beautify()}),this._options.indent_scripts==="keep"?N=0:this._options.indent_scripts==="separate"&&(N=-v.indent_level);var F=v.get_full_indent(N);if(S=S.replace(/\n[ \t]*$/,""),T.custom_beautifier_name!=="html"&&S[0]==="<"&&S.match(/^(<!--|<!\[CDATA\[)/)){var L=/^(<!--[^\n]*|<!\[CDATA\[)(\n?)([ \t\n]*)([\s\S]*)(-->|]]>)$/.exec(S);if(!L){v.add_raw_token(g);return}D=F+L[1]+`
`,S=L[4],L[5]&&(H=F+L[5]),S=S.replace(/\n[ \t]*$/,""),(L[2]||L[3].indexOf(`
`)!==-1)&&(L=L[3].match(/[ \t]+$/),L&&(g.whitespace_before=L[0]))}if(S)if(k){var A=function(){this.eol=`
`};A.prototype=this._options.raw_options;var M=new A;S=k(F+S,M)}else{var W=g.whitespace_before;W&&(S=S.replace(new RegExp(`
(`+W+")?","g"),`
`)),S=F+S.replace(/\n/g,`
`+F)}D&&(S?S=D+S+`
`+H:S=D+H),v.print_newline(!1),S&&(g.text=S,g.whitespace_before="",g.newlines=0,v.add_raw_token(g),v.print_newline(!0))}},y.prototype._handle_tag_open=function(v,g,T,q){var S=this._get_tag_open_token(g);return(T.is_unformatted||T.is_content_unformatted)&&!T.is_empty_element&&g.type===c.TAG_OPEN&&g.text.indexOf("</")===0?(v.add_raw_token(g),S.start_tag_token=this._tag_stack.try_pop(S.tag_name)):(v.traverse_whitespace(g),this._set_tag_position(v,g,S,T,q),S.is_inline_element||v.set_wrap_point(),v.print_token(g)),(this._is_wrap_attributes_force_aligned||this._is_wrap_attributes_aligned_multiple||this._is_wrap_attributes_preserve_aligned)&&(S.alignment_size=g.text.length+1),!S.tag_complete&&!S.is_unformatted&&(v.alignment_size=S.alignment_size),S};var E=function(v,g){if(this.parent=v||null,this.text="",this.type="TK_TAG_OPEN",this.tag_name="",this.is_inline_element=!1,this.is_unformatted=!1,this.is_content_unformatted=!1,this.is_empty_element=!1,this.is_start_tag=!1,this.is_end_tag=!1,this.indent_content=!1,this.multiline_content=!1,this.custom_beautifier_name=null,this.start_tag_token=null,this.attr_count=0,this.has_wrapped_attrs=!1,this.alignment_size=0,this.tag_complete=!1,this.tag_start_char="",this.tag_check="",!g)this.tag_complete=!0;else{var T;this.tag_start_char=g.text[0],this.text=g.text,this.tag_start_char==="<"?(T=g.text.match(/^<([^\s>]*)/),this.tag_check=T?T[1]:""):(T=g.text.match(/^{{(?:[\^]|#\*?)?([^\s}]+)/),this.tag_check=T?T[1]:"",g.text==="{{#>"&&this.tag_check===">"&&g.next!==null&&(this.tag_check=g.next.text)),this.tag_check=this.tag_check.toLowerCase(),g.type===c.COMMENT&&(this.tag_complete=!0),this.is_start_tag=this.tag_check.charAt(0)!=="/",this.tag_name=this.is_start_tag?this.tag_check:this.tag_check.substr(1),this.is_end_tag=!this.is_start_tag||g.closed&&g.closed.text==="/>",this.is_end_tag=this.is_end_tag||this.tag_start_char==="{"&&(this.text.length<3||/[^#\^]/.test(this.text.charAt(2)))}};y.prototype._get_tag_open_token=function(v){var g=new E(this._tag_stack.get_parser_token(),v);return g.alignment_size=this._options.wrap_attributes_indent_size,g.is_end_tag=g.is_end_tag||w(g.tag_check,this._options.void_elements),g.is_empty_element=g.tag_complete||g.is_start_tag&&g.is_end_tag,g.is_unformatted=!g.tag_complete&&w(g.tag_check,this._options.unformatted),g.is_content_unformatted=!g.is_empty_element&&w(g.tag_check,this._options.content_unformatted),g.is_inline_element=w(g.tag_name,this._options.inline)||g.tag_start_char==="{",g},y.prototype._set_tag_position=function(v,g,T,q,S){if(T.is_empty_element||(T.is_end_tag?T.start_tag_token=this._tag_stack.try_pop(T.tag_name):(this._do_optional_end_element(T)&&(T.is_inline_element||v.print_newline(!1)),this._tag_stack.record_tag(T),(T.tag_name==="script"||T.tag_name==="style")&&!(T.is_unformatted||T.is_content_unformatted)&&(T.custom_beautifier_name=p(T.tag_check,g)))),w(T.tag_check,this._options.extra_liners)&&(v.print_newline(!1),v._output.just_added_blankline()||v.print_newline(!0)),T.is_empty_element){if(T.tag_start_char==="{"&&T.tag_check==="else"){this._tag_stack.indent_to_tag(["if","unless","each"]),T.indent_content=!0;var k=v.current_line_has_match(/{{#if/);k||v.print_newline(!1)}T.tag_name==="!--"&&S.type===c.TAG_CLOSE&&q.is_end_tag&&T.text.indexOf(`
`)===-1||(T.is_inline_element||T.is_unformatted||v.print_newline(!1),this._calcluate_parent_multiline(v,T))}else if(T.is_end_tag){var N=!1;N=T.start_tag_token&&T.start_tag_token.multiline_content,N=N||!T.is_inline_element&&!(q.is_inline_element||q.is_unformatted)&&!(S.type===c.TAG_CLOSE&&T.start_tag_token===q)&&S.type!=="TK_CONTENT",(T.is_content_unformatted||T.is_unformatted)&&(N=!1),N&&v.print_newline(!1)}else T.indent_content=!T.custom_beautifier_name,T.tag_start_char==="<"&&(T.tag_name==="html"?T.indent_content=this._options.indent_inner_html:T.tag_name==="head"?T.indent_content=this._options.indent_head_inner_html:T.tag_name==="body"&&(T.indent_content=this._options.indent_body_inner_html)),!(T.is_inline_element||T.is_unformatted)&&(S.type!=="TK_CONTENT"||T.is_content_unformatted)&&v.print_newline(!1),this._calcluate_parent_multiline(v,T)},y.prototype._calcluate_parent_multiline=function(v,g){g.parent&&v._output.just_added_newline()&&!((g.is_inline_element||g.is_unformatted)&&g.parent.is_inline_element)&&(g.parent.multiline_content=!0)};var R=["address","article","aside","blockquote","details","div","dl","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","main","nav","ol","p","pre","section","table","ul"],P=["a","audio","del","ins","map","noscript","video"];y.prototype._do_optional_end_element=function(v){var g=null;if(!(v.is_empty_element||!v.is_start_tag||!v.parent)){if(v.tag_name==="body")g=g||this._tag_stack.try_pop("head");else if(v.tag_name==="li")g=g||this._tag_stack.try_pop("li",["ol","ul"]);else if(v.tag_name==="dd"||v.tag_name==="dt")g=g||this._tag_stack.try_pop("dt",["dl"]),g=g||this._tag_stack.try_pop("dd",["dl"]);else if(v.parent.tag_name==="p"&&R.indexOf(v.tag_name)!==-1){var T=v.parent.parent;(!T||P.indexOf(T.tag_name)===-1)&&(g=g||this._tag_stack.try_pop("p"))}else v.tag_name==="rp"||v.tag_name==="rt"?(g=g||this._tag_stack.try_pop("rt",["ruby","rtc"]),g=g||this._tag_stack.try_pop("rp",["ruby","rtc"])):v.tag_name==="optgroup"?g=g||this._tag_stack.try_pop("optgroup",["select"]):v.tag_name==="option"?g=g||this._tag_stack.try_pop("option",["select","datalist","optgroup"]):v.tag_name==="colgroup"?g=g||this._tag_stack.try_pop("caption",["table"]):v.tag_name==="thead"?(g=g||this._tag_stack.try_pop("caption",["table"]),g=g||this._tag_stack.try_pop("colgroup",["table"])):v.tag_name==="tbody"||v.tag_name==="tfoot"?(g=g||this._tag_stack.try_pop("caption",["table"]),g=g||this._tag_stack.try_pop("colgroup",["table"]),g=g||this._tag_stack.try_pop("thead",["table"]),g=g||this._tag_stack.try_pop("tbody",["table"])):v.tag_name==="tr"?(g=g||this._tag_stack.try_pop("caption",["table"]),g=g||this._tag_stack.try_pop("colgroup",["table"]),g=g||this._tag_stack.try_pop("tr",["table","thead","tbody","tfoot"])):(v.tag_name==="th"||v.tag_name==="td")&&(g=g||this._tag_stack.try_pop("td",["table","thead","tbody","tfoot","tr"]),g=g||this._tag_stack.try_pop("th",["table","thead","tbody","tfoot","tr"]));return v.parent=this._tag_stack.get_parser_token(),g}},r.exports.Beautifier=y},function(r,a,s){var o=s(6).Options;function l(u){o.call(this,u,"html"),this.templating.length===1&&this.templating[0]==="auto"&&(this.templating=["django","erb","handlebars","php"]),this.indent_inner_html=this._get_boolean("indent_inner_html"),this.indent_body_inner_html=this._get_boolean("indent_body_inner_html",!0),this.indent_head_inner_html=this._get_boolean("indent_head_inner_html",!0),this.indent_handlebars=this._get_boolean("indent_handlebars",!0),this.wrap_attributes=this._get_selection("wrap_attributes",["auto","force","force-aligned","force-expand-multiline","aligned-multiple","preserve","preserve-aligned"]),this.wrap_attributes_indent_size=this._get_number("wrap_attributes_indent_size",this.indent_size),this.extra_liners=this._get_array("extra_liners",["head","body","/html"]),this.inline=this._get_array("inline",["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr","text","acronym","big","strike","tt"]),this.void_elements=this._get_array("void_elements",["area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr","!doctype","?xml","basefont","isindex"]),this.unformatted=this._get_array("unformatted",[]),this.content_unformatted=this._get_array("content_unformatted",["pre","textarea"]),this.unformatted_content_delimiter=this._get_characters("unformatted_content_delimiter"),this.indent_scripts=this._get_selection("indent_scripts",["normal","keep","separate"])}l.prototype=new o,r.exports.Options=l},function(r,a,s){var o=s(9).Tokenizer,l=s(9).TOKEN,u=s(13).Directives,c=s(14).TemplatablePattern,d=s(12).Pattern,m={TAG_OPEN:"TK_TAG_OPEN",TAG_CLOSE:"TK_TAG_CLOSE",ATTRIBUTE:"TK_ATTRIBUTE",EQUALS:"TK_EQUALS",VALUE:"TK_VALUE",COMMENT:"TK_COMMENT",TEXT:"TK_TEXT",UNKNOWN:"TK_UNKNOWN",START:l.START,RAW:l.RAW,EOF:l.EOF},f=new u(/<\!--/,/-->/),b=function(p,w){o.call(this,p,w),this._current_tag_name="";var x=new c(this._input).read_options(this._options),_=new d(this._input);if(this.__patterns={word:x.until(/[\n\r\t <]/),single_quote:x.until_after(/'/),double_quote:x.until_after(/"/),attribute:x.until(/[\n\r\t =>]|\/>/),element_name:x.until(/[\n\r\t >\/]/),handlebars_comment:_.starting_with(/{{!--/).until_after(/--}}/),handlebars:_.starting_with(/{{/).until_after(/}}/),handlebars_open:_.until(/[\n\r\t }]/),handlebars_raw_close:_.until(/}}/),comment:_.starting_with(/<!--/).until_after(/-->/),cdata:_.starting_with(/<!\[CDATA\[/).until_after(/]]>/),conditional_comment:_.starting_with(/<!\[/).until_after(/]>/),processing:_.starting_with(/<\?/).until_after(/\?>/)},this._options.indent_handlebars&&(this.__patterns.word=this.__patterns.word.exclude("handlebars")),this._unformatted_content_delimiter=null,this._options.unformatted_content_delimiter){var y=this._input.get_literal_regexp(this._options.unformatted_content_delimiter);this.__patterns.unformatted_content_delimiter=_.matching(y).until_after(y)}};b.prototype=new o,b.prototype._is_comment=function(p){return!1},b.prototype._is_opening=function(p){return p.type===m.TAG_OPEN},b.prototype._is_closing=function(p,w){return p.type===m.TAG_CLOSE&&w&&((p.text===">"||p.text==="/>")&&w.text[0]==="<"||p.text==="}}"&&w.text[0]==="{"&&w.text[1]==="{")},b.prototype._reset=function(){this._current_tag_name=""},b.prototype._get_next_token=function(p,w){var x=null;this._readWhitespace();var _=this._input.peek();return _===null?this._create_token(m.EOF,""):(x=x||this._read_open_handlebars(_,w),x=x||this._read_attribute(_,p,w),x=x||this._read_close(_,w),x=x||this._read_raw_content(_,p,w),x=x||this._read_content_word(_),x=x||this._read_comment_or_cdata(_),x=x||this._read_processing(_),x=x||this._read_open(_,w),x=x||this._create_token(m.UNKNOWN,this._input.next()),x)},b.prototype._read_comment_or_cdata=function(p){var w=null,x=null,_=null;if(p==="<"){var y=this._input.peek(1);y==="!"&&(x=this.__patterns.comment.read(),x?(_=f.get_directives(x),_&&_.ignore==="start"&&(x+=f.readIgnored(this._input))):x=this.__patterns.cdata.read()),x&&(w=this._create_token(m.COMMENT,x),w.directives=_)}return w},b.prototype._read_processing=function(p){var w=null,x=null,_=null;if(p==="<"){var y=this._input.peek(1);(y==="!"||y==="?")&&(x=this.__patterns.conditional_comment.read(),x=x||this.__patterns.processing.read()),x&&(w=this._create_token(m.COMMENT,x),w.directives=_)}return w},b.prototype._read_open=function(p,w){var x=null,_=null;return w||p==="<"&&(x=this._input.next(),this._input.peek()==="/"&&(x+=this._input.next()),x+=this.__patterns.element_name.read(),_=this._create_token(m.TAG_OPEN,x)),_},b.prototype._read_open_handlebars=function(p,w){var x=null,_=null;return w||this._options.indent_handlebars&&p==="{"&&this._input.peek(1)==="{"&&(this._input.peek(2)==="!"?(x=this.__patterns.handlebars_comment.read(),x=x||this.__patterns.handlebars.read(),_=this._create_token(m.COMMENT,x)):(x=this.__patterns.handlebars_open.read(),_=this._create_token(m.TAG_OPEN,x))),_},b.prototype._read_close=function(p,w){var x=null,_=null;return w&&(w.text[0]==="<"&&(p===">"||p==="/"&&this._input.peek(1)===">")?(x=this._input.next(),p==="/"&&(x+=this._input.next()),_=this._create_token(m.TAG_CLOSE,x)):w.text[0]==="{"&&p==="}"&&this._input.peek(1)==="}"&&(this._input.next(),this._input.next(),_=this._create_token(m.TAG_CLOSE,"}}"))),_},b.prototype._read_attribute=function(p,w,x){var _=null,y="";if(x&&x.text[0]==="<")if(p==="=")_=this._create_token(m.EQUALS,this._input.next());else if(p==='"'||p==="'"){var E=this._input.next();p==='"'?E+=this.__patterns.double_quote.read():E+=this.__patterns.single_quote.read(),_=this._create_token(m.VALUE,E)}else y=this.__patterns.attribute.read(),y&&(w.type===m.EQUALS?_=this._create_token(m.VALUE,y):_=this._create_token(m.ATTRIBUTE,y));return _},b.prototype._is_content_unformatted=function(p){return this._options.void_elements.indexOf(p)===-1&&(this._options.content_unformatted.indexOf(p)!==-1||this._options.unformatted.indexOf(p)!==-1)},b.prototype._read_raw_content=function(p,w,x){var _="";if(x&&x.text[0]==="{")_=this.__patterns.handlebars_raw_close.read();else if(w.type===m.TAG_CLOSE&&w.opened.text[0]==="<"&&w.text[0]!=="/"){var y=w.opened.text.substr(1).toLowerCase();if(y==="script"||y==="style"){var E=this._read_comment_or_cdata(p);if(E)return E.type=m.TEXT,E;_=this._input.readUntil(new RegExp("</"+y+"[\\n\\r\\t ]*?>","ig"))}else this._is_content_unformatted(y)&&(_=this._input.readUntil(new RegExp("</"+y+"[\\n\\r\\t ]*?>","ig")))}return _?this._create_token(m.TEXT,_):null},b.prototype._read_content_word=function(p){var w="";if(this._options.unformatted_content_delimiter&&p===this._options.unformatted_content_delimiter[0]&&(w=this.__patterns.unformatted_content_delimiter.read()),w||(w=this.__patterns.word.read()),w)return this._create_token(m.TEXT,w)},r.exports.Tokenizer=b,r.exports.TOKEN=m}],t={};function n(r){var a=t[r];if(a!==void 0)return a.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}var i=n(18);ns=i})();function Mu(e,t){return ns(e,t,Eu,Ru)}function Du(e,t,n){var i=e.getText(),r=!0,a=0,s=n.tabSize||4;if(t){for(var o=e.offsetAt(t.start),l=o;l>0&&rs(i,l-1);)l--;l===0||is(i,l-1)?o=l:l<o&&(o=l+1);for(var u=e.offsetAt(t.end),c=u;c<i.length&&rs(i,c);)c++;(c===i.length||is(i,c))&&(u=c),t=Y.create(e.positionAt(o),e.positionAt(u));var d=i.substring(0,o);if(new RegExp(/.*[<][^>]*$/).test(d))return i=i.substring(o,u),[{range:t,newText:i}];if(r=u===i.length,i=i.substring(o,u),o!==0){var m=e.offsetAt(ce.create(t.start.line,0));a=zu(e.getText(),m,n)}}else t=Y.create(ce.create(0,0),e.positionAt(i.length));var f={indent_size:s,indent_char:n.insertSpaces?" ":"	",indent_empty_lines:ye(n,"indentEmptyLines",!1),wrap_line_length:ye(n,"wrapLineLength",120),unformatted:ui(n,"unformatted",void 0),content_unformatted:ui(n,"contentUnformatted",void 0),indent_inner_html:ye(n,"indentInnerHtml",!1),preserve_newlines:ye(n,"preserveNewLines",!0),max_preserve_newlines:ye(n,"maxPreserveNewLines",32786),indent_handlebars:ye(n,"indentHandlebars",!1),end_with_newline:r&&ye(n,"endWithNewline",!1),extra_liners:ui(n,"extraLiners",void 0),wrap_attributes:ye(n,"wrapAttributes","auto"),wrap_attributes_indent_size:ye(n,"wrapAttributesIndentSize",void 0),eol:`
`,indent_scripts:ye(n,"indentScripts","normal"),templating:Iu(n,"all"),unformatted_content_delimiter:ye(n,"unformattedContentDelimiter","")},b=Mu(Nu(i),f);if(a>0){var p=n.insertSpaces?Qa(" ",s*a):Qa("	",a);b=b.split(`
`).join(`
`+p),t.start.character===0&&(b=p+b)}return[{range:t,newText:b}]}function Nu(e){return e.replace(/^\s+/,"")}function ye(e,t,n){if(e&&e.hasOwnProperty(t)){var i=e[t];if(i!==null)return i}return n}function ui(e,t,n){var i=ye(e,t,null);return typeof i=="string"?i.length>0?i.split(",").map(function(r){return r.trim().toLowerCase()}):[]:n}function Iu(e,t){var n=ye(e,"templating",t);return n===!0?["auto"]:["none"]}function zu(e,t,n){for(var i=t,r=0,a=n.tabSize||4;i<e.length;){var s=e.charAt(i);if(s===" ")r++;else if(s==="	")r+=a;else break;i++}return Math.floor(r/a)}function is(e,t){return`\r
`.indexOf(e.charAt(t))!==-1}function rs(e,t){return" 	".indexOf(e.charAt(t))!==-1}var as;as=(()=>{var e={470:i=>{function r(o){if(typeof o!="string")throw new TypeError("Path must be a string. Received "+JSON.stringify(o))}function a(o,l){for(var u,c="",d=0,m=-1,f=0,b=0;b<=o.length;++b){if(b<o.length)u=o.charCodeAt(b);else{if(u===47)break;u=47}if(u===47){if(!(m===b-1||f===1))if(m!==b-1&&f===2){if(c.length<2||d!==2||c.charCodeAt(c.length-1)!==46||c.charCodeAt(c.length-2)!==46){if(c.length>2){var p=c.lastIndexOf("/");if(p!==c.length-1){p===-1?(c="",d=0):d=(c=c.slice(0,p)).length-1-c.lastIndexOf("/"),m=b,f=0;continue}}else if(c.length===2||c.length===1){c="",d=0,m=b,f=0;continue}}l&&(c.length>0?c+="/..":c="..",d=2)}else c.length>0?c+="/"+o.slice(m+1,b):c=o.slice(m+1,b),d=b-m-1;m=b,f=0}else u===46&&f!==-1?++f:f=-1}return c}var s={resolve:function(){for(var o,l="",u=!1,c=arguments.length-1;c>=-1&&!u;c--){var d;c>=0?d=arguments[c]:(o===void 0&&(o=process.cwd()),d=o),r(d),d.length!==0&&(l=d+"/"+l,u=d.charCodeAt(0)===47)}return l=a(l,!u),u?l.length>0?"/"+l:"/":l.length>0?l:"."},normalize:function(o){if(r(o),o.length===0)return".";var l=o.charCodeAt(0)===47,u=o.charCodeAt(o.length-1)===47;return(o=a(o,!l)).length!==0||l||(o="."),o.length>0&&u&&(o+="/"),l?"/"+o:o},isAbsolute:function(o){return r(o),o.length>0&&o.charCodeAt(0)===47},join:function(){if(arguments.length===0)return".";for(var o,l=0;l<arguments.length;++l){var u=arguments[l];r(u),u.length>0&&(o===void 0?o=u:o+="/"+u)}return o===void 0?".":s.normalize(o)},relative:function(o,l){if(r(o),r(l),o===l||(o=s.resolve(o))===(l=s.resolve(l)))return"";for(var u=1;u<o.length&&o.charCodeAt(u)===47;++u);for(var c=o.length,d=c-u,m=1;m<l.length&&l.charCodeAt(m)===47;++m);for(var f=l.length-m,b=d<f?d:f,p=-1,w=0;w<=b;++w){if(w===b){if(f>b){if(l.charCodeAt(m+w)===47)return l.slice(m+w+1);if(w===0)return l.slice(m+w)}else d>b&&(o.charCodeAt(u+w)===47?p=w:w===0&&(p=0));break}var x=o.charCodeAt(u+w);if(x!==l.charCodeAt(m+w))break;x===47&&(p=w)}var _="";for(w=u+p+1;w<=c;++w)w!==c&&o.charCodeAt(w)!==47||(_.length===0?_+="..":_+="/..");return _.length>0?_+l.slice(m+p):(m+=p,l.charCodeAt(m)===47&&++m,l.slice(m))},_makeLong:function(o){return o},dirname:function(o){if(r(o),o.length===0)return".";for(var l=o.charCodeAt(0),u=l===47,c=-1,d=!0,m=o.length-1;m>=1;--m)if((l=o.charCodeAt(m))===47){if(!d){c=m;break}}else d=!1;return c===-1?u?"/":".":u&&c===1?"//":o.slice(0,c)},basename:function(o,l){if(l!==void 0&&typeof l!="string")throw new TypeError('"ext" argument must be a string');r(o);var u,c=0,d=-1,m=!0;if(l!==void 0&&l.length>0&&l.length<=o.length){if(l.length===o.length&&l===o)return"";var f=l.length-1,b=-1;for(u=o.length-1;u>=0;--u){var p=o.charCodeAt(u);if(p===47){if(!m){c=u+1;break}}else b===-1&&(m=!1,b=u+1),f>=0&&(p===l.charCodeAt(f)?--f==-1&&(d=u):(f=-1,d=b))}return c===d?d=b:d===-1&&(d=o.length),o.slice(c,d)}for(u=o.length-1;u>=0;--u)if(o.charCodeAt(u)===47){if(!m){c=u+1;break}}else d===-1&&(m=!1,d=u+1);return d===-1?"":o.slice(c,d)},extname:function(o){r(o);for(var l=-1,u=0,c=-1,d=!0,m=0,f=o.length-1;f>=0;--f){var b=o.charCodeAt(f);if(b!==47)c===-1&&(d=!1,c=f+1),b===46?l===-1?l=f:m!==1&&(m=1):l!==-1&&(m=-1);else if(!d){u=f+1;break}}return l===-1||c===-1||m===0||m===1&&l===c-1&&l===u+1?"":o.slice(l,c)},format:function(o){if(o===null||typeof o!="object")throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof o);return function(l,u){var c=u.dir||u.root,d=u.base||(u.name||"")+(u.ext||"");return c?c===u.root?c+d:c+"/"+d:d}(0,o)},parse:function(o){r(o);var l={root:"",dir:"",base:"",ext:"",name:""};if(o.length===0)return l;var u,c=o.charCodeAt(0),d=c===47;d?(l.root="/",u=1):u=0;for(var m=-1,f=0,b=-1,p=!0,w=o.length-1,x=0;w>=u;--w)if((c=o.charCodeAt(w))!==47)b===-1&&(p=!1,b=w+1),c===46?m===-1?m=w:x!==1&&(x=1):m!==-1&&(x=-1);else if(!p){f=w+1;break}return m===-1||b===-1||x===0||x===1&&m===b-1&&m===f+1?b!==-1&&(l.base=l.name=f===0&&d?o.slice(1,b):o.slice(f,b)):(f===0&&d?(l.name=o.slice(1,m),l.base=o.slice(1,b)):(l.name=o.slice(f,m),l.base=o.slice(f,b)),l.ext=o.slice(m,b)),f>0?l.dir=o.slice(0,f-1):d&&(l.dir="/"),l},sep:"/",delimiter:":",win32:null,posix:null};s.posix=s,i.exports=s},447:(i,r,a)=>{var s;if(a.r(r),a.d(r,{URI:()=>_,Utils:()=>N}),typeof process=="object")s=process.platform==="win32";else if(typeof navigator=="object"){var o=navigator.userAgent;s=o.indexOf("Windows")>=0}var l,u,c=(l=function(L,A){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(M,W){M.__proto__=W}||function(M,W){for(var I in W)Object.prototype.hasOwnProperty.call(W,I)&&(M[I]=W[I])})(L,A)},function(L,A){if(typeof A!="function"&&A!==null)throw new TypeError("Class extends value "+String(A)+" is not a constructor or null");function M(){this.constructor=L}l(L,A),L.prototype=A===null?Object.create(A):(M.prototype=A.prototype,new M)}),d=/^\w[\w\d+.-]*$/,m=/^\//,f=/^\/\//;function b(L,A){if(!L.scheme&&A)throw new Error('[UriError]: Scheme is missing: {scheme: "", authority: "'.concat(L.authority,'", path: "').concat(L.path,'", query: "').concat(L.query,'", fragment: "').concat(L.fragment,'"}'));if(L.scheme&&!d.test(L.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(L.path){if(L.authority){if(!m.test(L.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(f.test(L.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}}var p="",w="/",x=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,_=function(){function L(A,M,W,I,z,B){B===void 0&&(B=!1),typeof A=="object"?(this.scheme=A.scheme||p,this.authority=A.authority||p,this.path=A.path||p,this.query=A.query||p,this.fragment=A.fragment||p):(this.scheme=function(X,Q){return X||Q?X:"file"}(A,B),this.authority=M||p,this.path=function(X,Q){switch(X){case"https":case"http":case"file":Q?Q[0]!==w&&(Q=w+Q):Q=w}return Q}(this.scheme,W||p),this.query=I||p,this.fragment=z||p,b(this,B))}return L.isUri=function(A){return A instanceof L||!!A&&typeof A.authority=="string"&&typeof A.fragment=="string"&&typeof A.path=="string"&&typeof A.query=="string"&&typeof A.scheme=="string"&&typeof A.fsPath=="string"&&typeof A.with=="function"&&typeof A.toString=="function"},Object.defineProperty(L.prototype,"fsPath",{get:function(){return g(this)},enumerable:!1,configurable:!0}),L.prototype.with=function(A){if(!A)return this;var M=A.scheme,W=A.authority,I=A.path,z=A.query,B=A.fragment;return M===void 0?M=this.scheme:M===null&&(M=p),W===void 0?W=this.authority:W===null&&(W=p),I===void 0?I=this.path:I===null&&(I=p),z===void 0?z=this.query:z===null&&(z=p),B===void 0?B=this.fragment:B===null&&(B=p),M===this.scheme&&W===this.authority&&I===this.path&&z===this.query&&B===this.fragment?this:new E(M,W,I,z,B)},L.parse=function(A,M){M===void 0&&(M=!1);var W=x.exec(A);return W?new E(W[2]||p,k(W[4]||p),k(W[5]||p),k(W[7]||p),k(W[9]||p),M):new E(p,p,p,p,p)},L.file=function(A){var M=p;if(s&&(A=A.replace(/\\/g,w)),A[0]===w&&A[1]===w){var W=A.indexOf(w,2);W===-1?(M=A.substring(2),A=w):(M=A.substring(2,W),A=A.substring(W)||w)}return new E("file",M,A,p,p)},L.from=function(A){var M=new E(A.scheme,A.authority,A.path,A.query,A.fragment);return b(M,!0),M},L.prototype.toString=function(A){return A===void 0&&(A=!1),T(this,A)},L.prototype.toJSON=function(){return this},L.revive=function(A){if(A){if(A instanceof L)return A;var M=new E(A);return M._formatted=A.external,M._fsPath=A._sep===y?A.fsPath:null,M}return A},L}(),y=s?1:void 0,E=function(L){function A(){var M=L!==null&&L.apply(this,arguments)||this;return M._formatted=null,M._fsPath=null,M}return c(A,L),Object.defineProperty(A.prototype,"fsPath",{get:function(){return this._fsPath||(this._fsPath=g(this)),this._fsPath},enumerable:!1,configurable:!0}),A.prototype.toString=function(M){return M===void 0&&(M=!1),M?T(this,!0):(this._formatted||(this._formatted=T(this,!1)),this._formatted)},A.prototype.toJSON=function(){var M={$mid:1};return this._fsPath&&(M.fsPath=this._fsPath,M._sep=y),this._formatted&&(M.external=this._formatted),this.path&&(M.path=this.path),this.scheme&&(M.scheme=this.scheme),this.authority&&(M.authority=this.authority),this.query&&(M.query=this.query),this.fragment&&(M.fragment=this.fragment),M},A}(_),R=((u={})[58]="%3A",u[47]="%2F",u[63]="%3F",u[35]="%23",u[91]="%5B",u[93]="%5D",u[64]="%40",u[33]="%21",u[36]="%24",u[38]="%26",u[39]="%27",u[40]="%28",u[41]="%29",u[42]="%2A",u[43]="%2B",u[44]="%2C",u[59]="%3B",u[61]="%3D",u[32]="%20",u);function P(L,A){for(var M=void 0,W=-1,I=0;I<L.length;I++){var z=L.charCodeAt(I);if(z>=97&&z<=122||z>=65&&z<=90||z>=48&&z<=57||z===45||z===46||z===95||z===126||A&&z===47)W!==-1&&(M+=encodeURIComponent(L.substring(W,I)),W=-1),M!==void 0&&(M+=L.charAt(I));else{M===void 0&&(M=L.substr(0,I));var B=R[z];B!==void 0?(W!==-1&&(M+=encodeURIComponent(L.substring(W,I)),W=-1),M+=B):W===-1&&(W=I)}}return W!==-1&&(M+=encodeURIComponent(L.substring(W))),M!==void 0?M:L}function v(L){for(var A=void 0,M=0;M<L.length;M++){var W=L.charCodeAt(M);W===35||W===63?(A===void 0&&(A=L.substr(0,M)),A+=R[W]):A!==void 0&&(A+=L[M])}return A!==void 0?A:L}function g(L,A){var M;return M=L.authority&&L.path.length>1&&L.scheme==="file"?"//".concat(L.authority).concat(L.path):L.path.charCodeAt(0)===47&&(L.path.charCodeAt(1)>=65&&L.path.charCodeAt(1)<=90||L.path.charCodeAt(1)>=97&&L.path.charCodeAt(1)<=122)&&L.path.charCodeAt(2)===58?L.path[1].toLowerCase()+L.path.substr(2):L.path,s&&(M=M.replace(/\//g,"\\")),M}function T(L,A){var M=A?v:P,W="",I=L.scheme,z=L.authority,B=L.path,X=L.query,Q=L.fragment;if(I&&(W+=I,W+=":"),(z||I==="file")&&(W+=w,W+=w),z){var J=z.indexOf("@");if(J!==-1){var Z=z.substr(0,J);z=z.substr(J+1),(J=Z.indexOf(":"))===-1?W+=M(Z,!1):(W+=M(Z.substr(0,J),!1),W+=":",W+=M(Z.substr(J+1),!1)),W+="@"}(J=(z=z.toLowerCase()).indexOf(":"))===-1?W+=M(z,!1):(W+=M(z.substr(0,J),!1),W+=z.substr(J))}if(B){if(B.length>=3&&B.charCodeAt(0)===47&&B.charCodeAt(2)===58)(fe=B.charCodeAt(1))>=65&&fe<=90&&(B="/".concat(String.fromCharCode(fe+32),":").concat(B.substr(3)));else if(B.length>=2&&B.charCodeAt(1)===58){var fe;(fe=B.charCodeAt(0))>=65&&fe<=90&&(B="".concat(String.fromCharCode(fe+32),":").concat(B.substr(2)))}W+=M(B,!0)}return X&&(W+="?",W+=M(X,!1)),Q&&(W+="#",W+=A?Q:P(Q,!1)),W}function q(L){try{return decodeURIComponent(L)}catch{return L.length>3?L.substr(0,3)+q(L.substr(3)):L}}var S=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function k(L){return L.match(S)?L.replace(S,function(A){return q(A)}):L}var N,D=a(470),H=function(L,A,M){if(arguments.length===2)for(var W,I=0,z=A.length;I<z;I++)!W&&I in A||(W||(W=Array.prototype.slice.call(A,0,I)),W[I]=A[I]);return L.concat(W||Array.prototype.slice.call(A))},F=D.posix||D;(function(L){L.joinPath=function(A){for(var M=[],W=1;W<arguments.length;W++)M[W-1]=arguments[W];return A.with({path:F.join.apply(F,H([A.path],M,!1))})},L.resolvePath=function(A){for(var M=[],W=1;W<arguments.length;W++)M[W-1]=arguments[W];var I=A.path||"/";return A.with({path:F.resolve.apply(F,H([I],M,!1))})},L.dirname=function(A){var M=F.dirname(A.path);return M.length===1&&M.charCodeAt(0)===46?A:A.with({path:M})},L.basename=function(A){return F.basename(A.path)},L.extname=function(A){return F.extname(A.path)}})(N||(N={}))}},t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={exports:{}};return e[i](r,r.exports,n),r.exports}return n.d=(i,r)=>{for(var a in r)n.o(r,a)&&!n.o(i,a)&&Object.defineProperty(i,a,{enumerable:!0,get:r[a]})},n.o=(i,r)=>Object.prototype.hasOwnProperty.call(i,r),n.r=i=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},n(447)})();var{URI:Hu,Utils:cc}=as;function ci(e){var t=e[0],n=e[e.length-1];return t===n&&(t==="'"||t==='"')&&(e=e.substr(1,e.length-2)),e}function Uu(e,t){return!e.length||t==="handlebars"&&/{{|}}/.test(e)?!1:/\b(w[\w\d+.-]*:\/\/)?[^\s()<>]+(?:\([\w\d]+\)|([^[:punct:]\s]|\/?))/.test(e)}function Wu(e,t,n,i){if(!(/^\s*javascript\:/i.test(t)||/[\n\r]/.test(t))){if(t=t.replace(/^\s*/g,""),/^https?:\/\//i.test(t)||/^file:\/\//i.test(t))return t;if(/^\#/i.test(t))return e+t;if(/^\/\//i.test(t)){var r=Qe(e,"https://")?"https":"http";return r+":"+t.replace(/^\s*/g,"")}return n?n.resolveReference(t,i||e):t}}function Fu(e,t,n,i,r,a){var s=ci(n);if(Uu(s,e.languageId)){s.length<n.length&&(i++,r--);var o=Wu(e.uri,s,t,a);if(!(!o||!Pu(o)))return{range:Y.create(e.positionAt(i),e.positionAt(r)),target:o}}}function Pu(e){try{return Hu.parse(e),!0}catch{return!1}}function Bu(e,t){for(var n=[],i=we(e.getText(),0),r=i.scan(),a=void 0,s=!1,o=void 0,l={};r!==U.EOS;){switch(r){case U.StartTag:if(!o){var u=i.getTokenText().toLowerCase();s=u==="base"}break;case U.AttributeName:a=i.getTokenText().toLowerCase();break;case U.AttributeValue:if(a==="src"||a==="href"){var c=i.getTokenText();if(!s){var d=Fu(e,t,c,i.getTokenOffset(),i.getTokenEnd(),o);d&&n.push(d)}s&&typeof o>"u"&&(o=ci(c),o&&t&&(o=t.resolveReference(o,e.uri))),s=!1,a=void 0}else if(a==="id"){var m=ci(i.getTokenText());l[m]=i.getTokenOffset()}break}r=i.scan()}for(var f=0,b=n;f<b.length;f++){var d=b[f],p=e.uri+"#";if(d.target&&Qe(d.target,p)){var w=d.target.substr(p.length),x=l[w];if(x!==void 0){var _=e.positionAt(x);d.target="".concat(p).concat(_.line+1,",").concat(_.character+1)}}}return n}function qu(e,t,n){var i=e.offsetAt(t),r=n.findNodeAt(i);if(!r.tag)return[];var a=[],s=ls(U.StartTag,e,r.start),o=typeof r.endTagStart=="number"&&ls(U.EndTag,e,r.endTagStart);return(s&&os(s,t)||o&&os(o,t))&&(s&&a.push({kind:un.Read,range:s}),o&&a.push({kind:un.Read,range:o})),a}function ss(e,t){return e.line<t.line||e.line===t.line&&e.character<=t.character}function os(e,t){return ss(e.start,t)&&ss(t,e.end)}function ls(e,t,n){for(var i=we(t.getText(),n),r=i.scan();r!==U.EOS&&r!==e;)r=i.scan();return r!==U.EOS?{start:t.positionAt(i.getTokenOffset()),end:t.positionAt(i.getTokenEnd())}:null}function Ou(e,t){var n=[];return t.roots.forEach(function(i){us(e,i,"",n)}),n}function us(e,t,n,i){var r=Vu(t),a=tn.create(e.uri,Y.create(e.positionAt(t.start),e.positionAt(t.end))),s={name:r,location:a,containerName:n,kind:ri.Field};i.push(s),t.children.forEach(function(o){us(e,o,r,i)})}function Vu(e){var t=e.tag;if(e.attributes){var n=e.attributes.id,i=e.attributes.class;n&&(t+="#".concat(n.replace(/[\"\']/g,""))),i&&(t+=i.replace(/[\"\']/g,"").split(/\s+/).map(function(r){return".".concat(r)}).join(""))}return t||"?"}function ju(e,t,n,i){var r,a=e.offsetAt(t),s=i.findNodeAt(a);if(!s.tag||!Gu(s,a,s.tag))return null;var o=[],l={start:e.positionAt(s.start+1),end:e.positionAt(s.start+1+s.tag.length)};if(o.push({range:l,newText:n}),s.endTagStart){var u={start:e.positionAt(s.endTagStart+2),end:e.positionAt(s.endTagStart+2+s.tag.length)};o.push({range:u,newText:n})}var c=(r={},r[e.uri.toString()]=o,r);return{changes:c}}function Gu(e,t,n){return e.endTagStart&&e.endTagStart+2<=t&&t<=e.endTagStart+2+n.length?!0:e.start+1<=t&&t<=e.start+1+n.length}function $u(e,t,n){var i=e.offsetAt(t),r=n.findNodeAt(i);if(!r.tag||!r.endTagStart)return null;if(r.start+1<=i&&i<=r.start+1+r.tag.length){var a=i-1-r.start+r.endTagStart+2;return e.positionAt(a)}if(r.endTagStart+2<=i&&i<=r.endTagStart+2+r.tag.length){var a=i-2-r.endTagStart+r.start+1;return e.positionAt(a)}return null}function cs(e,t,n){var i=e.offsetAt(t),r=n.findNodeAt(i),a=r.tag?r.tag.length:0;return r.endTagStart&&(r.start+1<=i&&i<=r.start+1+a||r.endTagStart+2<=i&&i<=r.endTagStart+2+a)?[Y.create(e.positionAt(r.start+1),e.positionAt(r.start+1+a)),Y.create(e.positionAt(r.endTagStart+2),e.positionAt(r.endTagStart+2+a))]:null}function Xu(e,t){e=e.sort(function(b,p){var w=b.startLine-p.startLine;return w===0&&(w=b.endLine-p.endLine),w});for(var n=void 0,i=[],r=[],a=[],s=function(b,p){r[b]=p,p<30&&(a[p]=(a[p]||0)+1)},o=0;o<e.length;o++){var l=e[o];if(!n)n=l,s(o,0);else if(l.startLine>n.startLine){if(l.endLine<=n.endLine)i.push(n),n=l,s(o,i.length);else if(l.startLine>n.endLine){do n=i.pop();while(n&&l.startLine>n.endLine);n&&i.push(n),n=l,s(o,i.length)}}}for(var u=0,c=0,o=0;o<a.length;o++){var d=a[o];if(d){if(d+u>t){c=o;break}u+=d}}for(var m=[],o=0;o<e.length;o++){var f=r[o];typeof f=="number"&&(f<c||f===c&&u++<t)&&m.push(e[o])}return m}function Ju(e,t){var n=we(e.getText()),i=n.scan(),r=[],a=[],s=null,o=-1;function l(_){r.push(_),o=_.startLine}for(;i!==U.EOS;){switch(i){case U.StartTag:{var u=n.getTokenText(),c=e.positionAt(n.getTokenOffset()).line;a.push({startLine:c,tagName:u}),s=u;break}case U.EndTag:{s=n.getTokenText();break}case U.StartTagClose:if(!s||!dn(s))break;case U.EndTagClose:case U.StartTagSelfClose:{for(var d=a.length-1;d>=0&&a[d].tagName!==s;)d--;if(d>=0){var m=a[d];a.length=d;var f=e.positionAt(n.getTokenOffset()).line,c=m.startLine,b=f-1;b>c&&o!==c&&l({startLine:c,endLine:b})}break}case U.Comment:{var c=e.positionAt(n.getTokenOffset()).line,p=n.getTokenText(),w=p.match(/^\s*#(region\b)|(endregion\b)/);if(w)if(w[1])a.push({startLine:c,tagName:""});else{for(var d=a.length-1;d>=0&&a[d].tagName.length;)d--;if(d>=0){var m=a[d];a.length=d;var b=c;c=m.startLine,b>c&&o!==c&&l({startLine:c,endLine:b,kind:nn.Region})}}else{var b=e.positionAt(n.getTokenOffset()+n.getTokenLength()).line;c<b&&l({startLine:c,endLine:b,kind:nn.Comment})}break}}i=n.scan()}var x=t&&t.rangeLimit||Number.MAX_VALUE;return r.length>x?Xu(r,x):r}function Qu(e,t){function n(i){for(var r=Yu(e,i),a=void 0,s=void 0,o=r.length-1;o>=0;o--){var l=r[o];(!a||l[0]!==a[0]||l[1]!==a[1])&&(s=cn.create(Y.create(e.positionAt(r[o][0]),e.positionAt(r[o][1])),s)),a=l}return s||(s=cn.create(Y.create(i,i))),s}return t.map(n)}function Yu(e,t){var n=Ja(e.getText()),i=e.offsetAt(t),r=n.findNodeAt(i),a=Zu(r);if(r.startTagEnd&&!r.endTagStart){if(r.startTagEnd!==r.end)return[[r.start,r.end]];var s=Y.create(e.positionAt(r.startTagEnd-2),e.positionAt(r.startTagEnd)),o=e.getText(s);o==="/>"?a.unshift([r.start+1,r.startTagEnd-2]):a.unshift([r.start+1,r.startTagEnd-1]);var l=hs(e,r,i);return a=l.concat(a),a}if(!r.startTagEnd||!r.endTagStart)return a;if(a.unshift([r.start,r.end]),r.start<i&&i<r.startTagEnd){a.unshift([r.start+1,r.startTagEnd-1]);var l=hs(e,r,i);return a=l.concat(a),a}else return r.startTagEnd<=i&&i<=r.endTagStart?(a.unshift([r.startTagEnd,r.endTagStart]),a):(i>=r.endTagStart+2&&a.unshift([r.endTagStart+2,r.end-1]),a)}function Zu(e){for(var t=e,n=function(r){return r.startTagEnd&&r.endTagStart&&r.startTagEnd<r.endTagStart?[[r.startTagEnd,r.endTagStart],[r.start,r.end]]:[[r.start,r.end]]},i=[];t.parent;)t=t.parent,n(t).forEach(function(r){return i.push(r)});return i}function hs(e,t,n){for(var i=Y.create(e.positionAt(t.start),e.positionAt(t.end)),r=e.getText(i),a=n-t.start,s=we(r),o=s.scan(),l=t.start,u=[],c=!1,d=-1;o!==U.EOS;){switch(o){case U.AttributeName:{if(a<s.getTokenOffset()){c=!1;break}a<=s.getTokenEnd()&&u.unshift([s.getTokenOffset(),s.getTokenEnd()]),c=!0,d=s.getTokenOffset();break}case U.AttributeValue:{if(!c)break;var m=s.getTokenText();if(a<s.getTokenOffset()){u.push([d,s.getTokenEnd()]);break}a>=s.getTokenOffset()&&a<=s.getTokenEnd()&&(u.unshift([s.getTokenOffset(),s.getTokenEnd()]),(m[0]==='"'&&m[m.length-1]==='"'||m[0]==="'"&&m[m.length-1]==="'")&&a>=s.getTokenOffset()+1&&a<=s.getTokenEnd()-1&&u.unshift([s.getTokenOffset()+1,s.getTokenEnd()-1]),u.push([d,s.getTokenEnd()]));break}}o=s.scan()}return u.map(function(f){return[f[0]+l,f[1]+l]})}var Ku={version:1.1,tags:[{name:"html",description:{kind:"markdown",value:"The html element represents the root of an HTML document."},attributes:[{name:"manifest",description:{kind:"markdown",value:"Specifies the URI of a resource manifest indicating resources that should be cached locally. See [Using the application cache](https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache) for details."}},{name:"version",description:'Specifies the version of the HTML [Document Type Definition](https://developer.mozilla.org/en-US/docs/Glossary/DTD "Document Type Definition: In HTML, the doctype is the required "<!DOCTYPE html>" preamble found at the top of all documents. Its sole purpose is to prevent a browser from switching into so-called “quirks mode” when rendering a document; that is, the "<!DOCTYPE html>" doctype ensures that the browser makes a best-effort attempt at following the relevant specifications, rather than using a different rendering mode that is incompatible with some specifications.") that governs the current document. This attribute is not needed, because it is redundant with the version information in the document type declaration.'},{name:"xmlns",description:'Specifies the XML Namespace of the document. Default value is `"http://www.w3.org/1999/xhtml"`. This is required in documents parsed with XML parsers, and optional in text/html documents.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/html"}]},{name:"head",description:{kind:"markdown",value:"The head element represents a collection of metadata for the Document."},attributes:[{name:"profile",description:"The URIs of one or more metadata profiles, separated by white space."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/head"}]},{name:"title",description:{kind:"markdown",value:"The title element represents the document's title or name. Authors should use titles that identify their documents even when they are used out of context, for example in a user's history or bookmarks, or in search results. The document's title is often different from its first heading, since the first heading does not have to stand alone when taken out of context."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/title"}]},{name:"base",description:{kind:"markdown",value:"The base element allows authors to specify the document base URL for the purposes of resolving relative URLs, and the name of the default browsing context for the purposes of following hyperlinks. The element does not represent any content beyond this information."},attributes:[{name:"href",description:{kind:"markdown",value:"The base URL to be used throughout the document for relative URL addresses. If this attribute is specified, this element must come before any other elements with attributes whose values are URLs. Absolute and relative URLs are allowed."}},{name:"target",description:{kind:"markdown",value:"A name or keyword indicating the default location to display the result when hyperlinks or forms cause navigation, for elements that do not have an explicit target reference. It is a name of, or keyword for, a _browsing context_ (for example: tab, window, or inline frame). The following keywords have special meanings:\n\n*   `_self`: Load the result into the same browsing context as the current one. This value is the default if the attribute is not specified.\n*   `_blank`: Load the result into a new unnamed browsing context.\n*   `_parent`: Load the result into the parent browsing context of the current one. If there is no parent, this option behaves the same way as `_self`.\n*   `_top`: Load the result into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as `_self`.\n\nIf this attribute is specified, this element must come before any other elements with attributes whose values are URLs."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/base"}]},{name:"link",description:{kind:"markdown",value:"The link element allows authors to link their document to other resources."},attributes:[{name:"href",description:{kind:"markdown",value:'This attribute specifies the [URL](https://developer.mozilla.org/en-US/docs/Glossary/URL "URL: Uniform Resource Locator (URL) is a text string specifying where a resource can be found on the Internet.") of the linked resource. A URL can be absolute or relative.'}},{name:"crossorigin",valueSet:"xo",description:{kind:"markdown",value:'This enumerated attribute indicates whether [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS "CORS: CORS (Cross-Origin Resource Sharing) is a system, consisting of transmitting HTTP headers, that determines whether browsers block frontend JavaScript code from accessing responses for cross-origin requests.") must be used when fetching the resource. [CORS-enabled images](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_Enabled_Image) can be reused in the [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas "Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.") element without being _tainted_. The allowed values are:\n\n`anonymous`\n\nA cross-origin request (i.e. with an [`Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin "The Origin request header indicates where a fetch originates from. It doesn\'t include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn\'t disclose the whole path.") HTTP header) is performed, but no credential is sent (i.e. no cookie, X.509 certificate, or HTTP Basic authentication). If the server does not give credentials to the origin site (by not setting the [`Access-Control-Allow-Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin "The Access-Control-Allow-Origin response header indicates whether the response can be shared with requesting code from the given origin.") HTTP header) the image will be tainted and its usage restricted.\n\n`use-credentials`\n\nA cross-origin request (i.e. with an `Origin` HTTP header) is performed along with a credential sent (i.e. a cookie, certificate, and/or HTTP Basic authentication is performed). If the server does not give credentials to the origin site (through [`Access-Control-Allow-Credentials`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials "The Access-Control-Allow-Credentials response header tells browsers whether to expose the response to frontend JavaScript code when the request\'s credentials mode (Request.credentials) is "include".") HTTP header), the resource will be _tainted_ and its usage restricted.\n\nIf the attribute is not present, the resource is fetched without a [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS "CORS: CORS (Cross-Origin Resource Sharing) is a system, consisting of transmitting HTTP headers, that determines whether browsers block frontend JavaScript code from accessing responses for cross-origin requests.") request (i.e. without sending the `Origin` HTTP header), preventing its non-tainted usage. If invalid, it is handled as if the enumerated keyword **anonymous** was used. See [CORS settings attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) for additional information.'}},{name:"rel",description:{kind:"markdown",value:"This attribute names a relationship of the linked document to the current document. The attribute must be a space-separated list of the [link types values](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types)."}},{name:"media",description:{kind:"markdown",value:"This attribute specifies the media that the linked resource applies to. Its value must be a media type / [media query](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_queries). This attribute is mainly useful when linking to external stylesheets — it allows the user agent to pick the best adapted one for the device it runs on.\n\n**Notes:**\n\n*   In HTML 4, this can only be a simple white-space-separated list of media description literals, i.e., [media types and groups](https://developer.mozilla.org/en-US/docs/Web/CSS/@media), where defined and allowed as values for this attribute, such as `print`, `screen`, `aural`, `braille`. HTML5 extended this to any kind of [media queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_queries), which are a superset of the allowed values of HTML 4.\n*   Browsers not supporting [CSS3 Media Queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_queries) won't necessarily recognize the adequate link; do not forget to set fallback links, the restricted set of media queries defined in HTML 4."}},{name:"hreflang",description:{kind:"markdown",value:"This attribute indicates the language of the linked resource. It is purely advisory. Allowed values are determined by [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt). Use this attribute only if the [`href`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href) attribute is present."}},{name:"type",description:{kind:"markdown",value:'This attribute is used to define the type of the content linked to. The value of the attribute should be a MIME type such as **text/html**, **text/css**, and so on. The common use of this attribute is to define the type of stylesheet being referenced (such as **text/css**), but given that CSS is the only stylesheet language used on the web, not only is it possible to omit the `type` attribute, but is actually now recommended practice. It is also used on `rel="preload"` link types, to make sure the browser only downloads file types that it supports.'}},{name:"sizes",description:{kind:"markdown",value:"This attribute defines the sizes of the icons for visual media contained in the resource. It must be present only if the [`rel`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-rel) contains a value of `icon` or a non-standard type such as Apple's `apple-touch-icon`. It may have the following values:\n\n*   `any`, meaning that the icon can be scaled to any size as it is in a vector format, like `image/svg+xml`.\n*   a white-space separated list of sizes, each in the format `_<width in pixels>_x_<height in pixels>_` or `_<width in pixels>_X_<height in pixels>_`. Each of these sizes must be contained in the resource.\n\n**Note:** Most icon formats are only able to store one single icon; therefore most of the time the [`sizes`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-sizes) contains only one entry. MS's ICO format does, as well as Apple's ICNS. ICO is more ubiquitous; you should definitely use it."}},{name:"as",description:'This attribute is only used when `rel="preload"` or `rel="prefetch"` has been set on the `<link>` element. It specifies the type of content being loaded by the `<link>`, which is necessary for content prioritization, request matching, application of correct [content security policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP), and setting of correct [`Accept`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand. Using content negotiation, the server then selects one of the proposals, uses it and informs the client of its choice with the Content-Type response header. Browsers set adequate values for this header depending on the context where the request is done: when fetching a CSS stylesheet a different value is set for the request than when fetching an image, video or a script.") request header.'},{name:"importance",description:"Indicates the relative importance of the resource. Priority hints are delegated using the values:"},{name:"importance",description:'**`auto`**: Indicates **no preference**. The browser may use its own heuristics to decide the priority of the resource.\n\n**`high`**: Indicates to the browser that the resource is of **high** priority.\n\n**`low`**: Indicates to the browser that the resource is of **low** priority.\n\n**Note:** The `importance` attribute may only be used for the `<link>` element if `rel="preload"` or `rel="prefetch"` is present.'},{name:"integrity",description:"Contains inline metadata — a base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch. The browser can use this to verify that the fetched resource has been delivered free of unexpected manipulation. See [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)."},{name:"referrerpolicy",description:'A string indicating which referrer to use when fetching the resource:\n\n*   `no-referrer` means that the [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent.\n*   `no-referrer-when-downgrade` means that no [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will be sent when navigating to an origin without TLS (HTTPS). This is a user agent’s default behavior, if no policy is otherwise specified.\n*   `origin` means that the referrer will be the origin of the page, which is roughly the scheme, the host, and the port.\n*   `origin-when-cross-origin` means that navigating to other origins will be limited to the scheme, the host, and the port, while navigating on the same origin will include the referrer\'s path.\n*   `unsafe-url` means that the referrer will include the origin and the path (but not the fragment, password, or username). This case is unsafe because it can leak origins and paths from TLS-protected resources to insecure origins.'},{name:"title",description:'The `title` attribute has special semantics on the `<link>` element. When used on a `<link rel="stylesheet">` it defines a [preferred or an alternate stylesheet](https://developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets). Incorrectly using it may [cause the stylesheet to be ignored](https://developer.mozilla.org/en-US/docs/Correctly_Using_Titles_With_External_Stylesheets).'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/link"}]},{name:"meta",description:{kind:"markdown",value:"The meta element represents various kinds of metadata that cannot be expressed using the title, base, link, style, and script elements."},attributes:[{name:"name",description:{kind:"markdown",value:`This attribute defines the name of a piece of document-level metadata. It should not be set if one of the attributes [\`itemprop\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-itemprop), [\`http-equiv\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-http-equiv) or [\`charset\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-charset) is also set.

This metadata name is associated with the value contained by the [\`content\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-content) attribute. The possible values for the name attribute are:

*   \`application-name\` which defines the name of the application running in the web page.
    
    **Note:**
    
    *   Browsers may use this to identify the application. It is different from the [\`<title>\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title "The HTML Title element (<title>) defines the document's title that is shown in a browser's title bar or a page's tab.") element, which usually contain the application name, but may also contain information like the document name or a status.
    *   Simple web pages shouldn't define an application-name.
    
*   \`author\` which defines the name of the document's author.
*   \`description\` which contains a short and accurate summary of the content of the page. Several browsers, like Firefox and Opera, use this as the default description of bookmarked pages.
*   \`generator\` which contains the identifier of the software that generated the page.
*   \`keywords\` which contains words relevant to the page's content separated by commas.
*   \`referrer\` which controls the [\`Referer\` HTTP header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) attached to requests sent from the document:
    
    Values for the \`content\` attribute of \`<meta name="referrer">\`
    
    \`no-referrer\`
    
    Do not send a HTTP \`Referrer\` header.
    
    \`origin\`
    
    Send the [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin) of the document.
    
    \`no-referrer-when-downgrade\`
    
    Send the [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin) as a referrer to URLs as secure as the current page, (https→https), but does not send a referrer to less secure URLs (https→http). This is the default behaviour.
    
    \`origin-when-cross-origin\`
    
    Send the full URL (stripped of parameters) for same-origin requests, but only send the [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin) for other cases.
    
    \`same-origin\`
    
    A referrer will be sent for [same-site origins](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy), but cross-origin requests will contain no referrer information.
    
    \`strict-origin\`
    
    Only send the origin of the document as the referrer to a-priori as-much-secure destination (HTTPS->HTTPS), but don't send it to a less secure destination (HTTPS->HTTP).
    
    \`strict-origin-when-cross-origin\`
    
    Send a full URL when performing a same-origin request, only send the origin of the document to a-priori as-much-secure destination (HTTPS->HTTPS), and send no header to a less secure destination (HTTPS->HTTP).
    
    \`unsafe-URL\`
    
    Send the full URL (stripped of parameters) for same-origin or cross-origin requests.
    
    **Notes:**
    
    *   Some browsers support the deprecated values of \`always\`, \`default\`, and \`never\` for referrer.
    *   Dynamically inserting \`<meta name="referrer">\` (with [\`document.write\`](https://developer.mozilla.org/en-US/docs/Web/API/Document/write) or [\`appendChild\`](https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild)) makes the referrer behaviour unpredictable.
    *   When several conflicting policies are defined, the no-referrer policy is applied.
    

This attribute may also have a value taken from the extended list defined on [WHATWG Wiki MetaExtensions page](https://wiki.whatwg.org/wiki/MetaExtensions). Although none have been formally accepted yet, a few commonly used names are:

*   \`creator\` which defines the name of the creator of the document, such as an organization or institution. If there are more than one, several [\`<meta>\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") elements should be used.
*   \`googlebot\`, a synonym of \`robots\`, is only followed by Googlebot (the indexing crawler for Google).
*   \`publisher\` which defines the name of the document's publisher.
*   \`robots\` which defines the behaviour that cooperative crawlers, or "robots", should use with the page. It is a comma-separated list of the values below:
    
    Values for the content of \`<meta name="robots">\`
    
    Value
    
    Description
    
    Used by
    
    \`index\`
    
    Allows the robot to index the page (default).
    
    All
    
    \`noindex\`
    
    Requests the robot to not index the page.
    
    All
    
    \`follow\`
    
    Allows the robot to follow the links on the page (default).
    
    All
    
    \`nofollow\`
    
    Requests the robot to not follow the links on the page.
    
    All
    
    \`none\`
    
    Equivalent to \`noindex, nofollow\`
    
    [Google](https://support.google.com/webmasters/answer/79812)
    
    \`noodp\`
    
    Prevents using the [Open Directory Project](https://www.dmoz.org/) description, if any, as the page description in search engine results.
    
    [Google](https://support.google.com/webmasters/answer/35624#nodmoz), [Yahoo](https://help.yahoo.com/kb/search-for-desktop/meta-tags-robotstxt-yahoo-search-sln2213.html#cont5), [Bing](https://www.bing.com/webmaster/help/which-robots-metatags-does-bing-support-5198d240)
    
    \`noarchive\`
    
    Requests the search engine not to cache the page content.
    
    [Google](https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag#valid-indexing--serving-directives), [Yahoo](https://help.yahoo.com/kb/search-for-desktop/SLN2213.html), [Bing](https://www.bing.com/webmaster/help/which-robots-metatags-does-bing-support-5198d240)
    
    \`nosnippet\`
    
    Prevents displaying any description of the page in search engine results.
    
    [Google](https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag#valid-indexing--serving-directives), [Bing](https://www.bing.com/webmaster/help/which-robots-metatags-does-bing-support-5198d240)
    
    \`noimageindex\`
    
    Requests this page not to appear as the referring page of an indexed image.
    
    [Google](https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag#valid-indexing--serving-directives)
    
    \`nocache\`
    
    Synonym of \`noarchive\`.
    
    [Bing](https://www.bing.com/webmaster/help/which-robots-metatags-does-bing-support-5198d240)
    
    **Notes:**
    
    *   Only cooperative robots follow these rules. Do not expect to prevent e-mail harvesters with them.
    *   The robot still needs to access the page in order to read these rules. To prevent bandwidth consumption, use a _[robots.txt](https://developer.mozilla.org/en-US/docs/Glossary/robots.txt "robots.txt: Robots.txt is a file which is usually placed in the root of any website. It decides whether crawlers are permitted or forbidden access to the web site.")_ file.
    *   If you want to remove a page, \`noindex\` will work, but only after the robot visits the page again. Ensure that the \`robots.txt\` file is not preventing revisits.
    *   Some values are mutually exclusive, like \`index\` and \`noindex\`, or \`follow\` and \`nofollow\`. In these cases the robot's behaviour is undefined and may vary between them.
    *   Some crawler robots, like Google, Yahoo and Bing, support the same values for the HTTP header \`X-Robots-Tag\`; this allows non-HTML documents like images to use these rules.
    
*   \`slurp\`, is a synonym of \`robots\`, but only for Slurp - the crawler for Yahoo Search.
*   \`viewport\`, which gives hints about the size of the initial size of the [viewport](https://developer.mozilla.org/en-US/docs/Glossary/viewport "viewport: A viewport represents a polygonal (normally rectangular) area in computer graphics that is currently being viewed. In web browser terms, it refers to the part of the document you're viewing which is currently visible in its window (or the screen, if the document is being viewed in full screen mode). Content outside the viewport is not visible onscreen until scrolled into view."). Used by mobile devices only.
    
    Values for the content of \`<meta name="viewport">\`
    
    Value
    
    Possible subvalues
    
    Description
    
    \`width\`
    
    A positive integer number, or the text \`device-width\`
    
    Defines the pixel width of the viewport that you want the web site to be rendered at.
    
    \`height\`
    
    A positive integer, or the text \`device-height\`
    
    Defines the height of the viewport. Not used by any browser.
    
    \`initial-scale\`
    
    A positive number between \`0.0\` and \`10.0\`
    
    Defines the ratio between the device width (\`device-width\` in portrait mode or \`device-height\` in landscape mode) and the viewport size.
    
    \`maximum-scale\`
    
    A positive number between \`0.0\` and \`10.0\`
    
    Defines the maximum amount to zoom in. It must be greater or equal to the \`minimum-scale\` or the behaviour is undefined. Browser settings can ignore this rule and iOS10+ ignores it by default.
    
    \`minimum-scale\`
    
    A positive number between \`0.0\` and \`10.0\`
    
    Defines the minimum zoom level. It must be smaller or equal to the \`maximum-scale\` or the behaviour is undefined. Browser settings can ignore this rule and iOS10+ ignores it by default.
    
    \`user-scalable\`
    
    \`yes\` or \`no\`
    
    If set to \`no\`, the user is not able to zoom in the webpage. The default is \`yes\`. Browser settings can ignore this rule, and iOS10+ ignores it by default.
    
    Specification
    
    Status
    
    Comment
    
    [CSS Device Adaptation  
    The definition of '<meta name="viewport">' in that specification.](https://drafts.csswg.org/css-device-adapt/#viewport-meta)
    
    Working Draft
    
    Non-normatively describes the Viewport META element
    
    See also: [\`@viewport\`](https://developer.mozilla.org/en-US/docs/Web/CSS/@viewport "The @viewport CSS at-rule lets you configure the viewport through which the document is viewed. It's primarily used for mobile devices, but is also used by desktop browsers that support features like "snap to edge" (such as Microsoft Edge).")
    
    **Notes:**
    
    *   Though unstandardized, this declaration is respected by most mobile browsers due to de-facto dominance.
    *   The default values may vary between devices and browsers.
    *   To learn about this declaration in Firefox for Mobile, see [this article](https://developer.mozilla.org/en-US/docs/Mobile/Viewport_meta_tag "Mobile/Viewport meta tag").`}},{name:"http-equiv",description:{kind:"markdown",value:'Defines a pragma directive. The attribute is named `**http-equiv**(alent)` because all the allowed values are names of particular HTTP headers:\n\n*   `"content-language"`  \n    Defines the default language of the page. It can be overridden by the [lang](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang) attribute on any element.\n    \n    **Warning:** Do not use this value, as it is obsolete. Prefer the `lang` attribute on the [`<html>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html "The HTML <html> element represents the root (top-level element) of an HTML document, so it is also referred to as the root element. All other elements must be descendants of this element.") element.\n    \n*   `"content-security-policy"`  \n    Allows page authors to define a [content policy](https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives) for the current page. Content policies mostly specify allowed server origins and script endpoints which help guard against cross-site scripting attacks.\n*   `"content-type"`  \n    Defines the [MIME type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type) of the document, followed by its character encoding. It follows the same syntax as the HTTP `content-type` entity-header field, but as it is inside a HTML page, most values other than `text/html` are impossible. Therefore the valid syntax for its `content` is the string \'`text/html`\' followed by a character set with the following syntax: \'`; charset=_IANAcharset_`\', where `IANAcharset` is the _preferred MIME name_ for a character set as [defined by the IANA.](https://www.iana.org/assignments/character-sets)\n    \n    **Warning:** Do not use this value, as it is obsolete. Use the [`charset`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-charset) attribute on the [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") element.\n    \n    **Note:** As [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") can\'t change documents\' types in XHTML or HTML5\'s XHTML serialization, never set the MIME type to an XHTML MIME type with `<meta>`.\n    \n*   `"refresh"`  \n    This instruction specifies:\n    *   The number of seconds until the page should be reloaded - only if the [`content`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-content) attribute contains a positive integer.\n    *   The number of seconds until the page should redirect to another - only if the [`content`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-content) attribute contains a positive integer followed by the string \'`;url=`\', and a valid URL.\n*   `"set-cookie"`  \n    Defines a [cookie](https://developer.mozilla.org/en-US/docs/cookie) for the page. Its content must follow the syntax defined in the [IETF HTTP Cookie Specification](https://tools.ietf.org/html/draft-ietf-httpstate-cookie-14).\n    \n    **Warning:** Do not use this instruction, as it is obsolete. Use the HTTP header [`Set-Cookie`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie) instead.'}},{name:"content",description:{kind:"markdown",value:"This attribute contains the value for the [`http-equiv`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-http-equiv) or [`name`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-name) attribute, depending on which is used."}},{name:"charset",description:{kind:"markdown",value:'This attribute declares the page\'s character encoding. It must contain a [standard IANA MIME name for character encodings](https://www.iana.org/assignments/character-sets). Although the standard doesn\'t request a specific encoding, it suggests:\n\n*   Authors are encouraged to use [`UTF-8`](https://developer.mozilla.org/en-US/docs/Glossary/UTF-8).\n*   Authors should not use ASCII-incompatible encodings to avoid security risk: browsers not supporting them may interpret harmful content as HTML. This happens with the `JIS_C6226-1983`, `JIS_X0212-1990`, `HZ-GB-2312`, `JOHAB`, the ISO-2022 family and the EBCDIC family.\n\n**Note:** ASCII-incompatible encodings are those that don\'t map the 8-bit code points `0x20` to `0x7E` to the `0x0020` to `0x007E` Unicode code points)\n\n*   Authors **must not** use `CESU-8`, `UTF-7`, `BOCU-1` and/or `SCSU` as [cross-site scripting](https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting) attacks with these encodings have been demonstrated.\n*   Authors should not use `UTF-32` because not all HTML5 encoding algorithms can distinguish it from `UTF-16`.\n\n**Notes:**\n\n*   The declared character encoding must match the one the page was saved with to avoid garbled characters and security holes.\n*   The [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") element declaring the encoding must be inside the [`<head>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head "The HTML <head> element provides general information (metadata) about the document, including its title and links to its scripts and style sheets.") element and **within the first 1024 bytes** of the HTML as some browsers only look at those bytes before choosing an encoding.\n*   This [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") element is only one part of the [algorithm to determine a page\'s character set](https://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#encoding-sniffing-algorithm "Algorithm charset page"). The [`Content-Type` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type) and any [Byte-Order Marks](https://developer.mozilla.org/en-US/docs/Glossary/Byte-Order_Mark "The definition of that term (Byte-Order Marks) has not been written yet; please consider contributing it!") override this element.\n*   It is strongly recommended to define the character encoding. If a page\'s encoding is undefined, cross-scripting techniques are possible, such as the [`UTF-7` fallback cross-scripting technique](https://code.google.com/p/doctype-mirror/wiki/ArticleUtf7).\n*   The [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") element with a `charset` attribute is a synonym for the pre-HTML5 `<meta http-equiv="Content-Type" content="text/html; charset=_IANAcharset_">`, where _`IANAcharset`_ contains the value of the equivalent [`charset`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-charset) attribute. This syntax is still allowed, although no longer recommended.'}},{name:"scheme",description:"This attribute defines the scheme in which metadata is described. A scheme is a context leading to the correct interpretations of the [`content`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-content) value, like a format.\n\n**Warning:** Do not use this value, as it is obsolete. There is no replacement as there was no real usage for it."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/meta"}]},{name:"style",description:{kind:"markdown",value:"The style element allows authors to embed style information in their documents. The style element is one of several inputs to the styling processing model. The element does not represent content for the user."},attributes:[{name:"media",description:{kind:"markdown",value:"This attribute defines which media the style should be applied to. Its value is a [media query](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries), which defaults to `all` if the attribute is missing."}},{name:"nonce",description:{kind:"markdown",value:"A cryptographic nonce (number used once) used to whitelist inline styles in a [style-src Content-Security-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src). The server must generate a unique nonce value each time it transmits a policy. It is critical to provide a nonce that cannot be guessed as bypassing a resource’s policy is otherwise trivial."}},{name:"type",description:{kind:"markdown",value:"This attribute defines the styling language as a MIME type (charset should not be specified). This attribute is optional and defaults to `text/css` if it is not specified — there is very little reason to include this in modern web documents."}},{name:"scoped",valueSet:"v"},{name:"title",description:"This attribute specifies [alternative style sheet](https://developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets) sets."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/style"}]},{name:"body",description:{kind:"markdown",value:"The body element represents the content of the document."},attributes:[{name:"onafterprint",description:{kind:"markdown",value:"Function to call after the user has printed the document."}},{name:"onbeforeprint",description:{kind:"markdown",value:"Function to call when the user requests printing of the document."}},{name:"onbeforeunload",description:{kind:"markdown",value:"Function to call when the document is about to be unloaded."}},{name:"onhashchange",description:{kind:"markdown",value:"Function to call when the fragment identifier part (starting with the hash (`'#'`) character) of the document's current address has changed."}},{name:"onlanguagechange",description:{kind:"markdown",value:"Function to call when the preferred languages changed."}},{name:"onmessage",description:{kind:"markdown",value:"Function to call when the document has received a message."}},{name:"onoffline",description:{kind:"markdown",value:"Function to call when network communication has failed."}},{name:"ononline",description:{kind:"markdown",value:"Function to call when network communication has been restored."}},{name:"onpagehide"},{name:"onpageshow"},{name:"onpopstate",description:{kind:"markdown",value:"Function to call when the user has navigated session history."}},{name:"onstorage",description:{kind:"markdown",value:"Function to call when the storage area has changed."}},{name:"onunload",description:{kind:"markdown",value:"Function to call when the document is going away."}},{name:"alink",description:'Color of text for hyperlinks when selected. _This method is non-conforming, use CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color "The color CSS property sets the foreground color value of an element\'s text and text decorations, and sets the currentcolor value.") property in conjunction with the [`:active`](https://developer.mozilla.org/en-US/docs/Web/CSS/:active "The :active CSS pseudo-class represents an element (such as a button) that is being activated by the user.") pseudo-class instead._'},{name:"background",description:'URI of a image to use as a background. _This method is non-conforming, use CSS [`background`](https://developer.mozilla.org/en-US/docs/Web/CSS/background "The background shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.") property on the element instead._'},{name:"bgcolor",description:'Background color for the document. _This method is non-conforming, use CSS [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color "The background-color CSS property sets the background color of an element.") property on the element instead._'},{name:"bottommargin",description:'The margin of the bottom of the body. _This method is non-conforming, use CSS [`margin-bottom`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom "The margin-bottom CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") property on the element instead._'},{name:"leftmargin",description:'The margin of the left of the body. _This method is non-conforming, use CSS [`margin-left`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left "The margin-left CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") property on the element instead._'},{name:"link",description:'Color of text for unvisited hypertext links. _This method is non-conforming, use CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color "The color CSS property sets the foreground color value of an element\'s text and text decorations, and sets the currentcolor value.") property in conjunction with the [`:link`](https://developer.mozilla.org/en-US/docs/Web/CSS/:link "The :link CSS pseudo-class represents an element that has not yet been visited. It matches every unvisited <a>, <area>, or <link> element that has an href attribute.") pseudo-class instead._'},{name:"onblur",description:"Function to call when the document loses focus."},{name:"onerror",description:"Function to call when the document fails to load properly."},{name:"onfocus",description:"Function to call when the document receives focus."},{name:"onload",description:"Function to call when the document has finished loading."},{name:"onredo",description:"Function to call when the user has moved forward in undo transaction history."},{name:"onresize",description:"Function to call when the document has been resized."},{name:"onundo",description:"Function to call when the user has moved backward in undo transaction history."},{name:"rightmargin",description:'The margin of the right of the body. _This method is non-conforming, use CSS [`margin-right`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right "The margin-right CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") property on the element instead._'},{name:"text",description:'Foreground color of text. _This method is non-conforming, use CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color "The color CSS property sets the foreground color value of an element\'s text and text decorations, and sets the currentcolor value.") property on the element instead._'},{name:"topmargin",description:'The margin of the top of the body. _This method is non-conforming, use CSS [`margin-top`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top "The margin-top CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") property on the element instead._'},{name:"vlink",description:'Color of text for visited hypertext links. _This method is non-conforming, use CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color "The color CSS property sets the foreground color value of an element\'s text and text decorations, and sets the currentcolor value.") property in conjunction with the [`:visited`](https://developer.mozilla.org/en-US/docs/Web/CSS/:visited "The :visited CSS pseudo-class represents links that the user has already visited. For privacy reasons, the styles that can be modified using this selector are very limited.") pseudo-class instead._'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/body"}]},{name:"article",description:{kind:"markdown",value:"The article element represents a complete, or self-contained, composition in a document, page, application, or site and that is, in principle, independently distributable or reusable, e.g. in syndication. This could be a forum post, a magazine or newspaper article, a blog entry, a user-submitted comment, an interactive widget or gadget, or any other independent item of content. Each article should be identified, typically by including a heading (h1–h6 element) as a child of the article element."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/article"}]},{name:"section",description:{kind:"markdown",value:"The section element represents a generic section of a document or application. A section, in this context, is a thematic grouping of content. Each section should be identified, typically by including a heading ( h1- h6 element) as a child of the section element."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/section"}]},{name:"nav",description:{kind:"markdown",value:"The nav element represents a section of a page that links to other pages or to parts within the page: a section with navigation links."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/nav"}]},{name:"aside",description:{kind:"markdown",value:"The aside element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content. Such sections are often represented as sidebars in printed typography."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/aside"}]},{name:"h1",description:{kind:"markdown",value:"The h1 element represents a section heading."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]},{name:"h2",description:{kind:"markdown",value:"The h2 element represents a section heading."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]},{name:"h3",description:{kind:"markdown",value:"The h3 element represents a section heading."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]},{name:"h4",description:{kind:"markdown",value:"The h4 element represents a section heading."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]},{name:"h5",description:{kind:"markdown",value:"The h5 element represents a section heading."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]},{name:"h6",description:{kind:"markdown",value:"The h6 element represents a section heading."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]},{name:"header",description:{kind:"markdown",value:"The header element represents introductory content for its nearest ancestor sectioning content or sectioning root element. A header typically contains a group of introductory or navigational aids. When the nearest ancestor sectioning content or sectioning root element is the body element, then it applies to the whole page."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/header"}]},{name:"footer",description:{kind:"markdown",value:"The footer element represents a footer for its nearest ancestor sectioning content or sectioning root element. A footer typically contains information about its section such as who wrote it, links to related documents, copyright data, and the like."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/footer"}]},{name:"address",description:{kind:"markdown",value:"The address element represents the contact information for its nearest article or body element ancestor. If that is the body element, then the contact information applies to the document as a whole."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/address"}]},{name:"p",description:{kind:"markdown",value:"The p element represents a paragraph."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/p"}]},{name:"hr",description:{kind:"markdown",value:"The hr element represents a paragraph-level thematic break, e.g. a scene change in a story, or a transition to another topic within a section of a reference book."},attributes:[{name:"align",description:"Sets the alignment of the rule on the page. If no value is specified, the default value is `left`."},{name:"color",description:"Sets the color of the rule through color name or hexadecimal value."},{name:"noshade",description:"Sets the rule to have no shading."},{name:"size",description:"Sets the height, in pixels, of the rule."},{name:"width",description:"Sets the length of the rule on the page through a pixel or percentage value."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/hr"}]},{name:"pre",description:{kind:"markdown",value:"The pre element represents a block of preformatted text, in which structure is represented by typographic conventions rather than by elements."},attributes:[{name:"cols",description:'Contains the _preferred_ count of characters that a line should have. It was a non-standard synonym of [`width`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre#attr-width). To achieve such an effect, use CSS [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width "The width CSS property sets an element\'s width. By default it sets the width of the content area, but if box-sizing is set to border-box, it sets the width of the border area.") instead.'},{name:"width",description:'Contains the _preferred_ count of characters that a line should have. Though technically still implemented, this attribute has no visual effect; to achieve such an effect, use CSS [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width "The width CSS property sets an element\'s width. By default it sets the width of the content area, but if box-sizing is set to border-box, it sets the width of the border area.") instead.'},{name:"wrap",description:'Is a _hint_ indicating how the overflow must happen. In modern browser this hint is ignored and no visual effect results in its present; to achieve such an effect, use CSS [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space "The white-space CSS property sets how white space inside an element is handled.") instead.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/pre"}]},{name:"blockquote",description:{kind:"markdown",value:"The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations."},attributes:[{name:"cite",description:{kind:"markdown",value:"A URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/blockquote"}]},{name:"ol",description:{kind:"markdown",value:"The ol element represents a list of items, where the items have been intentionally ordered, such that changing the order would change the meaning of the document."},attributes:[{name:"reversed",valueSet:"v",description:{kind:"markdown",value:"This Boolean attribute specifies that the items of the list are specified in reversed order."}},{name:"start",description:{kind:"markdown",value:'This integer attribute specifies the start value for numbering the individual list items. Although the ordering type of list elements might be Roman numerals, such as XXXI, or letters, the value of start is always represented as a number. To start numbering elements from the letter "C", use `<ol start="3">`.\n\n**Note**: This attribute was deprecated in HTML4, but reintroduced in HTML5.'}},{name:"type",valueSet:"lt",description:{kind:"markdown",value:"Indicates the numbering type:\n\n*   `'a'` indicates lowercase letters,\n*   `'A'` indicates uppercase letters,\n*   `'i'` indicates lowercase Roman numerals,\n*   `'I'` indicates uppercase Roman numerals,\n*   and `'1'` indicates numbers (default).\n\nThe type set is used for the entire list unless a different [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li#attr-type) attribute is used within an enclosed [`<li>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li \"The HTML <li> element is used to represent an item in a list. It must be contained in a parent element: an ordered list (<ol>), an unordered list (<ul>), or a menu (<menu>). In menus and unordered lists, list items are usually displayed using bullet points. In ordered lists, they are usually displayed with an ascending counter on the left, such as a number or letter.\") element.\n\n**Note:** This attribute was deprecated in HTML4, but reintroduced in HTML5.\n\nUnless the value of the list number matters (e.g. in legal or technical documents where items are to be referenced by their number/letter), the CSS [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type \"The list-style-type CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.\") property should be used instead."}},{name:"compact",description:'This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn\'t work in all browsers.\n\n**Warning:** Do not use this attribute, as it has been deprecated: the [`<ol>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol "The HTML <ol> element represents an ordered list of items, typically rendered as a numbered list.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/CSS). To give an effect similar to the `compact` attribute, the [CSS](https://developer.mozilla.org/en-US/docs/CSS) property [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height "The line-height CSS property sets the amount of space used for lines, such as in text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height.") can be used with a value of `80%`.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/ol"}]},{name:"ul",description:{kind:"markdown",value:"The ul element represents a list of items, where the order of the items is not important — that is, where changing the order would not materially change the meaning of the document."},attributes:[{name:"compact",description:'This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn\'t work in all browsers.\n\n**Usage note: **Do not use this attribute, as it has been deprecated: the [`<ul>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul "The HTML <ul> element represents an unordered list of items, typically rendered as a bulleted list.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/CSS). To give a similar effect as the `compact` attribute, the [CSS](https://developer.mozilla.org/en-US/docs/CSS) property [line-height](https://developer.mozilla.org/en-US/docs/CSS/line-height) can be used with a value of `80%`.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/ul"}]},{name:"li",description:{kind:"markdown",value:"The li element represents a list item. If its parent element is an ol, ul, or menu element, then the element is an item of the parent element's list, as defined for those elements. Otherwise, the list item has no defined list-related relationship to any other li element."},attributes:[{name:"value",description:{kind:"markdown",value:'This integer attribute indicates the current ordinal value of the list item as defined by the [`<ol>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol "The HTML <ol> element represents an ordered list of items, typically rendered as a numbered list.") element. The only allowed value for this attribute is a number, even if the list is displayed with Roman numerals or letters. List items that follow this one continue numbering from the value set. The **value** attribute has no meaning for unordered lists ([`<ul>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul "The HTML <ul> element represents an unordered list of items, typically rendered as a bulleted list.")) or for menus ([`<menu>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu "The HTML <menu> element represents a group of commands that a user can perform or activate. This includes both list menus, which might appear across the top of a screen, as well as context menus, such as those that might appear underneath a button after it has been clicked.")).\n\n**Note**: This attribute was deprecated in HTML4, but reintroduced in HTML5.\n\n**Note:** Prior to Gecko 9.0, negative values were incorrectly converted to 0. Starting in Gecko 9.0 all integer values are correctly parsed.'}},{name:"type",description:'This character attribute indicates the numbering type:\n\n*   `a`: lowercase letters\n*   `A`: uppercase letters\n*   `i`: lowercase Roman numerals\n*   `I`: uppercase Roman numerals\n*   `1`: numbers\n\nThis type overrides the one used by its parent [`<ol>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol "The HTML <ol> element represents an ordered list of items, typically rendered as a numbered list.") element, if any.\n\n**Usage note:** This attribute has been deprecated: use the CSS [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type "The list-style-type CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.") property instead.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/li"}]},{name:"dl",description:{kind:"markdown",value:"The dl element represents an association list consisting of zero or more name-value groups (a description list). A name-value group consists of one or more names (dt elements) followed by one or more values (dd elements), ignoring any nodes other than dt and dd elements. Within a single dl element, there should not be more than one dt element for each name."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/dl"}]},{name:"dt",description:{kind:"markdown",value:"The dt element represents the term, or name, part of a term-description group in a description list (dl element)."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/dt"}]},{name:"dd",description:{kind:"markdown",value:"The dd element represents the description, definition, or value, part of a term-description group in a description list (dl element)."},attributes:[{name:"nowrap",description:"If the value of this attribute is set to `yes`, the definition text will not wrap. The default value is `no`."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/dd"}]},{name:"figure",description:{kind:"markdown",value:"The figure element represents some flow content, optionally with a caption, that is self-contained (like a complete sentence) and is typically referenced as a single unit from the main flow of the document."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/figure"}]},{name:"figcaption",description:{kind:"markdown",value:"The figcaption element represents a caption or legend for the rest of the contents of the figcaption element's parent figure element, if any."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/figcaption"}]},{name:"main",description:{kind:"markdown",value:"The main element represents the main content of the body of a document or application. The main content area consists of content that is directly related to or expands upon the central topic of a document or central functionality of an application."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/main"}]},{name:"div",description:{kind:"markdown",value:"The div element has no special meaning at all. It represents its children. It can be used with the class, lang, and title attributes to mark up semantics common to a group of consecutive elements."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/div"}]},{name:"a",description:{kind:"markdown",value:"If the a element has an href attribute, then it represents a hyperlink (a hypertext anchor) labeled by its contents."},attributes:[{name:"href",description:{kind:"markdown",value:"Contains a URL or a URL fragment that the hyperlink points to."}},{name:"target",description:{kind:"markdown",value:'Specifies where to display the linked URL. It is a name of, or keyword for, a _browsing context_: a tab, window, or `<iframe>`. The following keywords have special meanings:\n\n*   `_self`: Load the URL into the same browsing context as the current one. This is the default behavior.\n*   `_blank`: Load the URL into a new browsing context. This is usually a tab, but users can configure browsers to use new windows instead.\n*   `_parent`: Load the URL into the parent browsing context of the current one. If there is no parent, this behaves the same way as `_self`.\n*   `_top`: Load the URL into the top-level browsing context (that is, the "highest" browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this behaves the same way as `_self`.\n\n**Note:** When using `target`, consider adding `rel="noreferrer"` to avoid exploitation of the `window.opener` API.\n\n**Note:** Linking to another page using `target="_blank"` will run the new page on the same process as your page. If the new page is executing expensive JS, your page\'s performance may suffer. To avoid this use `rel="noopener"`.'}},{name:"download",description:{kind:"markdown",value:"This attribute instructs browsers to download a URL instead of navigating to it, so the user will be prompted to save it as a local file. If the attribute has a value, it is used as the pre-filled file name in the Save prompt (the user can still change the file name if they want). There are no restrictions on allowed values, though `/` and `\\` are converted to underscores. Most file systems limit some punctuation in file names, and browsers will adjust the suggested name accordingly.\n\n**Notes:**\n\n*   This attribute only works for [same-origin URLs](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy).\n*   Although HTTP(s) URLs need to be in the same-origin, [`blob:` URLs](https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL) and [`data:` URLs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs) are allowed so that content generated by JavaScript, such as pictures created in an image-editor Web app, can be downloaded.\n*   If the HTTP header [`Content-Disposition:`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition) gives a different filename than this attribute, the HTTP header takes priority over this attribute.\n*   If `Content-Disposition:` is set to `inline`, Firefox prioritizes `Content-Disposition`, like the filename case, while Chrome prioritizes the `download` attribute."}},{name:"ping",description:{kind:"markdown",value:'Contains a space-separated list of URLs to which, when the hyperlink is followed, [`POST`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST "The HTTP POST method sends data to the server. The type of the body of the request is indicated by the Content-Type header.") requests with the body `PING` will be sent by the browser (in the background). Typically used for tracking.'}},{name:"rel",description:{kind:"markdown",value:"Specifies the relationship of the target object to the link object. The value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types)."}},{name:"hreflang",description:{kind:"markdown",value:'This attribute indicates the human language of the linked resource. It is purely advisory, with no built-in functionality. Allowed values are determined by [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt "Tags for Identifying Languages").'}},{name:"type",description:{kind:"markdown",value:'Specifies the media type in the form of a [MIME type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type "MIME type: A MIME type (now properly called "media type", but also sometimes "content type") is a string sent along with a file indicating the type of the file (describing the content format, for example, a sound file might be labeled audio/ogg, or an image file image/png).") for the linked URL. It is purely advisory, with no built-in functionality.'}},{name:"referrerpolicy",description:"Indicates which [referrer](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) to send when fetching the URL:\n\n*   `'no-referrer'` means the `Referer:` header will not be sent.\n*   `'no-referrer-when-downgrade'` means no `Referer:` header will be sent when navigating to an origin without HTTPS. This is the default behavior.\n*   `'origin'` means the referrer will be the [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin) of the page, not including information after the domain.\n*   `'origin-when-cross-origin'` meaning that navigations to other origins will be limited to the scheme, the host and the port, while navigations on the same origin will include the referrer's path.\n*   `'strict-origin-when-cross-origin'`\n*   `'unsafe-url'` means the referrer will include the origin and path, but not the fragment, password, or username. This is unsafe because it can leak data from secure URLs to insecure ones."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/a"}]},{name:"em",description:{kind:"markdown",value:"The em element represents stress emphasis of its contents."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/em"}]},{name:"strong",description:{kind:"markdown",value:"The strong element represents strong importance, seriousness, or urgency for its contents."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/strong"}]},{name:"small",description:{kind:"markdown",value:"The small element represents side comments such as small print."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/small"}]},{name:"s",description:{kind:"markdown",value:"The s element represents contents that are no longer accurate or no longer relevant."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/s"}]},{name:"cite",description:{kind:"markdown",value:"The cite element represents a reference to a creative work. It must include the title of the work or the name of the author(person, people or organization) or an URL reference, or a reference in abbreviated form as per the conventions used for the addition of citation metadata."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/cite"}]},{name:"q",description:{kind:"markdown",value:"The q element represents some phrasing content quoted from another source."},attributes:[{name:"cite",description:{kind:"markdown",value:"The value of this attribute is a URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/q"}]},{name:"dfn",description:{kind:"markdown",value:"The dfn element represents the defining instance of a term. The paragraph, description list group, or section that is the nearest ancestor of the dfn element must also contain the definition(s) for the term given by the dfn element."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/dfn"}]},{name:"abbr",description:{kind:"markdown",value:"The abbr element represents an abbreviation or acronym, optionally with its expansion. The title attribute may be used to provide an expansion of the abbreviation. The attribute, if specified, must contain an expansion of the abbreviation, and nothing else."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/abbr"}]},{name:"ruby",description:{kind:"markdown",value:"The ruby element allows one or more spans of phrasing content to be marked with ruby annotations. Ruby annotations are short runs of text presented alongside base text, primarily used in East Asian typography as a guide for pronunciation or to include other annotations. In Japanese, this form of typography is also known as furigana. Ruby text can appear on either side, and sometimes both sides, of the base text, and it is possible to control its position using CSS. A more complete introduction to ruby can be found in the Use Cases & Exploratory Approaches for Ruby Markup document as well as in CSS Ruby Module Level 1. [RUBY-UC] [CSSRUBY]"},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/ruby"}]},{name:"rb",description:{kind:"markdown",value:"The rb element marks the base text component of a ruby annotation. When it is the child of a ruby element, it doesn't represent anything itself, but its parent ruby element uses it as part of determining what it represents."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/rb"}]},{name:"rt",description:{kind:"markdown",value:"The rt element marks the ruby text component of a ruby annotation. When it is the child of a ruby element or of an rtc element that is itself the child of a ruby element, it doesn't represent anything itself, but its ancestor ruby element uses it as part of determining what it represents."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/rt"}]},{name:"rp",description:{kind:"markdown",value:"The rp element is used to provide fallback text to be shown by user agents that don't support ruby annotations. One widespread convention is to provide parentheses around the ruby text component of a ruby annotation."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/rp"}]},{name:"time",description:{kind:"markdown",value:"The time element represents its contents, along with a machine-readable form of those contents in the datetime attribute. The kind of content is limited to various kinds of dates, times, time-zone offsets, and durations, as described below."},attributes:[{name:"datetime",description:{kind:"markdown",value:"This attribute indicates the time and/or date of the element and must be in one of the formats described below."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/time"}]},{name:"code",description:{kind:"markdown",value:"The code element represents a fragment of computer code. This could be an XML element name, a file name, a computer program, or any other string that a computer would recognize."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/code"}]},{name:"var",description:{kind:"markdown",value:"The var element represents a variable. This could be an actual variable in a mathematical expression or programming context, an identifier representing a constant, a symbol identifying a physical quantity, a function parameter, or just be a term used as a placeholder in prose."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/var"}]},{name:"samp",description:{kind:"markdown",value:"The samp element represents sample or quoted output from another program or computing system."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/samp"}]},{name:"kbd",description:{kind:"markdown",value:"The kbd element represents user input (typically keyboard input, although it may also be used to represent other input, such as voice commands)."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/kbd"}]},{name:"sub",description:{kind:"markdown",value:"The sub element represents a subscript."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/sub"}]},{name:"sup",description:{kind:"markdown",value:"The sup element represents a superscript."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/sup"}]},{name:"i",description:{kind:"markdown",value:"The i element represents a span of text in an alternate voice or mood, or otherwise offset from the normal prose in a manner indicating a different quality of text, such as a taxonomic designation, a technical term, an idiomatic phrase from another language, transliteration, a thought, or a ship name in Western texts."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/i"}]},{name:"b",description:{kind:"markdown",value:"The b element represents a span of text to which attention is being drawn for utilitarian purposes without conveying any extra importance and with no implication of an alternate voice or mood, such as key words in a document abstract, product names in a review, actionable words in interactive text-driven software, or an article lede."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/b"}]},{name:"u",description:{kind:"markdown",value:"The u element represents a span of text with an unarticulated, though explicitly rendered, non-textual annotation, such as labeling the text as being a proper name in Chinese text (a Chinese proper name mark), or labeling the text as being misspelt."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/u"}]},{name:"mark",description:{kind:"markdown",value:"The mark element represents a run of text in one document marked or highlighted for reference purposes, due to its relevance in another context. When used in a quotation or other block of text referred to from the prose, it indicates a highlight that was not originally present but which has been added to bring the reader's attention to a part of the text that might not have been considered important by the original author when the block was originally written, but which is now under previously unexpected scrutiny. When used in the main prose of a document, it indicates a part of the document that has been highlighted due to its likely relevance to the user's current activity."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/mark"}]},{name:"bdi",description:{kind:"markdown",value:"The bdi element represents a span of text that is to be isolated from its surroundings for the purposes of bidirectional text formatting. [BIDI]"},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/bdi"}]},{name:"bdo",description:{kind:"markdown",value:"The bdo element represents explicit text directionality formatting control for its children. It allows authors to override the Unicode bidirectional algorithm by explicitly specifying a direction override. [BIDI]"},attributes:[{name:"dir",description:"The direction in which text should be rendered in this element's contents. Possible values are:\n\n*   `ltr`: Indicates that the text should go in a left-to-right direction.\n*   `rtl`: Indicates that the text should go in a right-to-left direction."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/bdo"}]},{name:"span",description:{kind:"markdown",value:"The span element doesn't mean anything on its own, but can be useful when used together with the global attributes, e.g. class, lang, or dir. It represents its children."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/span"}]},{name:"br",description:{kind:"markdown",value:"The br element represents a line break."},attributes:[{name:"clear",description:"Indicates where to begin the next line after the break."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/br"}]},{name:"wbr",description:{kind:"markdown",value:"The wbr element represents a line break opportunity."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/wbr"}]},{name:"ins",description:{kind:"markdown",value:"The ins element represents an addition to the document."},attributes:[{name:"cite",description:"This attribute defines the URI of a resource that explains the change, such as a link to meeting minutes or a ticket in a troubleshooting system."},{name:"datetime",description:'This attribute indicates the time and date of the change and must be a valid date with an optional time string. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp. For the format of the string without a time, see [Format of a valid date string](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#Format_of_a_valid_date_string "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.") in [Date and time formats used in HTML](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article."). The format of the string if it includes both date and time is covered in [Format of a valid local date and time string](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#Format_of_a_valid_local_date_and_time_string "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.") in [Date and time formats used in HTML](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.").'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/ins"}]},{name:"del",description:{kind:"markdown",value:"The del element represents a removal from the document."},attributes:[{name:"cite",description:{kind:"markdown",value:"A URI for a resource that explains the change (for example, meeting minutes)."}},{name:"datetime",description:{kind:"markdown",value:'This attribute indicates the time and date of the change and must be a valid date string with an optional time. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp. For the format of the string without a time, see [Format of a valid date string](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#Format_of_a_valid_date_string "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.") in [Date and time formats used in HTML](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article."). The format of the string if it includes both date and time is covered in [Format of a valid local date and time string](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#Format_of_a_valid_local_date_and_time_string "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.") in [Date and time formats used in HTML](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.").'}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/del"}]},{name:"picture",description:{kind:"markdown",value:"The picture element is a container which provides multiple sources to its contained img element to allow authors to declaratively control or give hints to the user agent about which image resource to use, based on the screen pixel density, viewport size, image format, and other factors. It represents its children."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/picture"}]},{name:"img",description:{kind:"markdown",value:"An img element represents an image."},attributes:[{name:"alt",description:{kind:"markdown",value:'This attribute defines an alternative text description of the image.\n\n**Note:** Browsers do not always display the image referenced by the element. This is the case for non-graphical browsers (including those used by people with visual impairments), if the user chooses not to display images, or if the browser cannot display the image because it is invalid or an [unsupported type](#Supported_image_formats). In these cases, the browser may replace the image with the text defined in this element\'s `alt` attribute. You should, for these reasons and others, provide a useful value for `alt` whenever possible.\n\n**Note:** Omitting this attribute altogether indicates that the image is a key part of the content, and no textual equivalent is available. Setting this attribute to an empty string (`alt=""`) indicates that this image is _not_ a key part of the content (decorative), and that non-visual browsers may omit it from rendering.'}},{name:"src",description:{kind:"markdown",value:"The image URL. This attribute is mandatory for the `<img>` element. On browsers supporting `srcset`, `src` is treated like a candidate image with a pixel density descriptor `1x` unless an image with this pixel density descriptor is already defined in `srcset,` or unless `srcset` contains '`w`' descriptors."}},{name:"srcset",description:{kind:"markdown",value:"A list of one or more strings separated by commas indicating a set of possible image sources for the user agent to use. Each string is composed of:\n\n1.  a URL to an image,\n2.  optionally, whitespace followed by one of:\n    *   A width descriptor, or a positive integer directly followed by '`w`'. The width descriptor is divided by the source size given in the `sizes` attribute to calculate the effective pixel density.\n    *   A pixel density descriptor, which is a positive floating point number directly followed by '`x`'.\n\nIf no descriptor is specified, the source is assigned the default descriptor: `1x`.\n\nIt is incorrect to mix width descriptors and pixel density descriptors in the same `srcset` attribute. Duplicate descriptors (for instance, two sources in the same `srcset` which are both described with '`2x`') are also invalid.\n\nThe user agent selects any one of the available sources at its discretion. This provides them with significant leeway to tailor their selection based on things like user preferences or bandwidth conditions. See our [Responsive images](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images) tutorial for an example."}},{name:"crossorigin",valueSet:"xo",description:{kind:"markdown",value:'This enumerated attribute indicates if the fetching of the related image must be done using CORS or not. [CORS-enabled images](https://developer.mozilla.org/en-US/docs/CORS_Enabled_Image) can be reused in the [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas "Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.") element without being "[tainted](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image#What_is_a_tainted_canvas)." The allowed values are:'}},{name:"usemap",description:{kind:"markdown",value:'The partial URL (starting with \'#\') of an [image map](https://developer.mozilla.org/en-US/docs/HTML/Element/map) associated with the element.\n\n**Note:** You cannot use this attribute if the `<img>` element is a descendant of an [`<a>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a "The HTML <a> element (or anchor element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL.") or [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") element.'}},{name:"ismap",valueSet:"v",description:{kind:"markdown",value:'This Boolean attribute indicates that the image is part of a server-side map. If so, the precise coordinates of a click are sent to the server.\n\n**Note:** This attribute is allowed only if the `<img>` element is a descendant of an [`<a>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a "The HTML <a> element (or anchor element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL.") element with a valid [`href`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href) attribute.'}},{name:"width",description:{kind:"markdown",value:"The intrinsic width of the image in pixels."}},{name:"height",description:{kind:"markdown",value:"The intrinsic height of the image in pixels."}},{name:"decoding",description:"Provides an image decoding hint to the browser. The allowed values are:"},{name:"decoding",description:`\`sync\`

Decode the image synchronously for atomic presentation with other content.

\`async\`

Decode the image asynchronously to reduce delay in presenting other content.

\`auto\`

Default mode, which indicates no preference for the decoding mode. The browser decides what is best for the user.`},{name:"importance",description:"Indicates the relative importance of the resource. Priority hints are delegated using the values:"},{name:"importance",description:"`auto`: Indicates **no preference**. The browser may use its own heuristics to decide the priority of the image.\n\n`high`: Indicates to the browser that the image is of **high** priority.\n\n`low`: Indicates to the browser that the image is of **low** priority."},{name:"intrinsicsize",description:"This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it’s the size specified in the attribute. Specifically, the image would raster at these dimensions and `naturalWidth`/`naturalHeight` on images would return the values specified in this attribute. [Explainer](https://github.com/ojanvafai/intrinsicsize-attribute), [examples](https://googlechrome.github.io/samples/intrinsic-size/index.html)"},{name:"referrerpolicy",description:"A string indicating which referrer to use when fetching the resource:\n\n*   `no-referrer:` The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer \"The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.\") header will not be sent.\n*   `no-referrer-when-downgrade:` No `Referer` header will be sent when navigating to an origin without TLS (HTTPS). This is a user agent’s default behavior if no policy is otherwise specified.\n*   `origin:` The `Referer` header will include the page of origin's scheme, the host, and the port.\n*   `origin-when-cross-origin:` Navigating to other origins will limit the included referral data to the scheme, the host and the port, while navigating from the same origin will include the referrer's full path.\n*   `unsafe-url:` The `Referer` header will include the origin and the path, but not the fragment, password, or username. This case is unsafe because it can leak origins and paths from TLS-protected resources to insecure origins."},{name:"sizes",description:"A list of one or more strings separated by commas indicating a set of source sizes. Each source size consists of:\n\n1.  a media condition. This must be omitted for the last item.\n2.  a source size value.\n\nSource size values specify the intended display size of the image. User agents use the current source size to select one of the sources supplied by the `srcset` attribute, when those sources are described using width ('`w`') descriptors. The selected source size affects the intrinsic size of the image (the image’s display size if no CSS styling is applied). If the `srcset` attribute is absent, or contains no values with a width (`w`) descriptor, then the `sizes` attribute has no effect."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/img"}]},{name:"iframe",description:{kind:"markdown",value:"The iframe element represents a nested browsing context."},attributes:[{name:"src",description:{kind:"markdown",value:'The URL of the page to embed. Use a value of `about:blank` to embed an empty page that conforms to the [same-origin policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#Inherited_origins). Also note that programatically removing an `<iframe>`\'s src attribute (e.g. via [`Element.removeAttribute()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute "The Element method removeAttribute() removes the attribute with the specified name from the element.")) causes `about:blank` to be loaded in the frame in Firefox (from version 65), Chromium-based browsers, and Safari/iOS.'}},{name:"srcdoc",description:{kind:"markdown",value:"Inline HTML to embed, overriding the `src` attribute. If a browser does not support the `srcdoc` attribute, it will fall back to the URL in the `src` attribute."}},{name:"name",description:{kind:"markdown",value:'A targetable name for the embedded browsing context. This can be used in the `target` attribute of the [`<a>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a "The HTML <a> element (or anchor element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL."), [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server."), or [`<base>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base "The HTML <base> element specifies the base URL to use for all relative URLs contained within a document. There can be only one <base> element in a document.") elements; the `formtarget` attribute of the [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") or [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") elements; or the `windowName` parameter in the [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open "The Window interface\'s open() method loads the specified resource into the browsing context (window, <iframe> or tab) with the specified name. If the name doesn\'t exist, then a new window is opened and the specified resource is loaded into its browsing context.") method.'}},{name:"sandbox",valueSet:"sb",description:{kind:"markdown",value:'Applies extra restrictions to the content in the frame. The value of the attribute can either be empty to apply all restrictions, or space-separated tokens to lift particular restrictions:\n\n*   `allow-forms`: Allows the resource to submit forms. If this keyword is not used, form submission is blocked.\n*   `allow-modals`: Lets the resource [open modal windows](https://html.spec.whatwg.org/multipage/origin.html#sandboxed-modals-flag).\n*   `allow-orientation-lock`: Lets the resource [lock the screen orientation](https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation).\n*   `allow-pointer-lock`: Lets the resource use the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/WebAPI/Pointer_Lock).\n*   `allow-popups`: Allows popups (such as `window.open()`, `target="_blank"`, or `showModalDialog()`). If this keyword is not used, the popup will silently fail to open.\n*   `allow-popups-to-escape-sandbox`: Lets the sandboxed document open new windows without those windows inheriting the sandboxing. For example, this can safely sandbox an advertisement without forcing the same restrictions upon the page the ad links to.\n*   `allow-presentation`: Lets the resource start a [presentation session](https://developer.mozilla.org/en-US/docs/Web/API/PresentationRequest).\n*   `allow-same-origin`: If this token is not used, the resource is treated as being from a special origin that always fails the [same-origin policy](https://developer.mozilla.org/en-US/docs/Glossary/same-origin_policy "same-origin policy: The same-origin policy is a critical security mechanism that restricts how a document or script loaded from one origin can interact with a resource from another origin.").\n*   `allow-scripts`: Lets the resource run scripts (but not create popup windows).\n*   `allow-storage-access-by-user-activation` : Lets the resource request access to the parent\'s storage capabilities with the [Storage Access API](https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API).\n*   `allow-top-navigation`: Lets the resource navigate the top-level browsing context (the one named `_top`).\n*   `allow-top-navigation-by-user-activation`: Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture.\n\n**Notes about sandboxing:**\n\n*   When the embedded document has the same origin as the embedding page, it is **strongly discouraged** to use both `allow-scripts` and `allow-same-origin`, as that lets the embedded document remove the `sandbox` attribute — making it no more secure than not using the `sandbox` attribute at all.\n*   Sandboxing is useless if the attacker can display content outside a sandboxed `iframe` — such as if the viewer opens the frame in a new tab. Such content should be also served from a _separate origin_ to limit potential damage.\n*   The `sandbox` attribute is unsupported in Internet Explorer 9 and earlier.'}},{name:"seamless",valueSet:"v"},{name:"allowfullscreen",valueSet:"v",description:{kind:"markdown",value:'Set to `true` if the `<iframe>` can activate fullscreen mode by calling the [`requestFullscreen()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen "The Element.requestFullscreen() method issues an asynchronous request to make the element be displayed in full-screen mode.") method.'}},{name:"width",description:{kind:"markdown",value:"The width of the frame in CSS pixels. Default is `300`."}},{name:"height",description:{kind:"markdown",value:"The height of the frame in CSS pixels. Default is `150`."}},{name:"allow",description:"Specifies a [feature policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy) for the `<iframe>`."},{name:"allowpaymentrequest",description:"Set to `true` if a cross-origin `<iframe>` should be allowed to invoke the [Payment Request API](https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API)."},{name:"allowpaymentrequest",description:'This attribute is considered a legacy attribute and redefined as `allow="payment"`.'},{name:"csp",description:'A [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) enforced for the embedded resource. See [`HTMLIFrameElement.csp`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/csp "The csp property of the HTMLIFrameElement interface specifies the Content Security Policy that an embedded document must agree to enforce upon itself.") for details.'},{name:"importance",description:`The download priority of the resource in the \`<iframe>\`'s \`src\` attribute. Allowed values:

\`auto\` (default)

No preference. The browser uses its own heuristics to decide the priority of the resource.

\`high\`

The resource should be downloaded before other lower-priority page resources.

\`low\`

The resource should be downloaded after other higher-priority page resources.`},{name:"referrerpolicy",description:'Indicates which [referrer](https://developer.mozilla.org/en-US/docs/Web/API/Document/referrer) to send when fetching the frame\'s resource:\n\n*   `no-referrer`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent.\n*   `no-referrer-when-downgrade` (default): The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent to [origin](https://developer.mozilla.org/en-US/docs/Glossary/origin "origin: Web content\'s origin is defined by the scheme (protocol), host (domain), and port of the URL used to access it. Two objects have the same origin only when the scheme, host, and port all match.")s without [TLS](https://developer.mozilla.org/en-US/docs/Glossary/TLS "TLS: Transport Layer Security (TLS), previously known as Secure Sockets Layer (SSL), is a protocol used by applications to communicate securely across a network, preventing tampering with and eavesdropping on email, web browsing, messaging, and other protocols.") ([HTTPS](https://developer.mozilla.org/en-US/docs/Glossary/HTTPS "HTTPS: HTTPS (HTTP Secure) is an encrypted version of the HTTP protocol. It usually uses SSL or TLS to encrypt all communication between a client and a server. This secure connection allows clients to safely exchange sensitive data with a server, for example for banking activities or online shopping.")).\n*   `origin`: The sent referrer will be limited to the origin of the referring page: its [scheme](https://developer.mozilla.org/en-US/docs/Archive/Mozilla/URIScheme), [host](https://developer.mozilla.org/en-US/docs/Glossary/host "host: A host is a device connected to the Internet (or a local network). Some hosts called servers offer additional services like serving webpages or storing files and emails."), and [port](https://developer.mozilla.org/en-US/docs/Glossary/port "port: For a computer connected to a network with an IP address, a port is a communication endpoint. Ports are designated by numbers, and below 1024 each port is associated by default with a specific protocol.").\n*   `origin-when-cross-origin`: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n*   `same-origin`: A referrer will be sent for [same origin](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy "same origin: The same-origin policy is a critical security mechanism that restricts how a document or script loaded from one origin can interact with a resource from another origin."), but cross-origin requests will contain no referrer information.\n*   `strict-origin`: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS→HTTPS), but don\'t send it to a less secure destination (HTTPS→HTTP).\n*   `strict-origin-when-cross-origin`: Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS→HTTPS), and send no header to a less secure destination (HTTPS→HTTP).\n*   `unsafe-url`: The referrer will include the origin _and_ the path (but not the [fragment](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash), [password](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/password), or [username](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username)). **This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/iframe"}]},{name:"embed",description:{kind:"markdown",value:"The embed element provides an integration point for an external (typically non-HTML) application or interactive content."},attributes:[{name:"src",description:{kind:"markdown",value:"The URL of the resource being embedded."}},{name:"type",description:{kind:"markdown",value:"The MIME type to use to select the plug-in to instantiate."}},{name:"width",description:{kind:"markdown",value:"The displayed width of the resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). This must be an absolute value; percentages are _not_ allowed."}},{name:"height",description:{kind:"markdown",value:"The displayed height of the resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). This must be an absolute value; percentages are _not_ allowed."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/embed"}]},{name:"object",description:{kind:"markdown",value:"The object element can represent an external resource, which, depending on the type of the resource, will either be treated as an image, as a nested browsing context, or as an external resource to be processed by a plugin."},attributes:[{name:"data",description:{kind:"markdown",value:"The address of the resource as a valid URL. At least one of **data** and **type** must be defined."}},{name:"type",description:{kind:"markdown",value:"The [content type](https://developer.mozilla.org/en-US/docs/Glossary/Content_type) of the resource specified by **data**. At least one of **data** and **type** must be defined."}},{name:"typemustmatch",valueSet:"v",description:{kind:"markdown",value:"This Boolean attribute indicates if the **type** attribute and the actual [content type](https://developer.mozilla.org/en-US/docs/Glossary/Content_type) of the resource must match to be used."}},{name:"name",description:{kind:"markdown",value:"The name of valid browsing context (HTML5), or the name of the control (HTML 4)."}},{name:"usemap",description:{kind:"markdown",value:"A hash-name reference to a [`<map>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map \"The HTML <map> element is used with <area> elements to define an image map (a clickable link area).\") element; that is a '#' followed by the value of a [`name`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map#attr-name) of a map element."}},{name:"form",description:{kind:"markdown",value:'The form element, if any, that the object element is associated with (its _form owner_). The value of the attribute must be an ID of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element in the same document.'}},{name:"width",description:{kind:"markdown",value:"The width of the display resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). -- (Absolute values only. [NO percentages](https://html.spec.whatwg.org/multipage/embedded-content.html#dimension-attributes))"}},{name:"height",description:{kind:"markdown",value:"The height of the displayed resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). -- (Absolute values only. [NO percentages](https://html.spec.whatwg.org/multipage/embedded-content.html#dimension-attributes))"}},{name:"archive",description:"A space-separated list of URIs for archives of resources for the object."},{name:"border",description:"The width of a border around the control, in pixels."},{name:"classid",description:"The URI of the object's implementation. It can be used together with, or in place of, the **data** attribute."},{name:"codebase",description:"The base path used to resolve relative URIs specified by **classid**, **data**, or **archive**. If not specified, the default is the base URI of the current document."},{name:"codetype",description:"The content type of the data specified by **classid**."},{name:"declare",description:"The presence of this Boolean attribute makes this element a declaration only. The object must be instantiated by a subsequent `<object>` element. In HTML5, repeat the <object> element completely each that that the resource is reused."},{name:"standby",description:"A message that the browser can show while loading the object's implementation and data."},{name:"tabindex",description:"The position of the element in the tabbing navigation order for the current document."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/object"}]},{name:"param",description:{kind:"markdown",value:"The param element defines parameters for plugins invoked by object elements. It does not represent anything on its own."},attributes:[{name:"name",description:{kind:"markdown",value:"Name of the parameter."}},{name:"value",description:{kind:"markdown",value:"Specifies the value of the parameter."}},{name:"type",description:'Only used if the `valuetype` is set to "ref". Specifies the MIME type of values found at the URI specified by value.'},{name:"valuetype",description:`Specifies the type of the \`value\` attribute. Possible values are:

*   data: Default value. The value is passed to the object's implementation as a string.
*   ref: The value is a URI to a resource where run-time values are stored.
*   object: An ID of another [\`<object>\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object "The HTML <object> element represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.") in the same document.`}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/param"}]},{name:"video",description:{kind:"markdown",value:"A video element is used for playing videos or movies, and audio files with captions."},attributes:[{name:"src"},{name:"crossorigin",valueSet:"xo"},{name:"poster"},{name:"preload",valueSet:"pl"},{name:"autoplay",valueSet:"v",description:{kind:"markdown",value:"A Boolean attribute; if specified, the video automatically begins to play back as soon as it can do so without stopping to finish loading the data."}},{name:"mediagroup"},{name:"loop",valueSet:"v"},{name:"muted",valueSet:"v"},{name:"controls",valueSet:"v"},{name:"width"},{name:"height"}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/video"}]},{name:"audio",description:{kind:"markdown",value:"An audio element represents a sound or audio stream."},attributes:[{name:"src",description:{kind:"markdown",value:'The URL of the audio to embed. This is subject to [HTTP access controls](https://developer.mozilla.org/en-US/docs/HTTP_access_control). This is optional; you may instead use the [`<source>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source "The HTML <source> element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element.") element within the audio block to specify the audio to embed.'}},{name:"crossorigin",valueSet:"xo",description:{kind:"markdown",value:'This enumerated attribute indicates whether to use CORS to fetch the related image. [CORS-enabled resources](https://developer.mozilla.org/en-US/docs/CORS_Enabled_Image) can be reused in the [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas "Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.") element without being _tainted_. The allowed values are:\n\nanonymous\n\nSends a cross-origin request without a credential. In other words, it sends the `Origin:` HTTP header without a cookie, X.509 certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (by not setting the `Access-Control-Allow-Origin:` HTTP header), the image will be _tainted_, and its usage restricted.\n\nuse-credentials\n\nSends a cross-origin request with a credential. In other words, it sends the `Origin:` HTTP header with a cookie, a certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (through `Access-Control-Allow-Credentials:` HTTP header), the image will be _tainted_ and its usage restricted.\n\nWhen not present, the resource is fetched without a CORS request (i.e. without sending the `Origin:` HTTP header), preventing its non-tainted used in [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas "Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.") elements. If invalid, it is handled as if the enumerated keyword **anonymous** was used. See [CORS settings attributes](https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes) for additional information.'}},{name:"preload",valueSet:"pl",description:{kind:"markdown",value:"This enumerated attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values:\n\n*   `none`: Indicates that the audio should not be preloaded.\n*   `metadata`: Indicates that only audio metadata (e.g. length) is fetched.\n*   `auto`: Indicates that the whole audio file can be downloaded, even if the user is not expected to use it.\n*   _empty string_: A synonym of the `auto` value.\n\nIf not set, `preload`'s default value is browser-defined (i.e. each browser may have its own default value). The spec advises it to be set to `metadata`.\n\n**Usage notes:**\n\n*   The `autoplay` attribute has precedence over `preload`. If `autoplay` is specified, the browser would obviously need to start downloading the audio for playback.\n*   The browser is not forced by the specification to follow the value of this attribute; it is a mere hint."}},{name:"autoplay",valueSet:"v",description:{kind:"markdown",value:`A Boolean attribute: if specified, the audio will automatically begin playback as soon as it can do so, without waiting for the entire audio file to finish downloading.

**Note**: Sites that automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, this can be useful when creating media elements whose source will be set at a later time, under user control.`}},{name:"mediagroup"},{name:"loop",valueSet:"v",description:{kind:"markdown",value:"A Boolean attribute: if specified, the audio player will automatically seek back to the start upon reaching the end of the audio."}},{name:"muted",valueSet:"v",description:{kind:"markdown",value:"A Boolean attribute that indicates whether the audio will be initially silenced. Its default value is `false`."}},{name:"controls",valueSet:"v",description:{kind:"markdown",value:"If this attribute is present, the browser will offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/audio"}]},{name:"source",description:{kind:"markdown",value:"The source element allows authors to specify multiple alternative media resources for media elements. It does not represent anything on its own."},attributes:[{name:"src",description:{kind:"markdown",value:'Required for [`<audio>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio "The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.") and [`<video>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video "The HTML Video element (<video>) embeds a media player which supports video playback into the document."), address of the media resource. The value of this attribute is ignored when the `<source>` element is placed inside a [`<picture>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture "The HTML <picture> element contains zero or more <source> elements and one <img> element to provide versions of an image for different display/device scenarios.") element.'}},{name:"type",description:{kind:"markdown",value:"The MIME-type of the resource, optionally with a `codecs` parameter. See [RFC 4281](https://tools.ietf.org/html/rfc4281) for information about how to specify codecs."}},{name:"sizes",description:'Is a list of source sizes that describes the final rendered width of the image represented by the source. Each source size consists of a comma-separated list of media condition-length pairs. This information is used by the browser to determine, before laying the page out, which image defined in [`srcset`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source#attr-srcset) to use.  \nThe `sizes` attribute has an effect only when the [`<source>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source "The HTML <source> element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element.") element is the direct child of a [`<picture>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture "The HTML <picture> element contains zero or more <source> elements and one <img> element to provide versions of an image for different display/device scenarios.") element.'},{name:"srcset",description:"A list of one or more strings separated by commas indicating a set of possible images represented by the source for the browser to use. Each string is composed of:\n\n1.  one URL to an image,\n2.  a width descriptor, that is a positive integer directly followed by `'w'`. The default value, if missing, is the infinity.\n3.  a pixel density descriptor, that is a positive floating number directly followed by `'x'`. The default value, if missing, is `1x`.\n\nEach string in the list must have at least a width descriptor or a pixel density descriptor to be valid. Among the list, there must be only one string containing the same tuple of width descriptor and pixel density descriptor.  \nThe browser chooses the most adequate image to display at a given point of time.  \nThe `srcset` attribute has an effect only when the [`<source>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source \"The HTML <source> element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element.\") element is the direct child of a [`<picture>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture \"The HTML <picture> element contains zero or more <source> elements and one <img> element to provide versions of an image for different display/device scenarios.\") element."},{name:"media",description:'[Media query](https://developer.mozilla.org/en-US/docs/CSS/Media_queries) of the resource\'s intended media; this should be used only in a [`<picture>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture "The HTML <picture> element contains zero or more <source> elements and one <img> element to provide versions of an image for different display/device scenarios.") element.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/source"}]},{name:"track",description:{kind:"markdown",value:"The track element allows authors to specify explicit external timed text tracks for media elements. It does not represent anything on its own."},attributes:[{name:"default",valueSet:"v",description:{kind:"markdown",value:"This attribute indicates that the track should be enabled unless the user's preferences indicate that another track is more appropriate. This may only be used on one `track` element per media element."}},{name:"kind",valueSet:"tk",description:{kind:"markdown",value:"How the text track is meant to be used. If omitted the default kind is `subtitles`. If the attribute is not present, it will use the `subtitles`. If the attribute contains an invalid value, it will use `metadata`. (Versions of Chrome earlier than 52 treated an invalid value as `subtitles`.) The following keywords are allowed:\n\n*   `subtitles`\n    *   Subtitles provide translation of content that cannot be understood by the viewer. For example dialogue or text that is not English in an English language film.\n    *   Subtitles may contain additional content, usually extra background information. For example the text at the beginning of the Star Wars films, or the date, time, and location of a scene.\n*   `captions`\n    *   Closed captions provide a transcription and possibly a translation of audio.\n    *   It may include important non-verbal information such as music cues or sound effects. It may indicate the cue's source (e.g. music, text, character).\n    *   Suitable for users who are deaf or when the sound is muted.\n*   `descriptions`\n    *   Textual description of the video content.\n    *   Suitable for users who are blind or where the video cannot be seen.\n*   `chapters`\n    *   Chapter titles are intended to be used when the user is navigating the media resource.\n*   `metadata`\n    *   Tracks used by scripts. Not visible to the user."}},{name:"label",description:{kind:"markdown",value:"A user-readable title of the text track which is used by the browser when listing available text tracks."}},{name:"src",description:{kind:"markdown",value:'Address of the track (`.vtt` file). Must be a valid URL. This attribute must be specified and its URL value must have the same origin as the document — unless the [`<audio>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio "The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.") or [`<video>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video "The HTML Video element (<video>) embeds a media player which supports video playback into the document.") parent element of the `track` element has a [`crossorigin`](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) attribute.'}},{name:"srclang",description:{kind:"markdown",value:"Language of the track text data. It must be a valid [BCP 47](https://r12a.github.io/app-subtags/) language tag. If the `kind` attribute is set to `subtitles,` then `srclang` must be defined."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/track"}]},{name:"map",description:{kind:"markdown",value:"The map element, in conjunction with an img element and any area element descendants, defines an image map. The element represents its children."},attributes:[{name:"name",description:{kind:"markdown",value:"The name attribute gives the map a name so that it can be referenced. The attribute must be present and must have a non-empty value with no space characters. The value of the name attribute must not be a compatibility-caseless match for the value of the name attribute of another map element in the same document. If the id attribute is also specified, both attributes must have the same value."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/map"}]},{name:"area",description:{kind:"markdown",value:"The area element represents either a hyperlink with some text and a corresponding area on an image map, or a dead area on an image map."},attributes:[{name:"alt"},{name:"coords"},{name:"shape",valueSet:"sh"},{name:"href"},{name:"target"},{name:"download"},{name:"ping"},{name:"rel"},{name:"hreflang"},{name:"type"},{name:"accesskey",description:"Specifies a keyboard navigation accelerator for the element. Pressing ALT or a similar key in association with the specified character selects the form control correlated with that key sequence. Page designers are forewarned to avoid key sequences already bound to browsers. This attribute is global since HTML5."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/area"}]},{name:"table",description:{kind:"markdown",value:"The table element represents data with more than one dimension, in the form of a table."},attributes:[{name:"border"},{name:"align",description:'This enumerated attribute indicates how the table must be aligned inside the containing document. It may have the following values:\n\n*   left: the table is displayed on the left side of the document;\n*   center: the table is displayed in the center of the document;\n*   right: the table is displayed on the right side of the document.\n\n**Usage Note**\n\n*   **Do not use this attribute**, as it has been deprecated. The [`<table>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table "The HTML <table> element represents tabular data — that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/CSS). Set [`margin-left`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left "The margin-left CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") and [`margin-right`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right "The margin-right CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") to `auto` or [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin "The margin CSS property sets the margin area on all four sides of an element. It is a shorthand for margin-top, margin-right, margin-bottom, and margin-left.") to `0 auto` to achieve an effect that is similar to the align attribute.\n*   Prior to Firefox 4, Firefox also supported the `middle`, `absmiddle`, and `abscenter` values as synonyms of `center`, in quirks mode only.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/table"}]},{name:"caption",description:{kind:"markdown",value:"The caption element represents the title of the table that is its parent, if it has a parent and that is a table element."},attributes:[{name:"align",description:`This enumerated attribute indicates how the caption must be aligned with respect to the table. It may have one of the following values:

\`left\`

The caption is displayed to the left of the table.

\`top\`

The caption is displayed above the table.

\`right\`

The caption is displayed to the right of the table.

\`bottom\`

The caption is displayed below the table.

**Usage note:** Do not use this attribute, as it has been deprecated. The [\`<caption>\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption "The HTML Table Caption element (<caption>) specifies the caption (or title) of a table, and if used is always the first child of a <table>.") element should be styled using the [CSS](https://developer.mozilla.org/en-US/docs/CSS) properties [\`caption-side\`](https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side "The caption-side CSS property puts the content of a table's <caption> on the specified side. The values are relative to the writing-mode of the table.") and [\`text-align\`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.").`}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/caption"}]},{name:"colgroup",description:{kind:"markdown",value:"The colgroup element represents a group of one or more columns in the table that is its parent, if it has a parent and that is a table element."},attributes:[{name:"span"},{name:"align",description:'This enumerated attribute specifies how horizontal alignment of each column cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-charoff) attributes Unimplemented (see [bug 2212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nIf this attribute is not set, the `left` value is assumed. The descendant [`<col>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col "The HTML <col> element defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a <colgroup> element.") elements may override this value using their own [`align`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-align) attribute.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values:\n    *   Do not try to set the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on a selector giving a [`<colgroup>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup "The HTML <colgroup> element defines a group of columns within a table.") element. Because [`<td>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td "The HTML <td> element defines a cell of a table that contains data. It participates in the table model.") elements are not descendant of the [`<colgroup>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup "The HTML <colgroup> element defines a group of columns within a table.") element, they won\'t inherit it.\n    *   If the table doesn\'t use a [`colspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-colspan) attribute, use one `td:nth-child(an+b)` CSS selector per column, where a is the total number of the columns in the table and b is the ordinal position of this column in the table. Only after this selector the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property can be used.\n    *   If the table does use a [`colspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-colspan) attribute, the effect can be achieved by combining adequate CSS attribute selectors like `[colspan=n]`, though this is not trivial.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/colgroup"}]},{name:"col",description:{kind:"markdown",value:"If a col element has a parent and that is a colgroup element that itself has a parent that is a table element, then the col element represents one or more columns in the column group represented by that colgroup."},attributes:[{name:"span"},{name:"align",description:'This enumerated attribute specifies how horizontal alignment of each column cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-charoff) attributes Unimplemented (see [bug 2212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nIf this attribute is not set, its value is inherited from the [`align`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup#attr-align) of the [`<colgroup>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup "The HTML <colgroup> element defines a group of columns within a table.") element this `<col>` element belongs too. If there are none, the `left` value is assumed.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values:\n    *   Do not try to set the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on a selector giving a [`<col>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col "The HTML <col> element defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a <colgroup> element.") element. Because [`<td>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td "The HTML <td> element defines a cell of a table that contains data. It participates in the table model.") elements are not descendant of the [`<col>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col "The HTML <col> element defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a <colgroup> element.") element, they won\'t inherit it.\n    *   If the table doesn\'t use a [`colspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-colspan) attribute, use the `td:nth-child(an+b)` CSS selector. Set `a` to zero and `b` to the position of the column in the table, e.g. `td:nth-child(2) { text-align: right; }` to right-align the second column.\n    *   If the table does use a [`colspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-colspan) attribute, the effect can be achieved by combining adequate CSS attribute selectors like `[colspan=n]`, though this is not trivial.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/col"}]},{name:"tbody",description:{kind:"markdown",value:"The tbody element represents a block of rows that consist of a body of data for the parent table element, if the tbody element has a parent and it is a table."},attributes:[{name:"align",description:'This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-charoff) attributes.\n\nIf this attribute is not set, the `left` value is assumed.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, use the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on it.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/tbody"}]},{name:"thead",description:{kind:"markdown",value:"The thead element represents the block of rows that consist of the column labels (headers) for the parent table element, if the thead element has a parent and it is a table."},attributes:[{name:"align",description:'This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead#attr-charoff) attributes Unimplemented (see [bug 2212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nIf this attribute is not set, the `left` value is assumed.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, use the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on it.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/thead"}]},{name:"tfoot",description:{kind:"markdown",value:"The tfoot element represents the block of rows that consist of the column summaries (footers) for the parent table element, if the tfoot element has a parent and it is a table."},attributes:[{name:"align",description:'This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-charoff) attributes Unimplemented (see [bug 2212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nIf this attribute is not set, the `left` value is assumed.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, use the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on it.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/tfoot"}]},{name:"tr",description:{kind:"markdown",value:"The tr element represents a row of cells in a table."},attributes:[{name:"align",description:'A [`DOMString`](https://developer.mozilla.org/en-US/docs/Web/API/DOMString "DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.") which specifies how the cell\'s context should be aligned horizontally within the cells in the row; this is shorthand for using `align` on every cell in the row individually. Possible values are:\n\n`left`\n\nAlign the content of each cell at its left edge.\n\n`center`\n\nCenter the contents of each cell between their left and right edges.\n\n`right`\n\nAlign the content of each cell at its right edge.\n\n`justify`\n\nWiden whitespaces within the text of each cell so that the text fills the full width of each cell (full justification).\n\n`char`\n\nAlign each cell in the row on a specific character (such that each row in the column that is configured this way will horizontally align its cells on that character). This uses the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#attr-charoff) to establish the alignment character (typically "." or "," when aligning numerical data) and the number of characters that should follow the alignment character. This alignment type was never widely supported.\n\nIf no value is expressly set for `align`, the parent node\'s value is inherited.\n\nInstead of using the obsolete `align` attribute, you should instead use the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property to establish `left`, `center`, `right`, or `justify` alignment for the row\'s cells. To apply character-based alignment, set the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property to the alignment character (such as `"."` or `","`).'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/tr"}]},{name:"td",description:{kind:"markdown",value:"The td element represents a data cell in a table."},attributes:[{name:"colspan"},{name:"rowspan"},{name:"headers"},{name:"abbr",description:`This attribute contains a short abbreviated description of the cell's content. Some user-agents, such as speech readers, may present this description before the content itself.

**Note:** Do not use this attribute as it is obsolete in the latest standard. Alternatively, you can put the abbreviated description inside the cell and place the long content in the **title** attribute.`},{name:"align",description:'This enumerated attribute specifies how the cell content\'s horizontal alignment will be handled. Possible values are:\n\n*   `left`: The content is aligned to the left of the cell.\n*   `center`: The content is centered in the cell.\n*   `right`: The content is aligned to the right of the cell.\n*   `justify` (with text only): The content is stretched out inside the cell so that it covers its entire width.\n*   `char` (with text only): The content is aligned to a character inside the `<th>` element with minimal offset. This character is defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-charoff) attributes Unimplemented (see [bug 2212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nThe default value when this attribute is not specified is `left`.\n\n**Note:** Do not use this attribute as it is obsolete in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, apply the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property to the element.\n*   To achieve the same effect as the `char` value, give the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property the same value you would use for the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-char). Unimplemented in CSS3.'},{name:"axis",description:"This attribute contains a list of space-separated strings. Each string is the `id` of a group of cells that this header applies to.\n\n**Note:** Do not use this attribute as it is obsolete in the latest standard."},{name:"bgcolor",description:`This attribute defines the background color of each cell in a column. It consists of a 6-digit hexadecimal code as defined in [sRGB](https://www.w3.org/Graphics/Color/sRGB) and is prefixed by '#'. This attribute may be used with one of sixteen predefined color strings:

 

\`black\` = "#000000"

 

\`green\` = "#008000"

 

\`silver\` = "#C0C0C0"

 

\`lime\` = "#00FF00"

 

\`gray\` = "#808080"

 

\`olive\` = "#808000"

 

\`white\` = "#FFFFFF"

 

\`yellow\` = "#FFFF00"

 

\`maroon\` = "#800000"

 

\`navy\` = "#000080"

 

\`red\` = "#FF0000"

 

\`blue\` = "#0000FF"

 

\`purple\` = "#800080"

 

\`teal\` = "#008080"

 

\`fuchsia\` = "#FF00FF"

 

\`aqua\` = "#00FFFF"

**Note:** Do not use this attribute, as it is non-standard and only implemented in some versions of Microsoft Internet Explorer: The [\`<td>\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td "The HTML <td> element defines a cell of a table that contains data. It participates in the table model.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/CSS). To create a similar effect use the [\`background-color\`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color "The background-color CSS property sets the background color of an element.") property in [CSS](https://developer.mozilla.org/en-US/docs/CSS) instead.`}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/td"}]},{name:"th",description:{kind:"markdown",value:"The th element represents a header cell in a table."},attributes:[{name:"colspan"},{name:"rowspan"},{name:"headers"},{name:"scope",valueSet:"s"},{name:"sorted"},{name:"abbr",description:{kind:"markdown",value:"This attribute contains a short abbreviated description of the cell's content. Some user-agents, such as speech readers, may present this description before the content itself."}},{name:"align",description:'This enumerated attribute specifies how the cell content\'s horizontal alignment will be handled. Possible values are:\n\n*   `left`: The content is aligned to the left of the cell.\n*   `center`: The content is centered in the cell.\n*   `right`: The content is aligned to the right of the cell.\n*   `justify` (with text only): The content is stretched out inside the cell so that it covers its entire width.\n*   `char` (with text only): The content is aligned to a character inside the `<th>` element with minimal offset. This character is defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-charoff) attributes.\n\nThe default value when this attribute is not specified is `left`.\n\n**Note:** Do not use this attribute as it is obsolete in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, apply the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property to the element.\n*   To achieve the same effect as the `char` value, give the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property the same value you would use for the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-char). Unimplemented in CSS3.'},{name:"axis",description:"This attribute contains a list of space-separated strings. Each string is the `id` of a group of cells that this header applies to.\n\n**Note:** Do not use this attribute as it is obsolete in the latest standard: use the [`scope`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-scope) attribute instead."},{name:"bgcolor",description:`This attribute defines the background color of each cell in a column. It consists of a 6-digit hexadecimal code as defined in [sRGB](https://www.w3.org/Graphics/Color/sRGB) and is prefixed by '#'. This attribute may be used with one of sixteen predefined color strings:

 

\`black\` = "#000000"

 

\`green\` = "#008000"

 

\`silver\` = "#C0C0C0"

 

\`lime\` = "#00FF00"

 

\`gray\` = "#808080"

 

\`olive\` = "#808000"

 

\`white\` = "#FFFFFF"

 

\`yellow\` = "#FFFF00"

 

\`maroon\` = "#800000"

 

\`navy\` = "#000080"

 

\`red\` = "#FF0000"

 

\`blue\` = "#0000FF"

 

\`purple\` = "#800080"

 

\`teal\` = "#008080"

 

\`fuchsia\` = "#FF00FF"

 

\`aqua\` = "#00FFFF"

**Note:** Do not use this attribute, as it is non-standard and only implemented in some versions of Microsoft Internet Explorer: The [\`<th>\`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th "The HTML <th> element defines a cell as header of a group of table cells. The exact nature of this group is defined by the scope and headers attributes.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS). To create a similar effect use the [\`background-color\`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color "The background-color CSS property sets the background color of an element.") property in [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) instead.`}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/th"}]},{name:"form",description:{kind:"markdown",value:"The form element represents a collection of form-associated elements, some of which can represent editable values that can be submitted to a server for processing."},attributes:[{name:"accept-charset",description:{kind:"markdown",value:'A space- or comma-delimited list of character encodings that the server accepts. The browser uses them in the order in which they are listed. The default value, the reserved string `"UNKNOWN"`, indicates the same encoding as that of the document containing the form element.  \nIn previous versions of HTML, the different character encodings could be delimited by spaces or commas. In HTML5, only spaces are allowed as delimiters.'}},{name:"action",description:{kind:"markdown",value:'The URI of a program that processes the form information. This value can be overridden by a [`formaction`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formaction) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'}},{name:"autocomplete",valueSet:"o",description:{kind:"markdown",value:"Indicates whether input elements can by default have their values automatically completed by the browser. This setting can be overridden by an `autocomplete` attribute on an element belonging to the form. Possible values are:\n\n*   `off`: The user must explicitly enter a value into each field for every use, or the document provides its own auto-completion method; the browser does not automatically complete entries.\n*   `on`: The browser can automatically complete values based on values that the user has previously entered in the form.\n\nFor most modern browsers (including Firefox 38+, Google Chrome 34+, IE 11+) setting the autocomplete attribute will not prevent a browser's password manager from asking the user if they want to store login fields (username and password), if the user permits the storage the browser will autofill the login the next time the user visits the page. See [The autocomplete attribute and login fields](https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#The_autocomplete_attribute_and_login_fields)."}},{name:"enctype",valueSet:"et",description:{kind:"markdown",value:'When the value of the `method` attribute is `post`, enctype is the [MIME type](https://en.wikipedia.org/wiki/Mime_type) of content that is used to submit the form to the server. Possible values are:\n\n*   `application/x-www-form-urlencoded`: The default value if the attribute is not specified.\n*   `multipart/form-data`: The value used for an [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element with the `type` attribute set to "file".\n*   `text/plain`: (HTML5)\n\nThis value can be overridden by a [`formenctype`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formenctype) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'}},{name:"method",valueSet:"m",description:{kind:"markdown",value:'The [HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP) method that the browser uses to submit the form. Possible values are:\n\n*   `post`: Corresponds to the HTTP [POST method](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.5) ; form data are included in the body of the form and sent to the server.\n*   `get`: Corresponds to the HTTP [GET method](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.3); form data are appended to the `action` attribute URI with a \'?\' as separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters.\n*   `dialog`: Use when the form is inside a [`<dialog>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog "The HTML <dialog> element represents a dialog box or other interactive component, such as an inspector or window.") element to close the dialog when submitted.\n\nThis value can be overridden by a [`formmethod`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formmethod) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'}},{name:"name",description:{kind:"markdown",value:"The name of the form. In HTML 4, its use is deprecated (`id` should be used instead). It must be unique among the forms in a document and not just an empty string in HTML 5."}},{name:"novalidate",valueSet:"v",description:{kind:"markdown",value:'This Boolean attribute indicates that the form is not to be validated when submitted. If this attribute is not specified (and therefore the form is validated), this default setting can be overridden by a [`formnovalidate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formnovalidate) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element belonging to the form.'}},{name:"target",description:{kind:"markdown",value:'A name or keyword indicating where to display the response that is received after submitting the form. In HTML 4, this is the name/keyword for a frame. In HTML5, it is a name/keyword for a _browsing context_ (for example, tab, window, or inline frame). The following keywords have special meanings:\n\n*   `_self`: Load the response into the same HTML 4 frame (or HTML5 browsing context) as the current one. This value is the default if the attribute is not specified.\n*   `_blank`: Load the response into a new unnamed HTML 4 window or HTML5 browsing context.\n*   `_parent`: Load the response into the HTML 4 frameset parent of the current frame, or HTML5 parent browsing context of the current one. If there is no parent, this option behaves the same way as `_self`.\n*   `_top`: HTML 4: Load the response into the full original window, and cancel all other frames. HTML5: Load the response into the top-level browsing context (i.e., the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as `_self`.\n*   _iframename_: The response is displayed in a named [`<iframe>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe "The HTML Inline Frame element (<iframe>) represents a nested browsing context, embedding another HTML page into the current one.").\n\nHTML5: This value can be overridden by a [`formtarget`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formtarget) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'}},{name:"accept",description:'A comma-separated list of content types that the server accepts.\n\n**Usage note:** This attribute has been removed in HTML5 and should no longer be used. Instead, use the [`accept`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept) attribute of the specific [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'},{name:"autocapitalize",description:"This is a nonstandard attribute used by iOS Safari Mobile which controls whether and how the text value for textual form control descendants should be automatically capitalized as it is entered/edited by the user. If the `autocapitalize` attribute is specified on an individual form control descendant, it trumps the form-wide `autocapitalize` setting. The non-deprecated values are available in iOS 5 and later. The default value is `sentences`. Possible values are:\n\n*   `none`: Completely disables automatic capitalization\n*   `sentences`: Automatically capitalize the first letter of sentences.\n*   `words`: Automatically capitalize the first letter of words.\n*   `characters`: Automatically capitalize all characters.\n*   `on`: Deprecated since iOS 5.\n*   `off`: Deprecated since iOS 5."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/form"}]},{name:"label",description:{kind:"markdown",value:"The label element represents a caption in a user interface. The caption can be associated with a specific form control, known as the label element's labeled control, either using the for attribute, or by putting the form control inside the label element itself."},attributes:[{name:"form",description:{kind:"markdown",value:'The [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element with which the label is associated (its _form owner_). If specified, the value of the attribute is the `id` of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element in the same document. This lets you place label elements anywhere within a document, not just as descendants of their form elements.'}},{name:"for",description:{kind:"markdown",value:"The [`id`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-id) of a [labelable](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Form_labelable) form-related element in the same document as the `<label>` element. The first element in the document with an `id` matching the value of the `for` attribute is the _labeled control_ for this label element, if it is a labelable element. If it is not labelable then the `for` attribute has no effect. If there are other elements which also match the `id` value, later in the document, they are not considered.\n\n**Note**: A `<label>` element can have both a `for` attribute and a contained control element, as long as the `for` attribute points to the contained control element."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/label"}]},{name:"input",description:{kind:"markdown",value:"The input element represents a typed data field, usually with a form control to allow the user to edit the data."},attributes:[{name:"accept"},{name:"alt"},{name:"autocomplete",valueSet:"inputautocomplete"},{name:"autofocus",valueSet:"v"},{name:"checked",valueSet:"v"},{name:"dirname"},{name:"disabled",valueSet:"v"},{name:"form"},{name:"formaction"},{name:"formenctype",valueSet:"et"},{name:"formmethod",valueSet:"fm"},{name:"formnovalidate",valueSet:"v"},{name:"formtarget"},{name:"height"},{name:"inputmode",valueSet:"im"},{name:"list"},{name:"max"},{name:"maxlength"},{name:"min"},{name:"minlength"},{name:"multiple",valueSet:"v"},{name:"name"},{name:"pattern"},{name:"placeholder"},{name:"readonly",valueSet:"v"},{name:"required",valueSet:"v"},{name:"size"},{name:"src"},{name:"step"},{name:"type",valueSet:"t"},{name:"value"},{name:"width"}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/input"}]},{name:"button",description:{kind:"markdown",value:"The button element represents a button labeled by its contents."},attributes:[{name:"autofocus",valueSet:"v",description:{kind:"markdown",value:"This Boolean attribute lets you specify that the button should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified."}},{name:"disabled",valueSet:"v",description:{kind:"markdown",value:'This Boolean attribute indicates that the user cannot interact with the button. If this attribute is not specified, the button inherits its setting from the containing element, for example [`<fieldset>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset "The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form."); if there is no containing element with the **disabled** attribute set, then the button is enabled.\n\nFirefox will, unlike other browsers, by default, [persist the dynamic disabled state](https://stackoverflow.com/questions/5985839/bug-with-firefox-disabled-attribute-of-input-not-resetting-when-refreshing) of a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") across page loads. Use the [`autocomplete`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-autocomplete) attribute to control this feature.'}},{name:"form",description:{kind:"markdown",value:'The form element that the button is associated with (its _form owner_). The value of the attribute must be the **id** attribute of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element in the same document. If this attribute is not specified, the `<button>` element will be associated to an ancestor [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element, if one exists. This attribute enables you to associate `<button>` elements to [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") elements anywhere within a document, not just as descendants of [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") elements.'}},{name:"formaction",description:{kind:"markdown",value:"The URI of a program that processes the information submitted by the button. If specified, it overrides the [`action`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-action) attribute of the button's form owner."}},{name:"formenctype",valueSet:"et",description:{kind:"markdown",value:'If the button is a submit button, this attribute specifies the type of content that is used to submit the form to the server. Possible values are:\n\n*   `application/x-www-form-urlencoded`: The default value if the attribute is not specified.\n*   `multipart/form-data`: Use this value if you are using an [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element with the [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type) attribute set to `file`.\n*   `text/plain`\n\nIf this attribute is specified, it overrides the [`enctype`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-enctype) attribute of the button\'s form owner.'}},{name:"formmethod",valueSet:"fm",description:{kind:"markdown",value:"If the button is a submit button, this attribute specifies the HTTP method that the browser uses to submit the form. Possible values are:\n\n*   `post`: The data from the form are included in the body of the form and sent to the server.\n*   `get`: The data from the form are appended to the **form** attribute URI, with a '?' as a separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters.\n\nIf specified, this attribute overrides the [`method`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-method) attribute of the button's form owner."}},{name:"formnovalidate",valueSet:"v",description:{kind:"markdown",value:"If the button is a submit button, this Boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the [`novalidate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-novalidate) attribute of the button's form owner."}},{name:"formtarget",description:{kind:"markdown",value:"If the button is a submit button, this attribute is a name or keyword indicating where to display the response that is received after submitting the form. This is a name of, or keyword for, a _browsing context_ (for example, tab, window, or inline frame). If this attribute is specified, it overrides the [`target`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-target) attribute of the button's form owner. The following keywords have special meanings:\n\n*   `_self`: Load the response into the same browsing context as the current one. This value is the default if the attribute is not specified.\n*   `_blank`: Load the response into a new unnamed browsing context.\n*   `_parent`: Load the response into the parent browsing context of the current one. If there is no parent, this option behaves the same way as `_self`.\n*   `_top`: Load the response into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as `_self`."}},{name:"name",description:{kind:"markdown",value:"The name of the button, which is submitted with the form data."}},{name:"type",valueSet:"bt",description:{kind:"markdown",value:"The type of the button. Possible values are:\n\n*   `submit`: The button submits the form data to the server. This is the default if the attribute is not specified, or if the attribute is dynamically changed to an empty or invalid value.\n*   `reset`: The button resets all the controls to their initial values.\n*   `button`: The button has no default behavior. It can have client-side scripts associated with the element's events, which are triggered when the events occur."}},{name:"value",description:{kind:"markdown",value:"The initial value of the button. It defines the value associated with the button which is submitted with the form data. This value is passed to the server in params when the form is submitted."}},{name:"autocomplete",description:'The use of this attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") is nonstandard and Firefox-specific. By default, unlike other browsers, [Firefox persists the dynamic disabled state](https://stackoverflow.com/questions/5985839/bug-with-firefox-disabled-attribute-of-input-not-resetting-when-refreshing) of a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") across page loads. Setting the value of this attribute to `off` (i.e. `autocomplete="off"`) disables this feature. See [bug 654072](https://bugzilla.mozilla.org/show_bug.cgi?id=654072 "if disabled state is changed with javascript, the normal state doesn\'t return after refreshing the page").'}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/button"}]},{name:"select",description:{kind:"markdown",value:"The select element represents a control for selecting amongst a set of options."},attributes:[{name:"autocomplete",valueSet:"inputautocomplete",description:{kind:"markdown",value:'A [`DOMString`](https://developer.mozilla.org/en-US/docs/Web/API/DOMString "DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.") providing a hint for a [user agent\'s](https://developer.mozilla.org/en-US/docs/Glossary/user_agent "user agent\'s: A user agent is a computer program representing a person, for example, a browser in a Web context.") autocomplete feature. See [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) for a complete list of values and details on how to use autocomplete.'}},{name:"autofocus",valueSet:"v",description:{kind:"markdown",value:"This Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form element in a document can have the `autofocus` attribute."}},{name:"disabled",valueSet:"v",description:{kind:"markdown",value:"This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example `fieldset`; if there is no containing element with the `disabled` attribute set, then the control is enabled."}},{name:"form",description:{kind:"markdown",value:'This attribute lets you specify the form element to which the select element is associated (that is, its "form owner"). If this attribute is specified, its value must be the same as the `id` of a form element in the same document. This enables you to place select elements anywhere within a document, not just as descendants of their form elements.'}},{name:"multiple",valueSet:"v",description:{kind:"markdown",value:"This Boolean attribute indicates that multiple options can be selected in the list. If it is not specified, then only one option can be selected at a time. When `multiple` is specified, most browsers will show a scrolling list box instead of a single line dropdown."}},{name:"name",description:{kind:"markdown",value:"This attribute is used to specify the name of the control."}},{name:"required",valueSet:"v",description:{kind:"markdown",value:"A Boolean attribute indicating that an option with a non-empty string value must be selected."}},{name:"size",description:{kind:"markdown",value:"If the control is presented as a scrolling list box (e.g. when `multiple` is specified), this attribute represents the number of rows in the list that should be visible at one time. Browsers are not required to present a select element as a scrolled list box. The default value is 0.\n\n**Note:** According to the HTML5 specification, the default value for size should be 1; however, in practice, this has been found to break some web sites, and no other browser currently does that, so Mozilla has opted to continue to return 0 for the time being with Firefox."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/select"}]},{name:"datalist",description:{kind:"markdown",value:"The datalist element represents a set of option elements that represent predefined options for other controls. In the rendering, the datalist element represents nothing and it, along with its children, should be hidden."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/datalist"}]},{name:"optgroup",description:{kind:"markdown",value:"The optgroup element represents a group of option elements with a common label."},attributes:[{name:"disabled",valueSet:"v",description:{kind:"markdown",value:"If this Boolean attribute is set, none of the items in this option group is selectable. Often browsers grey out such control and it won't receive any browsing events, like mouse clicks or focus-related ones."}},{name:"label",description:{kind:"markdown",value:"The name of the group of options, which the browser can use when labeling the options in the user interface. This attribute is mandatory if this element is used."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/optgroup"}]},{name:"option",description:{kind:"markdown",value:"The option element represents an option in a select element or as part of a list of suggestions in a datalist element."},attributes:[{name:"disabled",valueSet:"v",description:{kind:"markdown",value:'If this Boolean attribute is set, this option is not checkable. Often browsers grey out such control and it won\'t receive any browsing event, like mouse clicks or focus-related ones. If this attribute is not set, the element can still be disabled if one of its ancestors is a disabled [`<optgroup>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup "The HTML <optgroup> element creates a grouping of options within a <select> element.") element.'}},{name:"label",description:{kind:"markdown",value:"This attribute is text for the label indicating the meaning of the option. If the `label` attribute isn't defined, its value is that of the element text content."}},{name:"selected",valueSet:"v",description:{kind:"markdown",value:'If present, this Boolean attribute indicates that the option is initially selected. If the `<option>` element is the descendant of a [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select "The HTML <select> element represents a control that provides a menu of options") element whose [`multiple`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple) attribute is not set, only one single `<option>` of this [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select "The HTML <select> element represents a control that provides a menu of options") element may have the `selected` attribute.'}},{name:"value",description:{kind:"markdown",value:"The content of this attribute represents the value to be submitted with the form, should this option be selected. If this attribute is omitted, the value is taken from the text content of the option element."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/option"}]},{name:"textarea",description:{kind:"markdown",value:"The textarea element represents a multiline plain text edit control for the element's raw value. The contents of the control represent the control's default value."},attributes:[{name:"autocomplete",valueSet:"inputautocomplete",description:{kind:"markdown",value:'This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are:\n\n*   `off`: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.\n*   `on`: The browser can automatically complete the value based on values that the user has entered during previous uses.\n\nIf the `autocomplete` attribute is not specified on a `<textarea>` element, then the browser uses the `autocomplete` attribute value of the `<textarea>` element\'s form owner. The form owner is either the [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element that this `<textarea>` element is a descendant of or the form element whose `id` is specified by the `form` attribute of the input element. For more information, see the [`autocomplete`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-autocomplete) attribute in [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.").'}},{name:"autofocus",valueSet:"v",description:{kind:"markdown",value:"This Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form-associated element in a document can have this attribute specified."}},{name:"cols",description:{kind:"markdown",value:"The visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is `20`."}},{name:"dirname"},{name:"disabled",valueSet:"v",description:{kind:"markdown",value:'This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example [`<fieldset>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset "The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form."); if there is no containing element when the `disabled` attribute is set, the control is enabled.'}},{name:"form",description:{kind:"markdown",value:'The form element that the `<textarea>` element is associated with (its "form owner"). The value of the attribute must be the `id` of a form element in the same document. If this attribute is not specified, the `<textarea>` element must be a descendant of a form element. This attribute enables you to place `<textarea>` elements anywhere within a document, not just as descendants of form elements.'}},{name:"inputmode",valueSet:"im"},{name:"maxlength",description:{kind:"markdown",value:"The maximum number of characters (unicode code points) that the user can enter. If this value isn't specified, the user can enter an unlimited number of characters."}},{name:"minlength",description:{kind:"markdown",value:"The minimum number of characters (unicode code points) required that the user should enter."}},{name:"name",description:{kind:"markdown",value:"The name of the control."}},{name:"placeholder",description:{kind:"markdown",value:'A hint to the user of what can be entered in the control. Carriage returns or line-feeds within the placeholder text must be treated as line breaks when rendering the hint.\n\n**Note:** Placeholders should only be used to show an example of the type of data that should be entered into a form; they are _not_ a substitute for a proper [`<label>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label "The HTML <label> element represents a caption for an item in a user interface.") element tied to the input. See [Labels and placeholders](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Labels_and_placeholders "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") in [<input>: The Input (Form Input) element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") for a full explanation.'}},{name:"readonly",valueSet:"v",description:{kind:"markdown",value:"This Boolean attribute indicates that the user cannot modify the value of the control. Unlike the `disabled` attribute, the `readonly` attribute does not prevent the user from clicking or selecting in the control. The value of a read-only control is still submitted with the form."}},{name:"required",valueSet:"v",description:{kind:"markdown",value:"This attribute specifies that the user must fill in a value before submitting a form."}},{name:"rows",description:{kind:"markdown",value:"The number of visible text lines for the control."}},{name:"wrap",valueSet:"w",description:{kind:"markdown",value:"Indicates how the control wraps text. Possible values are:\n\n*   `hard`: The browser automatically inserts line breaks (CR+LF) so that each line has no more than the width of the control; the `cols` attribute must also be specified for this to take effect.\n*   `soft`: The browser ensures that all line breaks in the value consist of a CR+LF pair, but does not insert any additional line breaks.\n*   `off` : Like `soft` but changes appearance to `white-space: pre` so line segments exceeding `cols` are not wrapped and the `<textarea>` becomes horizontally scrollable.\n\nIf this attribute is not specified, `soft` is its default value."}},{name:"autocapitalize",description:"This is a non-standard attribute supported by WebKit on iOS (therefore nearly all browsers running on iOS, including Safari, Firefox, and Chrome), which controls whether and how the text value should be automatically capitalized as it is entered/edited by the user. The non-deprecated values are available in iOS 5 and later. Possible values are:\n\n*   `none`: Completely disables automatic capitalization.\n*   `sentences`: Automatically capitalize the first letter of sentences.\n*   `words`: Automatically capitalize the first letter of words.\n*   `characters`: Automatically capitalize all characters.\n*   `on`: Deprecated since iOS 5.\n*   `off`: Deprecated since iOS 5."},{name:"spellcheck",description:"Specifies whether the `<textarea>` is subject to spell checking by the underlying browser/OS. the value can be:\n\n*   `true`: Indicates that the element needs to have its spelling and grammar checked.\n*   `default` : Indicates that the element is to act according to a default behavior, possibly based on the parent element's own `spellcheck` value.\n*   `false` : Indicates that the element should not be spell checked."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/textarea"}]},{name:"output",description:{kind:"markdown",value:"The output element represents the result of a calculation performed by the application, or the result of a user action."},attributes:[{name:"for",description:{kind:"markdown",value:"A space-separated list of other elements’ [`id`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id)s, indicating that those elements contributed input values to (or otherwise affected) the calculation."}},{name:"form",description:{kind:"markdown",value:'The [form element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) that this element is associated with (its "form owner"). The value of the attribute must be an `id` of a form element in the same document. If this attribute is not specified, the output element must be a descendant of a form element. This attribute enables you to place output elements anywhere within a document, not just as descendants of their form elements.'}},{name:"name",description:{kind:"markdown",value:'The name of the element, exposed in the [`HTMLFormElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement "The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.") API.'}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/output"}]},{name:"progress",description:{kind:"markdown",value:"The progress element represents the completion progress of a task. The progress is either indeterminate, indicating that progress is being made but that it is not clear how much more work remains to be done before the task is complete (e.g. because the task is waiting for a remote host to respond), or the progress is a number in the range zero to a maximum, giving the fraction of work that has so far been completed."},attributes:[{name:"value",description:{kind:"markdown",value:"This attribute specifies how much of the task that has been completed. It must be a valid floating point number between 0 and `max`, or between 0 and 1 if `max` is omitted. If there is no `value` attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take."}},{name:"max",description:{kind:"markdown",value:"This attribute describes how much work the task indicated by the `progress` element requires. The `max` attribute, if present, must have a value greater than zero and be a valid floating point number. The default value is 1."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/progress"}]},{name:"meter",description:{kind:"markdown",value:"The meter element represents a scalar measurement within a known range, or a fractional value; for example disk usage, the relevance of a query result, or the fraction of a voting population to have selected a particular candidate."},attributes:[{name:"value",description:{kind:"markdown",value:"The current numeric value. This must be between the minimum and maximum values (`min` attribute and `max` attribute) if they are specified. If unspecified or malformed, the value is 0. If specified, but not within the range given by the `min` attribute and `max` attribute, the value is equal to the nearest end of the range.\n\n**Usage note:** Unless the `value` attribute is between `0` and `1` (inclusive), the `min` and `max` attributes should define the range so that the `value` attribute's value is within it."}},{name:"min",description:{kind:"markdown",value:"The lower numeric bound of the measured range. This must be less than the maximum value (`max` attribute), if specified. If unspecified, the minimum value is 0."}},{name:"max",description:{kind:"markdown",value:"The upper numeric bound of the measured range. This must be greater than the minimum value (`min` attribute), if specified. If unspecified, the maximum value is 1."}},{name:"low",description:{kind:"markdown",value:"The upper numeric bound of the low end of the measured range. This must be greater than the minimum value (`min` attribute), and it also must be less than the high value and maximum value (`high` attribute and `max` attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the `low` value is equal to the minimum value."}},{name:"high",description:{kind:"markdown",value:"The lower numeric bound of the high end of the measured range. This must be less than the maximum value (`max` attribute), and it also must be greater than the low value and minimum value (`low` attribute and **min** attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the `high` value is equal to the maximum value."}},{name:"optimum",description:{kind:"markdown",value:"This attribute indicates the optimal numeric value. It must be within the range (as defined by the `min` attribute and `max` attribute). When used with the `low` attribute and `high` attribute, it gives an indication where along the range is considered preferable. For example, if it is between the `min` attribute and the `low` attribute, then the lower range is considered preferred."}},{name:"form",description:"This attribute associates the element with a `form` element that has ownership of the `meter` element. For example, a `meter` might be displaying a range corresponding to an `input` element of `type` _number_. This attribute is only used if the `meter` element is being used as a form-associated element; even then, it may be omitted if the element appears as a descendant of a `form` element."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/meter"}]},{name:"fieldset",description:{kind:"markdown",value:"The fieldset element represents a set of form controls optionally grouped under a common name."},attributes:[{name:"disabled",valueSet:"v",description:{kind:"markdown",value:"If this Boolean attribute is set, all form controls that are descendants of the `<fieldset>`, are disabled, meaning they are not editable and won't be submitted along with the `<form>`. They won't receive any browsing events, like mouse clicks or focus-related events. By default browsers display such controls grayed out. Note that form elements inside the [`<legend>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend \"The HTML <legend> element represents a caption for the content of its parent <fieldset>.\") element won't be disabled."}},{name:"form",description:{kind:"markdown",value:'This attribute takes the value of the `id` attribute of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element you want the `<fieldset>` to be part of, even if it is not inside the form.'}},{name:"name",description:{kind:"markdown",value:'The name associated with the group.\n\n**Note**: The caption for the fieldset is given by the first [`<legend>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend "The HTML <legend> element represents a caption for the content of its parent <fieldset>.") element nested inside it.'}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/fieldset"}]},{name:"legend",description:{kind:"markdown",value:"The legend element represents a caption for the rest of the contents of the legend element's parent fieldset element, if any."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/legend"}]},{name:"details",description:{kind:"markdown",value:"The details element represents a disclosure widget from which the user can obtain additional information or controls."},attributes:[{name:"open",valueSet:"v",description:{kind:"markdown",value:"This Boolean attribute indicates whether or not the details — that is, the contents of the `<details>` element — are currently visible. The default, `false`, means the details are not visible."}}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/details"}]},{name:"summary",description:{kind:"markdown",value:"The summary element represents a summary, caption, or legend for the rest of the contents of the summary element's parent details element, if any."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/summary"}]},{name:"dialog",description:{kind:"markdown",value:"The dialog element represents a part of an application that a user interacts with to perform a task, for example a dialog box, inspector, or window."},attributes:[{name:"open",description:"Indicates that the dialog is active and available for interaction. When the `open` attribute is not set, the dialog shouldn't be shown to the user."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/dialog"}]},{name:"script",description:{kind:"markdown",value:"The script element allows authors to include dynamic script and data blocks in their documents. The element does not represent content for the user."},attributes:[{name:"src",description:{kind:"markdown",value:"This attribute specifies the URI of an external script; this can be used as an alternative to embedding a script directly within a document.\n\nIf a `script` element has a `src` attribute specified, it should not have a script embedded inside its tags."}},{name:"type",description:{kind:"markdown",value:'This attribute indicates the type of script represented. The value of this attribute will be in one of the following categories:\n\n*   **Omitted or a JavaScript MIME type:** For HTML5-compliant browsers this indicates the script is JavaScript. HTML5 specification urges authors to omit the attribute rather than provide a redundant MIME type. In earlier browsers, this identified the scripting language of the embedded or imported (via the `src` attribute) code. JavaScript MIME types are [listed in the specification](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#JavaScript_types).\n*   **`module`:** For HTML5-compliant browsers the code is treated as a JavaScript module. The processing of the script contents is not affected by the `charset` and `defer` attributes. For information on using `module`, see [ES6 in Depth: Modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/). Code may behave differently when the `module` keyword is used.\n*   **Any other value:** The embedded content is treated as a data block which won\'t be processed by the browser. Developers must use a valid MIME type that is not a JavaScript MIME type to denote data blocks. The `src` attribute will be ignored.\n\n**Note:** in Firefox you could specify the version of JavaScript contained in a `<script>` element by including a non-standard `version` parameter inside the `type` attribute — for example `type="text/javascript;version=1.8"`. This has been removed in Firefox 59 (see [bug 1428745](https://bugzilla.mozilla.org/show_bug.cgi?id=1428745 "FIXED: Remove support for version parameter from script loader")).'}},{name:"charset"},{name:"async",valueSet:"v",description:{kind:"markdown",value:`This is a Boolean attribute indicating that the browser should, if possible, load the script asynchronously.

This attribute must not be used if the \`src\` attribute is absent (i.e. for inline scripts). If it is included in this case it will have no effect.

Browsers usually assume the worst case scenario and load scripts synchronously, (i.e. \`async="false"\`) during HTML parsing.

Dynamically inserted scripts (using [\`document.createElement()\`](https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement "In an HTML document, the document.createElement() method creates the HTML element specified by tagName, or an HTMLUnknownElement if tagName isn't recognized.")) load asynchronously by default, so to turn on synchronous loading (i.e. scripts load in the order they were inserted) set \`async="false"\`.

See [Browser compatibility](#Browser_compatibility) for notes on browser support. See also [Async scripts for asm.js](https://developer.mozilla.org/en-US/docs/Games/Techniques/Async_scripts).`}},{name:"defer",valueSet:"v",description:{kind:"markdown",value:'This Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing [`DOMContentLoaded`](https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded "/en-US/docs/Web/Events/DOMContentLoaded").\n\nScripts with the `defer` attribute will prevent the `DOMContentLoaded` event from firing until the script has loaded and finished evaluating.\n\nThis attribute must not be used if the `src` attribute is absent (i.e. for inline scripts), in this case it would have no effect.\n\nTo achieve a similar effect for dynamically inserted scripts use `async="false"` instead. Scripts with the `defer` attribute will execute in the order in which they appear in the document.'}},{name:"crossorigin",valueSet:"xo",description:{kind:"markdown",value:'Normal `script` elements pass minimal information to the [`window.onerror`](https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror "The onerror property of the GlobalEventHandlers mixin is an EventHandler that processes error events.") for scripts which do not pass the standard [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS "CORS: CORS (Cross-Origin Resource Sharing) is a system, consisting of transmitting HTTP headers, that determines whether browsers block frontend JavaScript code from accessing responses for cross-origin requests.") checks. To allow error logging for sites which use a separate domain for static media, use this attribute. See [CORS settings attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) for a more descriptive explanation of its valid arguments.'}},{name:"nonce",description:{kind:"markdown",value:"A cryptographic nonce (number used once) to whitelist inline scripts in a [script-src Content-Security-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src). The server must generate a unique nonce value each time it transmits a policy. It is critical to provide a nonce that cannot be guessed as bypassing a resource's policy is otherwise trivial."}},{name:"integrity",description:"This attribute contains inline metadata that a user agent can use to verify that a fetched resource has been delivered free of unexpected manipulation. See [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)."},{name:"nomodule",description:"This Boolean attribute is set to indicate that the script should not be executed in browsers that support [ES2015 modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/) — in effect, this can be used to serve fallback scripts to older browsers that do not support modular JavaScript code."},{name:"referrerpolicy",description:'Indicates which [referrer](https://developer.mozilla.org/en-US/docs/Web/API/Document/referrer) to send when fetching the script, or resources fetched by the script:\n\n*   `no-referrer`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent.\n*   `no-referrer-when-downgrade` (default): The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent to [origin](https://developer.mozilla.org/en-US/docs/Glossary/origin "origin: Web content\'s origin is defined by the scheme (protocol), host (domain), and port of the URL used to access it. Two objects have the same origin only when the scheme, host, and port all match.")s without [TLS](https://developer.mozilla.org/en-US/docs/Glossary/TLS "TLS: Transport Layer Security (TLS), previously known as Secure Sockets Layer (SSL), is a protocol used by applications to communicate securely across a network, preventing tampering with and eavesdropping on email, web browsing, messaging, and other protocols.") ([HTTPS](https://developer.mozilla.org/en-US/docs/Glossary/HTTPS "HTTPS: HTTPS (HTTP Secure) is an encrypted version of the HTTP protocol. It usually uses SSL or TLS to encrypt all communication between a client and a server. This secure connection allows clients to safely exchange sensitive data with a server, for example for banking activities or online shopping.")).\n*   `origin`: The sent referrer will be limited to the origin of the referring page: its [scheme](https://developer.mozilla.org/en-US/docs/Archive/Mozilla/URIScheme), [host](https://developer.mozilla.org/en-US/docs/Glossary/host "host: A host is a device connected to the Internet (or a local network). Some hosts called servers offer additional services like serving webpages or storing files and emails."), and [port](https://developer.mozilla.org/en-US/docs/Glossary/port "port: For a computer connected to a network with an IP address, a port is a communication endpoint. Ports are designated by numbers, and below 1024 each port is associated by default with a specific protocol.").\n*   `origin-when-cross-origin`: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n*   `same-origin`: A referrer will be sent for [same origin](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy "same origin: The same-origin policy is a critical security mechanism that restricts how a document or script loaded from one origin can interact with a resource from another origin."), but cross-origin requests will contain no referrer information.\n*   `strict-origin`: Only send the origin of the document as the referrer when the protocol security level stays the same (e.g. HTTPS→HTTPS), but don\'t send it to a less secure destination (e.g. HTTPS→HTTP).\n*   `strict-origin-when-cross-origin`: Send a full URL when performing a same-origin request, but only send the origin when the protocol security level stays the same (e.g.HTTPS→HTTPS), and send no header to a less secure destination (e.g. HTTPS→HTTP).\n*   `unsafe-url`: The referrer will include the origin _and_ the path (but not the [fragment](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash), [password](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/password), or [username](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username)). **This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.\n\n**Note**: An empty string value (`""`) is both the default value, and a fallback value if `referrerpolicy` is not supported. If `referrerpolicy` is not explicitly specified on the `<script>` element, it will adopt a higher-level referrer policy, i.e. one set on the whole document or domain. If a higher-level policy is not available, the empty string is treated as being equivalent to `no-referrer-when-downgrade`.'},{name:"text",description:"Like the `textContent` attribute, this attribute sets the text content of the element. Unlike the `textContent` attribute, however, this attribute is evaluated as executable code after the node is inserted into the DOM."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/script"}]},{name:"noscript",description:{kind:"markdown",value:"The noscript element represents nothing if scripting is enabled, and represents its children if scripting is disabled. It is used to present different markup to user agents that support scripting and those that don't support scripting, by affecting how the document is parsed."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/noscript"}]},{name:"template",description:{kind:"markdown",value:"The template element is used to declare fragments of HTML that can be cloned and inserted in the document by script."},attributes:[],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/template"}]},{name:"canvas",description:{kind:"markdown",value:"The canvas element provides scripts with a resolution-dependent bitmap canvas, which can be used for rendering graphs, game graphics, art, or other visual images on the fly."},attributes:[{name:"width",description:{kind:"markdown",value:"The width of the coordinate space in CSS pixels. Defaults to 300."}},{name:"height",description:{kind:"markdown",value:"The height of the coordinate space in CSS pixels. Defaults to 150."}},{name:"moz-opaque",description:"Lets the canvas know whether or not translucency will be a factor. If the canvas knows there's no translucency, painting performance can be optimized. This is only supported by Mozilla-based browsers; use the standardized [`canvas.getContext('2d', { alpha: false })`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext \"The HTMLCanvasElement.getContext() method returns a drawing context on the canvas, or null if the context identifier is not supported.\") instead."}],references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Element/canvas"}]}],globalAttributes:[{name:"accesskey",description:{kind:"markdown",value:"Provides a hint for generating a keyboard shortcut for the current element. This attribute consists of a space-separated list of characters. The browser should use the first one that exists on the computer keyboard layout."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/accesskey"}]},{name:"autocapitalize",description:{kind:"markdown",value:"Controls whether and how text input is automatically capitalized as it is entered/edited by the user. It can have the following values:\n\n*   `off` or `none`, no autocapitalization is applied (all letters default to lowercase)\n*   `on` or `sentences`, the first letter of each sentence defaults to a capital letter; all other letters default to lowercase\n*   `words`, the first letter of each word defaults to a capital letter; all other letters default to lowercase\n*   `characters`, all letters should default to uppercase"},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/autocapitalize"}]},{name:"class",description:{kind:"markdown",value:'A space-separated list of the classes of the element. Classes allows CSS and JavaScript to select and access specific elements via the [class selectors](/en-US/docs/Web/CSS/Class_selectors) or functions like the method [`Document.getElementsByClassName()`](/en-US/docs/Web/API/Document/getElementsByClassName "returns an array-like object of all child elements which have all of the given class names.").'},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/class"}]},{name:"contenteditable",description:{kind:"markdown",value:"An enumerated attribute indicating if the element should be editable by the user. If so, the browser modifies its widget to allow editing. The attribute must take one of the following values:\n\n*   `true` or the _empty string_, which indicates that the element must be editable;\n*   `false`, which indicates that the element must not be editable."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/contenteditable"}]},{name:"contextmenu",description:{kind:"markdown",value:'The `[**id**](#attr-id)` of a [`<menu>`](/en-US/docs/Web/HTML/Element/menu "The HTML <menu> element represents a group of commands that a user can perform or activate. This includes both list menus, which might appear across the top of a screen, as well as context menus, such as those that might appear underneath a button after it has been clicked.") to use as the contextual menu for this element.'},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/contextmenu"}]},{name:"dir",description:{kind:"markdown",value:"An enumerated attribute indicating the directionality of the element's text. It can have the following values:\n\n*   `ltr`, which means _left to right_ and is to be used for languages that are written from the left to the right (like English);\n*   `rtl`, which means _right to left_ and is to be used for languages that are written from the right to the left (like Arabic);\n*   `auto`, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it finds a character with a strong directionality, then it applies that directionality to the whole element."},valueSet:"d",references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/dir"}]},{name:"draggable",description:{kind:"markdown",value:"An enumerated attribute indicating whether the element can be dragged, using the [Drag and Drop API](/en-us/docs/DragDrop/Drag_and_Drop). It can have the following values:\n\n*   `true`, which indicates that the element may be dragged\n*   `false`, which indicates that the element may not be dragged."},valueSet:"b",references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/draggable"}]},{name:"dropzone",description:{kind:"markdown",value:"An enumerated attribute indicating what types of content can be dropped on an element, using the [Drag and Drop API](/en-US/docs/DragDrop/Drag_and_Drop). It can have the following values:\n\n*   `copy`, which indicates that dropping will create a copy of the element that was dragged\n*   `move`, which indicates that the element that was dragged will be moved to this new location.\n*   `link`, will create a link to the dragged data."}},{name:"exportparts",description:{kind:"markdown",value:"Used to transitively export shadow parts from a nested shadow tree into a containing light tree."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/exportparts"}]},{name:"hidden",description:{kind:"markdown",value:"A Boolean attribute indicates that the element is not yet, or is no longer, _relevant_. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. The browser won't render such elements. This attribute must not be used to hide content that could legitimately be shown."},valueSet:"v",references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/hidden"}]},{name:"id",description:{kind:"markdown",value:"Defines a unique identifier (ID) which must be unique in the whole document. Its purpose is to identify the element when linking (using a fragment identifier), scripting, or styling (with CSS)."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/id"}]},{name:"inputmode",description:{kind:"markdown",value:'Provides a hint to browsers as to the type of virtual keyboard configuration to use when editing this element or its contents. Used primarily on [`<input>`](/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") elements, but is usable on any element while in `[contenteditable](/en-US/docs/Web/HTML/Global_attributes#attr-contenteditable)` mode.'},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/inputmode"}]},{name:"is",description:{kind:"markdown",value:"Allows you to specify that a standard HTML element should behave like a registered custom built-in element (see [Using custom elements](/en-US/docs/Web/Web_Components/Using_custom_elements) for more details)."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/is"}]},{name:"itemid",description:{kind:"markdown",value:"The unique, global identifier of an item."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemid"}]},{name:"itemprop",description:{kind:"markdown",value:"Used to add properties to an item. Every HTML element may have an `itemprop` attribute specified, where an `itemprop` consists of a name and value pair."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemprop"}]},{name:"itemref",description:{kind:"markdown",value:"Properties that are not descendants of an element with the `itemscope` attribute can be associated with the item using an `itemref`. It provides a list of element ids (not `itemid`s) with additional properties elsewhere in the document."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemref"}]},{name:"itemscope",description:{kind:"markdown",value:"`itemscope` (usually) works along with `[itemtype](/en-US/docs/Web/HTML/Global_attributes#attr-itemtype)` to specify that the HTML contained in a block is about a particular item. `itemscope` creates the Item and defines the scope of the `itemtype` associated with it. `itemtype` is a valid URL of a vocabulary (such as [schema.org](https://schema.org/)) that describes the item and its properties context."},valueSet:"v",references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemscope"}]},{name:"itemtype",description:{kind:"markdown",value:"Specifies the URL of the vocabulary that will be used to define `itemprop`s (item properties) in the data structure. `[itemscope](/en-US/docs/Web/HTML/Global_attributes#attr-itemscope)` is used to set the scope of where in the data structure the vocabulary set by `itemtype` will be active."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemtype"}]},{name:"lang",description:{kind:"markdown",value:"Helps define the language of an element: the language that non-editable elements are in, or the language that editable elements should be written in by the user. The attribute contains one “language tag” (made of hyphen-separated “language subtags”) in the format defined in [_Tags for Identifying Languages (BCP47)_](https://www.ietf.org/rfc/bcp/bcp47.txt). [**xml:lang**](#attr-xml:lang) has priority over it."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/lang"}]},{name:"part",description:{kind:"markdown",value:'A space-separated list of the part names of the element. Part names allows CSS to select and style specific elements in a shadow tree via the [`::part`](/en-US/docs/Web/CSS/::part "The ::part CSS pseudo-element represents any element within a shadow tree that has a matching part attribute.") pseudo-element.'},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/part"}]},{name:"role",valueSet:"roles"},{name:"slot",description:{kind:"markdown",value:"Assigns a slot in a [shadow DOM](/en-US/docs/Web/Web_Components/Shadow_DOM) shadow tree to an element: An element with a `slot` attribute is assigned to the slot created by the [`<slot>`](/en-US/docs/Web/HTML/Element/slot \"The HTML <slot> element—part of the Web Components technology suite—is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together.\") element whose `[name](/en-US/docs/Web/HTML/Element/slot#attr-name)` attribute's value matches that `slot` attribute's value."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/slot"}]},{name:"spellcheck",description:{kind:"markdown",value:"An enumerated attribute defines whether the element may be checked for spelling errors. It may have the following values:\n\n*   `true`, which indicates that the element should be, if possible, checked for spelling errors;\n*   `false`, which indicates that the element should not be checked for spelling errors."},valueSet:"b",references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/spellcheck"}]},{name:"style",description:{kind:"markdown",value:'Contains [CSS](/en-US/docs/Web/CSS) styling declarations to be applied to the element. Note that it is recommended for styles to be defined in a separate file or files. This attribute and the [`<style>`](/en-US/docs/Web/HTML/Element/style "The HTML <style> element contains style information for a document, or part of a document.") element have mainly the purpose of allowing for quick styling, for example for testing purposes.'},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/style"}]},{name:"tabindex",description:{kind:"markdown",value:`An integer attribute indicating if the element can take input focus (is _focusable_), if it should participate to sequential keyboard navigation, and if so, at what position. It can take several values:

*   a _negative value_ means that the element should be focusable, but should not be reachable via sequential keyboard navigation;
*   \`0\` means that the element should be focusable and reachable via sequential keyboard navigation, but its relative order is defined by the platform convention;
*   a _positive value_ means that the element should be focusable and reachable via sequential keyboard navigation; the order in which the elements are focused is the increasing value of the [**tabindex**](#attr-tabindex). If several elements share the same tabindex, their relative order follows their relative positions in the document.`},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/tabindex"}]},{name:"title",description:{kind:"markdown",value:"Contains a text representing advisory information related to the element it belongs to. Such information can typically, but not necessarily, be presented to the user as a tooltip."},references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/title"}]},{name:"translate",description:{kind:"markdown",value:"An enumerated attribute that is used to specify whether an element's attribute values and the values of its [`Text`](/en-US/docs/Web/API/Text \"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\") node children are to be translated when the page is localized, or whether to leave them unchanged. It can have the following values:\n\n*   empty string and `yes`, which indicates that the element will be translated.\n*   `no`, which indicates that the element will not be translated."},valueSet:"y",references:[{name:"MDN Reference",url:"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/translate"}]},{name:"onabort",description:{kind:"markdown",value:"The loading of a resource has been aborted."}},{name:"onblur",description:{kind:"markdown",value:"An element has lost focus (does not bubble)."}},{name:"oncanplay",description:{kind:"markdown",value:"The user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content."}},{name:"oncanplaythrough",description:{kind:"markdown",value:"The user agent can play the media up to its end without having to stop for further buffering of content."}},{name:"onchange",description:{kind:"markdown",value:"The change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user."}},{name:"onclick",description:{kind:"markdown",value:"A pointing device button has been pressed and released on an element."}},{name:"oncontextmenu",description:{kind:"markdown",value:"The right button of the mouse is clicked (before the context menu is displayed)."}},{name:"ondblclick",description:{kind:"markdown",value:"A pointing device button is clicked twice on an element."}},{name:"ondrag",description:{kind:"markdown",value:"An element or text selection is being dragged (every 350ms)."}},{name:"ondragend",description:{kind:"markdown",value:"A drag operation is being ended (by releasing a mouse button or hitting the escape key)."}},{name:"ondragenter",description:{kind:"markdown",value:"A dragged element or text selection enters a valid drop target."}},{name:"ondragleave",description:{kind:"markdown",value:"A dragged element or text selection leaves a valid drop target."}},{name:"ondragover",description:{kind:"markdown",value:"An element or text selection is being dragged over a valid drop target (every 350ms)."}},{name:"ondragstart",description:{kind:"markdown",value:"The user starts dragging an element or text selection."}},{name:"ondrop",description:{kind:"markdown",value:"An element is dropped on a valid drop target."}},{name:"ondurationchange",description:{kind:"markdown",value:"The duration attribute has been updated."}},{name:"onemptied",description:{kind:"markdown",value:"The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it."}},{name:"onended",description:{kind:"markdown",value:"Playback has stopped because the end of the media was reached."}},{name:"onerror",description:{kind:"markdown",value:"A resource failed to load."}},{name:"onfocus",description:{kind:"markdown",value:"An element has received focus (does not bubble)."}},{name:"onformchange"},{name:"onforminput"},{name:"oninput",description:{kind:"markdown",value:"The value of an element changes or the content of an element with the attribute contenteditable is modified."}},{name:"oninvalid",description:{kind:"markdown",value:"A submittable element has been checked and doesn't satisfy its constraints."}},{name:"onkeydown",description:{kind:"markdown",value:"A key is pressed down."}},{name:"onkeypress",description:{kind:"markdown",value:"A key is pressed down and that key normally produces a character value (use input instead)."}},{name:"onkeyup",description:{kind:"markdown",value:"A key is released."}},{name:"onload",description:{kind:"markdown",value:"A resource and its dependent resources have finished loading."}},{name:"onloadeddata",description:{kind:"markdown",value:"The first frame of the media has finished loading."}},{name:"onloadedmetadata",description:{kind:"markdown",value:"The metadata has been loaded."}},{name:"onloadstart",description:{kind:"markdown",value:"Progress has begun."}},{name:"onmousedown",description:{kind:"markdown",value:"A pointing device button (usually a mouse) is pressed on an element."}},{name:"onmousemove",description:{kind:"markdown",value:"A pointing device is moved over an element."}},{name:"onmouseout",description:{kind:"markdown",value:"A pointing device is moved off the element that has the listener attached or off one of its children."}},{name:"onmouseover",description:{kind:"markdown",value:"A pointing device is moved onto the element that has the listener attached or onto one of its children."}},{name:"onmouseup",description:{kind:"markdown",value:"A pointing device button is released over an element."}},{name:"onmousewheel"},{name:"onmouseenter",description:{kind:"markdown",value:"A pointing device is moved onto the element that has the listener attached."}},{name:"onmouseleave",description:{kind:"markdown",value:"A pointing device is moved off the element that has the listener attached."}},{name:"onpause",description:{kind:"markdown",value:"Playback has been paused."}},{name:"onplay",description:{kind:"markdown",value:"Playback has begun."}},{name:"onplaying",description:{kind:"markdown",value:"Playback is ready to start after having been paused or delayed due to lack of data."}},{name:"onprogress",description:{kind:"markdown",value:"In progress."}},{name:"onratechange",description:{kind:"markdown",value:"The playback rate has changed."}},{name:"onreset",description:{kind:"markdown",value:"A form is reset."}},{name:"onresize",description:{kind:"markdown",value:"The document view has been resized."}},{name:"onreadystatechange",description:{kind:"markdown",value:"The readyState attribute of a document has changed."}},{name:"onscroll",description:{kind:"markdown",value:"The document view or an element has been scrolled."}},{name:"onseeked",description:{kind:"markdown",value:"A seek operation completed."}},{name:"onseeking",description:{kind:"markdown",value:"A seek operation began."}},{name:"onselect",description:{kind:"markdown",value:"Some text is being selected."}},{name:"onshow",description:{kind:"markdown",value:"A contextmenu event was fired on/bubbled to an element that has a contextmenu attribute"}},{name:"onstalled",description:{kind:"markdown",value:"The user agent is trying to fetch media data, but data is unexpectedly not forthcoming."}},{name:"onsubmit",description:{kind:"markdown",value:"A form is submitted."}},{name:"onsuspend",description:{kind:"markdown",value:"Media data loading has been suspended."}},{name:"ontimeupdate",description:{kind:"markdown",value:"The time indicated by the currentTime attribute has been updated."}},{name:"onvolumechange",description:{kind:"markdown",value:"The volume has changed."}},{name:"onwaiting",description:{kind:"markdown",value:"Playback has stopped because of a temporary lack of data."}},{name:"onpointercancel",description:{kind:"markdown",value:"The pointer is unlikely to produce any more events."}},{name:"onpointerdown",description:{kind:"markdown",value:"The pointer enters the active buttons state."}},{name:"onpointerenter",description:{kind:"markdown",value:"Pointing device is moved inside the hit-testing boundary."}},{name:"onpointerleave",description:{kind:"markdown",value:"Pointing device is moved out of the hit-testing boundary."}},{name:"onpointerlockchange",description:{kind:"markdown",value:"The pointer was locked or released."}},{name:"onpointerlockerror",description:{kind:"markdown",value:"It was impossible to lock the pointer for technical reasons or because the permission was denied."}},{name:"onpointermove",description:{kind:"markdown",value:"The pointer changed coordinates."}},{name:"onpointerout",description:{kind:"markdown",value:"The pointing device moved out of hit-testing boundary or leaves detectable hover range."}},{name:"onpointerover",description:{kind:"markdown",value:"The pointing device is moved into the hit-testing boundary."}},{name:"onpointerup",description:{kind:"markdown",value:"The pointer leaves the active buttons state."}},{name:"aria-activedescendant",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-activedescendant"}],description:{kind:"markdown",value:"Identifies the currently active element when DOM focus is on a [`composite`](https://www.w3.org/TR/wai-aria-1.1/#composite) widget, [`textbox`](https://www.w3.org/TR/wai-aria-1.1/#textbox), [`group`](https://www.w3.org/TR/wai-aria-1.1/#group), or [`application`](https://www.w3.org/TR/wai-aria-1.1/#application)."}},{name:"aria-atomic",valueSet:"b",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-atomic"}],description:{kind:"markdown",value:"Indicates whether [assistive technologies](https://www.w3.org/TR/wai-aria-1.1/#dfn-assistive-technology) will present all, or only parts of, the changed region based on the change notifications defined by the [`aria-relevant`](https://www.w3.org/TR/wai-aria-1.1/#aria-relevant) attribute."}},{name:"aria-autocomplete",valueSet:"autocomplete",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-autocomplete"}],description:{kind:"markdown",value:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made."}},{name:"aria-busy",valueSet:"b",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-busy"}],description:{kind:"markdown",value:"Indicates an element is being modified and that assistive technologies _MAY_ want to wait until the modifications are complete before exposing them to the user."}},{name:"aria-checked",valueSet:"tristate",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-checked"}],description:{kind:"markdown",value:'Indicates the current "checked" [state](https://www.w3.org/TR/wai-aria-1.1/#dfn-state) of checkboxes, radio buttons, and other [widgets](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget). See related [`aria-pressed`](https://www.w3.org/TR/wai-aria-1.1/#aria-pressed) and [`aria-selected`](https://www.w3.org/TR/wai-aria-1.1/#aria-selected).'}},{name:"aria-colcount",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-colcount"}],description:{kind:"markdown",value:"Defines the total number of columns in a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-colindex`](https://www.w3.org/TR/wai-aria-1.1/#aria-colindex)."}},{name:"aria-colindex",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-colindex"}],description:{kind:"markdown",value:"Defines an [element's](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) column index or position with respect to the total number of columns within a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-colcount`](https://www.w3.org/TR/wai-aria-1.1/#aria-colcount) and [`aria-colspan`](https://www.w3.org/TR/wai-aria-1.1/#aria-colspan)."}},{name:"aria-colspan",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-colspan"}],description:{kind:"markdown",value:"Defines the number of columns spanned by a cell or gridcell within a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-colindex`](https://www.w3.org/TR/wai-aria-1.1/#aria-colindex) and [`aria-rowspan`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowspan)."}},{name:"aria-controls",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-controls"}],description:{kind:"markdown",value:"Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) whose contents or presence are controlled by the current element. See related [`aria-owns`](https://www.w3.org/TR/wai-aria-1.1/#aria-owns)."}},{name:"aria-current",valueSet:"current",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-current"}],description:{kind:"markdown",value:"Indicates the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) that represents the current item within a container or set of related elements."}},{name:"aria-describedby",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-describedby"}],description:{kind:"markdown",value:"Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) that describes the [object](https://www.w3.org/TR/wai-aria-1.1/#dfn-object). See related [`aria-labelledby`](https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby)."}},{name:"aria-disabled",valueSet:"b",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-disabled"}],description:{kind:"markdown",value:"Indicates that the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) is [perceivable](https://www.w3.org/TR/wai-aria-1.1/#dfn-perceivable) but disabled, so it is not editable or otherwise [operable](https://www.w3.org/TR/wai-aria-1.1/#dfn-operable). See related [`aria-hidden`](https://www.w3.org/TR/wai-aria-1.1/#aria-hidden) and [`aria-readonly`](https://www.w3.org/TR/wai-aria-1.1/#aria-readonly)."}},{name:"aria-dropeffect",valueSet:"dropeffect",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-dropeffect"}],description:{kind:"markdown",value:"\\[Deprecated in ARIA 1.1\\] Indicates what functions can be performed when a dragged object is released on the drop target."}},{name:"aria-errormessage",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-errormessage"}],description:{kind:"markdown",value:"Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) that provides an error message for the [object](https://www.w3.org/TR/wai-aria-1.1/#dfn-object). See related [`aria-invalid`](https://www.w3.org/TR/wai-aria-1.1/#aria-invalid) and [`aria-describedby`](https://www.w3.org/TR/wai-aria-1.1/#aria-describedby)."}},{name:"aria-expanded",valueSet:"u",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-expanded"}],description:{kind:"markdown",value:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."}},{name:"aria-flowto",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-flowto"}],description:{kind:"markdown",value:"Identifies the next [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) in an alternate reading order of content which, at the user's discretion, allows assistive technology to override the general default of reading in document source order."}},{name:"aria-grabbed",valueSet:"u",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-grabbed"}],description:{kind:"markdown",value:`\\[Deprecated in ARIA 1.1\\] Indicates an element's "grabbed" [state](https://www.w3.org/TR/wai-aria-1.1/#dfn-state) in a drag-and-drop operation.`}},{name:"aria-haspopup",valueSet:"haspopup",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup"}],description:{kind:"markdown",value:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element)."}},{name:"aria-hidden",valueSet:"b",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-hidden"}],description:{kind:"markdown",value:"Indicates whether the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) is exposed to an accessibility API. See related [`aria-disabled`](https://www.w3.org/TR/wai-aria-1.1/#aria-disabled)."}},{name:"aria-invalid",valueSet:"invalid",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-invalid"}],description:{kind:"markdown",value:"Indicates the entered value does not conform to the format expected by the application. See related [`aria-errormessage`](https://www.w3.org/TR/wai-aria-1.1/#aria-errormessage)."}},{name:"aria-label",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-label"}],description:{kind:"markdown",value:"Defines a string value that labels the current element. See related [`aria-labelledby`](https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby)."}},{name:"aria-labelledby",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby"}],description:{kind:"markdown",value:"Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) that labels the current element. See related [`aria-describedby`](https://www.w3.org/TR/wai-aria-1.1/#aria-describedby)."}},{name:"aria-level",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-level"}],description:{kind:"markdown",value:"Defines the hierarchical level of an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) within a structure."}},{name:"aria-live",valueSet:"live",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-live"}],description:{kind:"markdown",value:"Indicates that an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) will be updated, and describes the types of updates the [user agents](https://www.w3.org/TR/wai-aria-1.1/#dfn-user-agent), [assistive technologies](https://www.w3.org/TR/wai-aria-1.1/#dfn-assistive-technology), and user can expect from the [live region](https://www.w3.org/TR/wai-aria-1.1/#dfn-live-region)."}},{name:"aria-modal",valueSet:"b",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-modal"}],description:{kind:"markdown",value:"Indicates whether an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) is modal when displayed."}},{name:"aria-multiline",valueSet:"b",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-multiline"}],description:{kind:"markdown",value:"Indicates whether a text box accepts multiple lines of input or only a single line."}},{name:"aria-multiselectable",valueSet:"b",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-multiselectable"}],description:{kind:"markdown",value:"Indicates that the user may select more than one item from the current selectable descendants."}},{name:"aria-orientation",valueSet:"orientation",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-orientation"}],description:{kind:"markdown",value:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."}},{name:"aria-owns",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-owns"}],description:{kind:"markdown",value:"Identifies an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) in order to define a visual, functional, or contextual parent/child [relationship](https://www.w3.org/TR/wai-aria-1.1/#dfn-relationship) between DOM elements where the DOM hierarchy cannot be used to represent the relationship. See related [`aria-controls`](https://www.w3.org/TR/wai-aria-1.1/#aria-controls)."}},{name:"aria-placeholder",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-placeholder"}],description:{kind:"markdown",value:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value. A hint could be a sample value or a brief description of the expected format."}},{name:"aria-posinset",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-posinset"}],description:{kind:"markdown",value:"Defines an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element)'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. See related [`aria-setsize`](https://www.w3.org/TR/wai-aria-1.1/#aria-setsize)."}},{name:"aria-pressed",valueSet:"tristate",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-pressed"}],description:{kind:"markdown",value:'Indicates the current "pressed" [state](https://www.w3.org/TR/wai-aria-1.1/#dfn-state) of toggle buttons. See related [`aria-checked`](https://www.w3.org/TR/wai-aria-1.1/#aria-checked) and [`aria-selected`](https://www.w3.org/TR/wai-aria-1.1/#aria-selected).'}},{name:"aria-readonly",valueSet:"b",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-readonly"}],description:{kind:"markdown",value:"Indicates that the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) is not editable, but is otherwise [operable](https://www.w3.org/TR/wai-aria-1.1/#dfn-operable). See related [`aria-disabled`](https://www.w3.org/TR/wai-aria-1.1/#aria-disabled)."}},{name:"aria-relevant",valueSet:"relevant",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-relevant"}],description:{kind:"markdown",value:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified. See related [`aria-atomic`](https://www.w3.org/TR/wai-aria-1.1/#aria-atomic)."}},{name:"aria-required",valueSet:"b",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-required"}],description:{kind:"markdown",value:"Indicates that user input is required on the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) before a form may be submitted."}},{name:"aria-roledescription",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-roledescription"}],description:{kind:"markdown",value:"Defines a human-readable, author-localized description for the [role](https://www.w3.org/TR/wai-aria-1.1/#dfn-role) of an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element)."}},{name:"aria-rowcount",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-rowcount"}],description:{kind:"markdown",value:"Defines the total number of rows in a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-rowindex`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowindex)."}},{name:"aria-rowindex",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-rowindex"}],description:{kind:"markdown",value:"Defines an [element's](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) row index or position with respect to the total number of rows within a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-rowcount`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowcount) and [`aria-rowspan`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowspan)."}},{name:"aria-rowspan",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-rowspan"}],description:{kind:"markdown",value:"Defines the number of rows spanned by a cell or gridcell within a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-rowindex`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowindex) and [`aria-colspan`](https://www.w3.org/TR/wai-aria-1.1/#aria-colspan)."}},{name:"aria-selected",valueSet:"u",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-selected"}],description:{kind:"markdown",value:'Indicates the current "selected" [state](https://www.w3.org/TR/wai-aria-1.1/#dfn-state) of various [widgets](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget). See related [`aria-checked`](https://www.w3.org/TR/wai-aria-1.1/#aria-checked) and [`aria-pressed`](https://www.w3.org/TR/wai-aria-1.1/#aria-pressed).'}},{name:"aria-setsize",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-setsize"}],description:{kind:"markdown",value:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. See related [`aria-posinset`](https://www.w3.org/TR/wai-aria-1.1/#aria-posinset)."}},{name:"aria-sort",valueSet:"sort",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-sort"}],description:{kind:"markdown",value:"Indicates if items in a table or grid are sorted in ascending or descending order."}},{name:"aria-valuemax",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-valuemax"}],description:{kind:"markdown",value:"Defines the maximum allowed value for a range [widget](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget)."}},{name:"aria-valuemin",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-valuemin"}],description:{kind:"markdown",value:"Defines the minimum allowed value for a range [widget](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget)."}},{name:"aria-valuenow",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-valuenow"}],description:{kind:"markdown",value:"Defines the current value for a range [widget](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget). See related [`aria-valuetext`](https://www.w3.org/TR/wai-aria-1.1/#aria-valuetext)."}},{name:"aria-valuetext",references:[{name:"WAI-ARIA Reference",url:"https://www.w3.org/TR/wai-aria-1.1/#aria-valuetext"}],description:{kind:"markdown",value:"Defines the human readable text alternative of [`aria-valuenow`](https://www.w3.org/TR/wai-aria-1.1/#aria-valuenow) for a range [widget](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget)."}},{name:"aria-details",description:{kind:"markdown",value:"Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) that provides a detailed, extended description for the [object](https://www.w3.org/TR/wai-aria-1.1/#dfn-object). See related [`aria-describedby`](https://www.w3.org/TR/wai-aria-1.1/#aria-describedby)."}},{name:"aria-keyshortcuts",description:{kind:"markdown",value:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."}}],valueSets:[{name:"b",values:[{name:"true"},{name:"false"}]},{name:"u",values:[{name:"true"},{name:"false"},{name:"undefined"}]},{name:"o",values:[{name:"on"},{name:"off"}]},{name:"y",values:[{name:"yes"},{name:"no"}]},{name:"w",values:[{name:"soft"},{name:"hard"}]},{name:"d",values:[{name:"ltr"},{name:"rtl"},{name:"auto"}]},{name:"m",values:[{name:"get",description:{kind:"markdown",value:"Corresponds to the HTTP [GET method](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.3); form data are appended to the `action` attribute URI with a '?' as separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters."}},{name:"post",description:{kind:"markdown",value:"Corresponds to the HTTP [POST method](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.5); form data are included in the body of the form and sent to the server."}},{name:"dialog",description:{kind:"markdown",value:"Use when the form is inside a [`<dialog>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog) element to close the dialog when submitted."}}]},{name:"fm",values:[{name:"get"},{name:"post"}]},{name:"s",values:[{name:"row"},{name:"col"},{name:"rowgroup"},{name:"colgroup"}]},{name:"t",values:[{name:"hidden"},{name:"text"},{name:"search"},{name:"tel"},{name:"url"},{name:"email"},{name:"password"},{name:"datetime"},{name:"date"},{name:"month"},{name:"week"},{name:"time"},{name:"datetime-local"},{name:"number"},{name:"range"},{name:"color"},{name:"checkbox"},{name:"radio"},{name:"file"},{name:"submit"},{name:"image"},{name:"reset"},{name:"button"}]},{name:"im",values:[{name:"verbatim"},{name:"latin"},{name:"latin-name"},{name:"latin-prose"},{name:"full-width-latin"},{name:"kana"},{name:"kana-name"},{name:"katakana"},{name:"numeric"},{name:"tel"},{name:"email"},{name:"url"}]},{name:"bt",values:[{name:"button"},{name:"submit"},{name:"reset"},{name:"menu"}]},{name:"lt",values:[{name:"1"},{name:"a"},{name:"A"},{name:"i"},{name:"I"}]},{name:"mt",values:[{name:"context"},{name:"toolbar"}]},{name:"mit",values:[{name:"command"},{name:"checkbox"},{name:"radio"}]},{name:"et",values:[{name:"application/x-www-form-urlencoded"},{name:"multipart/form-data"},{name:"text/plain"}]},{name:"tk",values:[{name:"subtitles"},{name:"captions"},{name:"descriptions"},{name:"chapters"},{name:"metadata"}]},{name:"pl",values:[{name:"none"},{name:"metadata"},{name:"auto"}]},{name:"sh",values:[{name:"circle"},{name:"default"},{name:"poly"},{name:"rect"}]},{name:"xo",values:[{name:"anonymous"},{name:"use-credentials"}]},{name:"sb",values:[{name:"allow-forms"},{name:"allow-modals"},{name:"allow-pointer-lock"},{name:"allow-popups"},{name:"allow-popups-to-escape-sandbox"},{name:"allow-same-origin"},{name:"allow-scripts"},{name:"allow-top-navigation"}]},{name:"tristate",values:[{name:"true"},{name:"false"},{name:"mixed"},{name:"undefined"}]},{name:"inputautocomplete",values:[{name:"additional-name"},{name:"address-level1"},{name:"address-level2"},{name:"address-level3"},{name:"address-level4"},{name:"address-line1"},{name:"address-line2"},{name:"address-line3"},{name:"bday"},{name:"bday-year"},{name:"bday-day"},{name:"bday-month"},{name:"billing"},{name:"cc-additional-name"},{name:"cc-csc"},{name:"cc-exp"},{name:"cc-exp-month"},{name:"cc-exp-year"},{name:"cc-family-name"},{name:"cc-given-name"},{name:"cc-name"},{name:"cc-number"},{name:"cc-type"},{name:"country"},{name:"country-name"},{name:"current-password"},{name:"email"},{name:"family-name"},{name:"fax"},{name:"given-name"},{name:"home"},{name:"honorific-prefix"},{name:"honorific-suffix"},{name:"impp"},{name:"language"},{name:"mobile"},{name:"name"},{name:"new-password"},{name:"nickname"},{name:"organization"},{name:"organization-title"},{name:"pager"},{name:"photo"},{name:"postal-code"},{name:"sex"},{name:"shipping"},{name:"street-address"},{name:"tel-area-code"},{name:"tel"},{name:"tel-country-code"},{name:"tel-extension"},{name:"tel-local"},{name:"tel-local-prefix"},{name:"tel-local-suffix"},{name:"tel-national"},{name:"transaction-amount"},{name:"transaction-currency"},{name:"url"},{name:"username"},{name:"work"}]},{name:"autocomplete",values:[{name:"inline"},{name:"list"},{name:"both"},{name:"none"}]},{name:"current",values:[{name:"page"},{name:"step"},{name:"location"},{name:"date"},{name:"time"},{name:"true"},{name:"false"}]},{name:"dropeffect",values:[{name:"copy"},{name:"move"},{name:"link"},{name:"execute"},{name:"popup"},{name:"none"}]},{name:"invalid",values:[{name:"grammar"},{name:"false"},{name:"spelling"},{name:"true"}]},{name:"live",values:[{name:"off"},{name:"polite"},{name:"assertive"}]},{name:"orientation",values:[{name:"vertical"},{name:"horizontal"},{name:"undefined"}]},{name:"relevant",values:[{name:"additions"},{name:"removals"},{name:"text"},{name:"all"},{name:"additions text"}]},{name:"sort",values:[{name:"ascending"},{name:"descending"},{name:"none"},{name:"other"}]},{name:"roles",values:[{name:"alert"},{name:"alertdialog"},{name:"button"},{name:"checkbox"},{name:"dialog"},{name:"gridcell"},{name:"link"},{name:"log"},{name:"marquee"},{name:"menuitem"},{name:"menuitemcheckbox"},{name:"menuitemradio"},{name:"option"},{name:"progressbar"},{name:"radio"},{name:"scrollbar"},{name:"searchbox"},{name:"slider"},{name:"spinbutton"},{name:"status"},{name:"switch"},{name:"tab"},{name:"tabpanel"},{name:"textbox"},{name:"timer"},{name:"tooltip"},{name:"treeitem"},{name:"combobox"},{name:"grid"},{name:"listbox"},{name:"menu"},{name:"menubar"},{name:"radiogroup"},{name:"tablist"},{name:"tree"},{name:"treegrid"},{name:"application"},{name:"article"},{name:"cell"},{name:"columnheader"},{name:"definition"},{name:"directory"},{name:"document"},{name:"feed"},{name:"figure"},{name:"group"},{name:"heading"},{name:"img"},{name:"list"},{name:"listitem"},{name:"math"},{name:"none"},{name:"note"},{name:"presentation"},{name:"region"},{name:"row"},{name:"rowgroup"},{name:"rowheader"},{name:"separator"},{name:"table"},{name:"term"},{name:"text"},{name:"toolbar"},{name:"banner"},{name:"complementary"},{name:"contentinfo"},{name:"form"},{name:"main"},{name:"navigation"},{name:"region"},{name:"search"},{name:"doc-abstract"},{name:"doc-acknowledgments"},{name:"doc-afterword"},{name:"doc-appendix"},{name:"doc-backlink"},{name:"doc-biblioentry"},{name:"doc-bibliography"},{name:"doc-biblioref"},{name:"doc-chapter"},{name:"doc-colophon"},{name:"doc-conclusion"},{name:"doc-cover"},{name:"doc-credit"},{name:"doc-credits"},{name:"doc-dedication"},{name:"doc-endnote"},{name:"doc-endnotes"},{name:"doc-epigraph"},{name:"doc-epilogue"},{name:"doc-errata"},{name:"doc-example"},{name:"doc-footnote"},{name:"doc-foreword"},{name:"doc-glossary"},{name:"doc-glossref"},{name:"doc-index"},{name:"doc-introduction"},{name:"doc-noteref"},{name:"doc-notice"},{name:"doc-pagebreak"},{name:"doc-pagelist"},{name:"doc-part"},{name:"doc-preface"},{name:"doc-prologue"},{name:"doc-pullquote"},{name:"doc-qna"},{name:"doc-subtitle"},{name:"doc-tip"},{name:"doc-toc"}]},{name:"metanames",values:[{name:"application-name"},{name:"author"},{name:"description"},{name:"format-detection"},{name:"generator"},{name:"keywords"},{name:"publisher"},{name:"referrer"},{name:"robots"},{name:"theme-color"},{name:"viewport"}]},{name:"haspopup",values:[{name:"false",description:{kind:"markdown",value:"(default) Indicates the element does not have a popup."}},{name:"true",description:{kind:"markdown",value:"Indicates the popup is a menu."}},{name:"menu",description:{kind:"markdown",value:"Indicates the popup is a menu."}},{name:"listbox",description:{kind:"markdown",value:"Indicates the popup is a listbox."}},{name:"tree",description:{kind:"markdown",value:"Indicates the popup is a tree."}},{name:"grid",description:{kind:"markdown",value:"Indicates the popup is a grid."}},{name:"dialog",description:{kind:"markdown",value:"Indicates the popup is a dialog."}}]}]},ec=function(){function e(t){this.dataProviders=[],this.setDataProviders(t.useDefaultDataProvider!==!1,t.customDataProviders||[])}return e.prototype.setDataProviders=function(t,n){var i;this.dataProviders=[],t&&this.dataProviders.push(new Ya("html5",Ku)),(i=this.dataProviders).push.apply(i,n)},e.prototype.getDataProviders=function(){return this.dataProviders},e}(),tc={};function nc(e){e===void 0&&(e=tc);var t=new ec(e),n=new Lu(e,t),i=new xu(e,t);return{setDataProviders:t.setDataProviders.bind(t),createScanner:we,parseHTMLDocument:function(r){return Ja(r.getText())},doComplete:i.doComplete.bind(i),doComplete2:i.doComplete2.bind(i),setCompletionParticipants:i.setCompletionParticipants.bind(i),doHover:n.doHover.bind(n),format:Du,findDocumentHighlights:qu,findDocumentLinks:Bu,findDocumentSymbols:Ou,getFoldingRanges:Ju,getSelectionRanges:Qu,doQuoteComplete:i.doQuoteComplete.bind(i),doTagComplete:i.doTagComplete.bind(i),doRename:ju,findMatchingTagPosition:$u,findOnTypeRenameRanges:cs,findLinkedEditingRanges:cs}}function ic(e,t){return new Ya(e,t)}var rc=class{constructor(e,t){this._ctx=e,this._languageSettings=t.languageSettings,this._languageId=t.languageId;const n=this._languageSettings.data,i=n?.useDefaultDataProvider,r=[];if(n?.dataProviders)for(const a in n.dataProviders)r.push(ic(a,n.dataProviders[a]));this._languageService=nc({useDefaultDataProvider:i,customDataProviders:r})}async doComplete(e,t){let n=this._getTextDocument(e);if(!n)return null;let i=this._languageService.parseHTMLDocument(n);return Promise.resolve(this._languageService.doComplete(n,t,i,this._languageSettings&&this._languageSettings.suggest))}async format(e,t,n){let i=this._getTextDocument(e);if(!i)return[];let r={...this._languageSettings.format,...n},a=this._languageService.format(i,t,r);return Promise.resolve(a)}async doHover(e,t){let n=this._getTextDocument(e);if(!n)return null;let i=this._languageService.parseHTMLDocument(n),r=this._languageService.doHover(n,t,i);return Promise.resolve(r)}async findDocumentHighlights(e,t){let n=this._getTextDocument(e);if(!n)return[];let i=this._languageService.parseHTMLDocument(n),r=this._languageService.findDocumentHighlights(n,t,i);return Promise.resolve(r)}async findDocumentLinks(e){let t=this._getTextDocument(e);if(!t)return[];let n=this._languageService.findDocumentLinks(t,null);return Promise.resolve(n)}async findDocumentSymbols(e){let t=this._getTextDocument(e);if(!t)return[];let n=this._languageService.parseHTMLDocument(t),i=this._languageService.findDocumentSymbols(t,n);return Promise.resolve(i)}async getFoldingRanges(e,t){let n=this._getTextDocument(e);if(!n)return[];let i=this._languageService.getFoldingRanges(n,t);return Promise.resolve(i)}async getSelectionRanges(e,t){let n=this._getTextDocument(e);if(!n)return[];let i=this._languageService.getSelectionRanges(n,t);return Promise.resolve(i)}async doRename(e,t,n){let i=this._getTextDocument(e);if(!i)return null;let r=this._languageService.parseHTMLDocument(i),a=this._languageService.doRename(i,t,n,r);return Promise.resolve(a)}_getTextDocument(e){let t=this._ctx.getMirrorModels();for(let n of t)if(n.uri.toString()===e)return ai.create(e,this._languageId,n.version,n.getValue());return null}};self.onmessage=()=>{ca((e,t)=>new rc(e,t))}})();
",I=Z=>Uint8Array.from(atob(Z),l=>l.charCodeAt(0)),G=typeof self<"u"&&self.Blob&&new Blob([I(d)],{type:"text/javascript;charset=utf-8"});function W(Z){let l;try{if(l=G&&(self.URL||self.webkitURL).createObjectURL(G),!l)throw"";const b=new Worker(l,{name:Z==null?void 0:Z.name});return b.addEventListener("error",()=>{(self.URL||self.webkitURL).revokeObjectURL(l)}),b}catch(b){return new Worker("data:text/javascript;base64,"+d,{name:Z==null?void 0:Z.name})}finally{l&&(self.URL||self.webkitURL).revokeObjectURL(l)}}export{W as default};
