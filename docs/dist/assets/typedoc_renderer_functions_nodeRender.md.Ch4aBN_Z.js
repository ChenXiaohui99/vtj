import{_ as e,c as o,o as n,a6 as r}from"./chunks/framework.CX3W3h5X.js";const f=JSON.parse('{"title":"Function: nodeRender()","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/renderer/functions/nodeRender.md","filePath":"typedoc/renderer/functions/nodeRender.md"}'),d={name:"typedoc/renderer/functions/nodeRender.md"},t=r('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">renderer</a> / nodeRender</p><h1 id="function-noderender" tabindex="-1">Function: nodeRender() <a class="header-anchor" href="#function-noderender" aria-label="Permalink to &quot;Function: nodeRender()&quot;">​</a></h1><blockquote><p><strong>nodeRender</strong>(<code>dsl</code>, <code>context</code>, <code>Vue</code>?, <code>loader</code>?): <code>VNode</code> | <code>VNode</code>[] | <code>null</code></p></blockquote><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>dsl</strong>: <code>NodeSchema</code></p><p>• <strong>context</strong>: <a href="./../classes/Context.html"><code>Context</code></a></p><p>• <strong>Vue?</strong>: <code>any</code></p><p>• <strong>loader?</strong>: <a href="./../type-aliases/BlockLoader.html"><code>BlockLoader</code></a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>VNode</code> | <code>VNode</code>[] | <code>null</code></p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p>packages/renderer/types/render/node.d.ts:6</p>',14),a=[t];function c(s,i,l,h,p,u){return n(),o("div",null,a)}const m=e(d,[["render",c]]);export{f as __pageData,m as default};
