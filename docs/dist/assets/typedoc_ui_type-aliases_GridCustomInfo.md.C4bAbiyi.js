import{_ as e,c as o,o as t,a6 as a}from"./chunks/framework.CX3W3h5X.js";const b=JSON.parse('{"title":"Type Alias: GridCustomInfo","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/ui/type-aliases/GridCustomInfo.md","filePath":"typedoc/ui/type-aliases/GridCustomInfo.md"}'),i={name:"typedoc/ui/type-aliases/GridCustomInfo.md"},r=a('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">ui</a> / GridCustomInfo</p><h1 id="type-alias-gridcustominfo" tabindex="-1">Type Alias: GridCustomInfo <a class="header-anchor" href="#type-alias-gridcustominfo" aria-label="Permalink to &quot;Type Alias: GridCustomInfo&quot;">​</a></h1><blockquote><p><strong>GridCustomInfo</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="fixed" tabindex="-1">fixed? <a class="header-anchor" href="#fixed" aria-label="Permalink to &quot;fixed?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>fixed</strong>: <code>Record</code>&lt;<code>string</code>, <code>VxeColumnPropTypes.Fixed</code>&gt;</p></blockquote><h3 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id&quot;">​</a></h3><blockquote><p><strong>id</strong>: <code>string</code></p></blockquote><h3 id="resize" tabindex="-1">resize? <a class="header-anchor" href="#resize" aria-label="Permalink to &quot;resize?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>resize</strong>: <code>Record</code>&lt;<code>string</code>, <code>number</code>&gt;</p></blockquote><h3 id="sort" tabindex="-1">sort? <a class="header-anchor" href="#sort" aria-label="Permalink to &quot;sort?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>sort</strong>: <code>string</code>[]</p></blockquote><h3 id="visible" tabindex="-1">visible? <a class="header-anchor" href="#visible" aria-label="Permalink to &quot;visible?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>visible</strong>: <code>Record</code>&lt;<code>string</code>, <code>boolean</code>&gt;</p></blockquote><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p>packages/ui/types/components/grid/types.d.ts:36</p>',18),d=[r];function s(c,n,l,p,h,u){return t(),o("div",null,d)}const m=e(i,[["render",s]]);export{b as __pageData,m as default};
