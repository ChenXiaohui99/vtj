import{_ as e,c as o,o as t,a6 as a}from"./chunks/framework.CX3W3h5X.js";const g=JSON.parse('{"title":"Variable: containerProps","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/ui/variables/containerProps.md","filePath":"typedoc/ui/variables/containerProps.md"}'),r={name:"typedoc/ui/variables/containerProps.md"},n=a('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">ui</a> / containerProps</p><h1 id="variable-containerprops" tabindex="-1">Variable: containerProps <a class="header-anchor" href="#variable-containerprops" aria-label="Permalink to &quot;Variable: containerProps&quot;">​</a></h1><blockquote><p><code>const</code> <strong>containerProps</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="align" tabindex="-1">align <a class="header-anchor" href="#align" aria-label="Permalink to &quot;align&quot;">​</a></h3><blockquote><p><strong>align</strong>: <code>object</code></p></blockquote><p>交叉轴上对齐方式</p><h3 id="align-default" tabindex="-1">align.default <a class="header-anchor" href="#align-default" aria-label="Permalink to &quot;align.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="align-type" tabindex="-1">align.type <a class="header-anchor" href="#align-type" aria-label="Permalink to &quot;align.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/ContainerAlignItems.html"><code>ContainerAlignItems</code></a>&gt;</p></blockquote><h3 id="aligncontent" tabindex="-1">alignContent <a class="header-anchor" href="#aligncontent" aria-label="Permalink to &quot;alignContent&quot;">​</a></h3><blockquote><p><strong>alignContent</strong>: <code>object</code></p></blockquote><p>多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</p><h3 id="aligncontent-default" tabindex="-1">alignContent.default <a class="header-anchor" href="#aligncontent-default" aria-label="Permalink to &quot;alignContent.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="aligncontent-type" tabindex="-1">alignContent.type <a class="header-anchor" href="#aligncontent-type" aria-label="Permalink to &quot;alignContent.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/ContainerAlignContent.html"><code>ContainerAlignContent</code></a>&gt;</p></blockquote><h3 id="alignself" tabindex="-1">alignSelf <a class="header-anchor" href="#alignself" aria-label="Permalink to &quot;alignSelf&quot;">​</a></h3><blockquote><p><strong>alignSelf</strong>: <code>object</code></p></blockquote><p>单个项目有与其他项目不一样的对齐方式。可覆盖容器的align-items属性</p><h3 id="alignself-default" tabindex="-1">alignSelf.default <a class="header-anchor" href="#alignself-default" aria-label="Permalink to &quot;alignSelf.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="alignself-type" tabindex="-1">alignSelf.type <a class="header-anchor" href="#alignself-type" aria-label="Permalink to &quot;alignSelf.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>&quot;auto&quot;</code> | <a href="./../type-aliases/ContainerAlignItems.html"><code>ContainerAlignItems</code></a>&gt;</p></blockquote><h3 id="autopointer" tabindex="-1">autoPointer <a class="header-anchor" href="#autopointer" aria-label="Permalink to &quot;autoPointer&quot;">​</a></h3><blockquote><p><strong>autoPointer</strong>: <code>object</code></p></blockquote><h3 id="autopointer-type" tabindex="-1">autoPointer.type <a class="header-anchor" href="#autopointer-type" aria-label="Permalink to &quot;autoPointer.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="direction" tabindex="-1">direction <a class="header-anchor" href="#direction" aria-label="Permalink to &quot;direction&quot;">​</a></h3><blockquote><p><strong>direction</strong>: <code>object</code></p></blockquote><p>flex主轴方向</p><h3 id="direction-default" tabindex="-1">direction.default <a class="header-anchor" href="#direction-default" aria-label="Permalink to &quot;direction.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="direction-type" tabindex="-1">direction.type <a class="header-anchor" href="#direction-type" aria-label="Permalink to &quot;direction.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/ContainerDirection.html"><code>ContainerDirection</code></a>&gt;</p></blockquote><h3 id="fit" tabindex="-1">fit <a class="header-anchor" href="#fit" aria-label="Permalink to &quot;fit&quot;">​</a></h3><blockquote><p><strong>fit</strong>: <code>object</code></p></blockquote><p>宽高自适应</p><h3 id="fit-default" tabindex="-1">fit.default <a class="header-anchor" href="#fit-default" aria-label="Permalink to &quot;fit.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>boolean</code></p></blockquote><h3 id="fit-type" tabindex="-1">fit.type <a class="header-anchor" href="#fit-type" aria-label="Permalink to &quot;fit.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="flex" tabindex="-1">flex <a class="header-anchor" href="#flex" aria-label="Permalink to &quot;flex&quot;">​</a></h3><blockquote><p><strong>flex</strong>: <code>object</code></p></blockquote><p>开启flex布局</p><h3 id="flex-default" tabindex="-1">flex.default <a class="header-anchor" href="#flex-default" aria-label="Permalink to &quot;flex.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>boolean</code></p></blockquote><h3 id="flex-type" tabindex="-1">flex.type <a class="header-anchor" href="#flex-type" aria-label="Permalink to &quot;flex.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="gap" tabindex="-1">gap <a class="header-anchor" href="#gap" aria-label="Permalink to &quot;gap&quot;">​</a></h3><blockquote><p><strong>gap</strong>: <code>object</code></p></blockquote><h3 id="gap-type" tabindex="-1">gap.type <a class="header-anchor" href="#gap-type" aria-label="Permalink to &quot;gap.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="grow" tabindex="-1">grow <a class="header-anchor" href="#grow" aria-label="Permalink to &quot;grow&quot;">​</a></h3><blockquote><p><strong>grow</strong>: <code>object</code></p></blockquote><p>放大</p><h3 id="grow-default" tabindex="-1">grow.default <a class="header-anchor" href="#grow-default" aria-label="Permalink to &quot;grow.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>boolean</code></p></blockquote><h3 id="grow-type" tabindex="-1">grow.type <a class="header-anchor" href="#grow-type" aria-label="Permalink to &quot;grow.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="height" tabindex="-1">height <a class="header-anchor" href="#height" aria-label="Permalink to &quot;height&quot;">​</a></h3><blockquote><p><strong>height</strong>: <code>object</code></p></blockquote><p>指定高度，fit 为true失效</p><h3 id="height-type" tabindex="-1">height.type <a class="header-anchor" href="#height-type" aria-label="Permalink to &quot;height.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: (<code>StringConstructor</code> | <code>NumberConstructor</code>)[]</p></blockquote><h3 id="inline" tabindex="-1">inline <a class="header-anchor" href="#inline" aria-label="Permalink to &quot;inline&quot;">​</a></h3><blockquote><p><strong>inline</strong>: <code>object</code></p></blockquote><p>inline-flex</p><h3 id="inline-type" tabindex="-1">inline.type <a class="header-anchor" href="#inline-type" aria-label="Permalink to &quot;inline.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="justify" tabindex="-1">justify <a class="header-anchor" href="#justify" aria-label="Permalink to &quot;justify&quot;">​</a></h3><blockquote><p><strong>justify</strong>: <code>object</code></p></blockquote><p>主轴上的对齐方式。</p><h3 id="justify-default" tabindex="-1">justify.default <a class="header-anchor" href="#justify-default" aria-label="Permalink to &quot;justify.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="justify-type" tabindex="-1">justify.type <a class="header-anchor" href="#justify-type" aria-label="Permalink to &quot;justify.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/ContainerJustifyContent.html"><code>ContainerJustifyContent</code></a>&gt;</p></blockquote><h3 id="overflow" tabindex="-1">overflow <a class="header-anchor" href="#overflow" aria-label="Permalink to &quot;overflow&quot;">​</a></h3><blockquote><p><strong>overflow</strong>: <code>object</code></p></blockquote><p>css overflow</p><h3 id="overflow-type" tabindex="-1">overflow.type <a class="header-anchor" href="#overflow-type" aria-label="Permalink to &quot;overflow.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>&quot;auto&quot;</code> | <code>&quot;hidden&quot;</code> | <code>&quot;visible&quot;</code>&gt;</p></blockquote><h3 id="padding" tabindex="-1">padding <a class="header-anchor" href="#padding" aria-label="Permalink to &quot;padding&quot;">​</a></h3><blockquote><p><strong>padding</strong>: <code>object</code></p></blockquote><p>内边距</p><h3 id="padding-default" tabindex="-1">padding.default <a class="header-anchor" href="#padding-default" aria-label="Permalink to &quot;padding.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>boolean</code></p></blockquote><h3 id="padding-type" tabindex="-1">padding.type <a class="header-anchor" href="#padding-type" aria-label="Permalink to &quot;padding.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="shrink" tabindex="-1">shrink <a class="header-anchor" href="#shrink" aria-label="Permalink to &quot;shrink&quot;">​</a></h3><blockquote><p><strong>shrink</strong>: <code>object</code></p></blockquote><p>缩小</p><h3 id="shrink-default" tabindex="-1">shrink.default <a class="header-anchor" href="#shrink-default" aria-label="Permalink to &quot;shrink.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>boolean</code></p></blockquote><h3 id="shrink-type" tabindex="-1">shrink.type <a class="header-anchor" href="#shrink-type" aria-label="Permalink to &quot;shrink.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="tag" tabindex="-1">tag <a class="header-anchor" href="#tag" aria-label="Permalink to &quot;tag&quot;">​</a></h3><blockquote><p><strong>tag</strong>: <code>object</code></p></blockquote><p>组件渲染html标签</p><h3 id="tag-default" tabindex="-1">tag.default <a class="header-anchor" href="#tag-default" aria-label="Permalink to &quot;tag.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="tag-type" tabindex="-1">tag.type <a class="header-anchor" href="#tag-type" aria-label="Permalink to &quot;tag.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>StringConstructor</code></p></blockquote><h3 id="width" tabindex="-1">width <a class="header-anchor" href="#width" aria-label="Permalink to &quot;width&quot;">​</a></h3><blockquote><p><strong>width</strong>: <code>object</code></p></blockquote><p>指定高度，fit 为true 失效</p><h3 id="width-type" tabindex="-1">width.type <a class="header-anchor" href="#width-type" aria-label="Permalink to &quot;width.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: (<code>StringConstructor</code> | <code>NumberConstructor</code>)[]</p></blockquote><h3 id="wrap" tabindex="-1">wrap <a class="header-anchor" href="#wrap" aria-label="Permalink to &quot;wrap&quot;">​</a></h3><blockquote><p><strong>wrap</strong>: <code>object</code></p></blockquote><p>换行</p><h3 id="wrap-default" tabindex="-1">wrap.default <a class="header-anchor" href="#wrap-default" aria-label="Permalink to &quot;wrap.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="wrap-type" tabindex="-1">wrap.type <a class="header-anchor" href="#wrap-type" aria-label="Permalink to &quot;wrap.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/ContainerWrap.html"><code>ContainerWrap</code></a>&gt;</p></blockquote><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p>packages/ui/types/components/container/types.d.ts:10</p>',120),l=[n];function i(c,d,h,p,u,s){return t(),o("div",null,l)}const q=e(r,[["render",i]]);export{g as __pageData,q as default};
