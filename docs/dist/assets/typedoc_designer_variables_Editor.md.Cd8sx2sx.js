import{_ as e,c as o,o as a,a6 as t}from"./chunks/framework.CX3W3h5X.js";const g=JSON.parse('{"title":"Variable: Editor","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/designer/variables/Editor.md","filePath":"typedoc/designer/variables/Editor.md"}'),d={name:"typedoc/designer/variables/Editor.md"},r=t('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">designer</a> / Editor</p><h1 id="variable-editor" tabindex="-1">Variable: Editor <a class="header-anchor" href="#variable-editor" aria-label="Permalink to &quot;Variable: Editor&quot;">​</a></h1><blockquote><p><code>const</code> <strong>Editor</strong>: <code>DefineComponent</code>&lt;<code>object</code>, <code>object</code>, <code>unknown</code>, <code>object</code>, <code>object</code>, <code>ComponentOptionsMixin</code>, <code>ComponentOptionsMixin</code>, <code>object</code>, <code>string</code>, <code>PublicProps</code>, <code>Readonly</code>&lt;<code>ExtractPropTypes</code>&lt;<code>object</code>&gt;&gt; &amp; <code>object</code>, <code>object</code>, <code>object</code>&gt;</p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="border" tabindex="-1">border <a class="header-anchor" href="#border" aria-label="Permalink to &quot;border&quot;">​</a></h3><blockquote><p><strong>border</strong>: <code>object</code></p></blockquote><h3 id="border-type" tabindex="-1">border.type <a class="header-anchor" href="#border-type" aria-label="Permalink to &quot;border.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>boolean</code>&gt;</p></blockquote><h3 id="dark" tabindex="-1">dark <a class="header-anchor" href="#dark" aria-label="Permalink to &quot;dark&quot;">​</a></h3><blockquote><p><strong>dark</strong>: <code>object</code></p></blockquote><h3 id="dark-default" tabindex="-1">dark.default <a class="header-anchor" href="#dark-default" aria-label="Permalink to &quot;dark.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>boolean</code></p></blockquote><h3 id="dark-type" tabindex="-1">dark.type <a class="header-anchor" href="#dark-type" aria-label="Permalink to &quot;dark.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>boolean</code>&gt;</p></blockquote><h3 id="height" tabindex="-1">height <a class="header-anchor" href="#height" aria-label="Permalink to &quot;height&quot;">​</a></h3><blockquote><p><strong>height</strong>: <code>object</code></p></blockquote><h3 id="height-default" tabindex="-1">height.default <a class="header-anchor" href="#height-default" aria-label="Permalink to &quot;height.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="height-type" tabindex="-1">height.type <a class="header-anchor" href="#height-type" aria-label="Permalink to &quot;height.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>string</code>&gt;</p></blockquote><h3 id="lang" tabindex="-1">lang <a class="header-anchor" href="#lang" aria-label="Permalink to &quot;lang&quot;">​</a></h3><blockquote><p><strong>lang</strong>: <code>object</code></p></blockquote><h3 id="lang-default" tabindex="-1">lang.default <a class="header-anchor" href="#lang-default" aria-label="Permalink to &quot;lang.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="lang-type" tabindex="-1">lang.type <a class="header-anchor" href="#lang-type" aria-label="Permalink to &quot;lang.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>string</code>&gt;</p></blockquote><h3 id="minimap" tabindex="-1">minimap <a class="header-anchor" href="#minimap" aria-label="Permalink to &quot;minimap&quot;">​</a></h3><blockquote><p><strong>minimap</strong>: <code>object</code></p></blockquote><h3 id="minimap-default" tabindex="-1">minimap.default <a class="header-anchor" href="#minimap-default" aria-label="Permalink to &quot;minimap.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>boolean</code></p></blockquote><h3 id="minimap-type" tabindex="-1">minimap.type <a class="header-anchor" href="#minimap-type" aria-label="Permalink to &quot;minimap.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>boolean</code>&gt;</p></blockquote><h3 id="modelvalue" tabindex="-1">modelValue <a class="header-anchor" href="#modelvalue" aria-label="Permalink to &quot;modelValue&quot;">​</a></h3><blockquote><p><strong>modelValue</strong>: <code>object</code></p></blockquote><h3 id="modelvalue-default" tabindex="-1">modelValue.default <a class="header-anchor" href="#modelvalue-default" aria-label="Permalink to &quot;modelValue.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="modelvalue-type" tabindex="-1">modelValue.type <a class="header-anchor" href="#modelvalue-type" aria-label="Permalink to &quot;modelValue.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>string</code>&gt;</p></blockquote><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><blockquote><p><strong>options</strong>: <code>object</code></p></blockquote><h3 id="options-default" tabindex="-1">options.default() <a class="header-anchor" href="#options-default" aria-label="Permalink to &quot;options.default()&quot;">​</a></h3><blockquote><p><strong>default</strong>: () =&gt; <code>object</code></p></blockquote><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>object</code></p><h3 id="options-type" tabindex="-1">options.type <a class="header-anchor" href="#options-type" aria-label="Permalink to &quot;options.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>editor.IEditorConstructionOptions</code>&gt;</p></blockquote><h3 id="readonly" tabindex="-1">readonly <a class="header-anchor" href="#readonly" aria-label="Permalink to &quot;readonly&quot;">​</a></h3><blockquote><p><strong>readonly</strong>: <code>object</code></p></blockquote><h3 id="readonly-default" tabindex="-1">readonly.default <a class="header-anchor" href="#readonly-default" aria-label="Permalink to &quot;readonly.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>boolean</code></p></blockquote><h3 id="readonly-type" tabindex="-1">readonly.type <a class="header-anchor" href="#readonly-type" aria-label="Permalink to &quot;readonly.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>boolean</code>&gt;</p></blockquote><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p>packages/designer/types/components/editor/index.d.ts:2</p>',56),l=[r];function n(c,i,h,s,p,u){return a(),o("div",null,l)}const q=e(d,[["render",n]]);export{g as __pageData,q as default};
