import{_ as e,c as o,o as a,a6 as r}from"./chunks/framework.CX3W3h5X.js";const b=JSON.parse('{"title":"Interface: NodeSchema","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/core/interfaces/NodeSchema.md","filePath":"typedoc/core/interfaces/NodeSchema.md"}'),n={name:"typedoc/core/interfaces/NodeSchema.md"},t=r('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">core</a> / NodeSchema</p><h1 id="interface-nodeschema" tabindex="-1">Interface: NodeSchema <a class="header-anchor" href="#interface-nodeschema" aria-label="Permalink to &quot;Interface: NodeSchema&quot;">​</a></h1><p>低代码组件协议</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="children" tabindex="-1">children? <a class="header-anchor" href="#children" aria-label="Permalink to &quot;children?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>children</strong>: <a href="./../type-aliases/NodeChildren.html"><code>NodeChildren</code></a></p></blockquote><p>子组件</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:50</p><hr><h3 id="directives" tabindex="-1">directives? <a class="header-anchor" href="#directives" aria-label="Permalink to &quot;directives?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>directives</strong>: <a href="./NodeDirective.html"><code>NodeDirective</code></a>[]</p></blockquote><p>内置指令</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:45</p><hr><h3 id="events" tabindex="-1">events? <a class="header-anchor" href="#events" aria-label="Permalink to &quot;events?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>events</strong>: <a href="./../type-aliases/NodeEvents.html"><code>NodeEvents</code></a></p></blockquote><p>绑定事件</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:40</p><hr><h3 id="from" tabindex="-1">from? <a class="header-anchor" href="#from" aria-label="Permalink to &quot;from?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>from</strong>: <a href="./../type-aliases/NodeFrom.html"><code>NodeFrom</code></a></p></blockquote><p>来源</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:20</p><hr><h3 id="id" tabindex="-1">id? <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>id</strong>: <code>string</code></p></blockquote><p>节点标识</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:10</p><hr><h3 id="invisible" tabindex="-1">invisible? <a class="header-anchor" href="#invisible" aria-label="Permalink to &quot;invisible?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>invisible</strong>: <code>boolean</code></p></blockquote><p>不可见的</p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:30</p><hr><h3 id="locked" tabindex="-1">locked? <a class="header-anchor" href="#locked" aria-label="Permalink to &quot;locked?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>locked</strong>: <code>boolean</code></p></blockquote><p>锁定</p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:25</p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <code>string</code></p></blockquote><p>节点名称</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:15</p><hr><h3 id="props" tabindex="-1">props? <a class="header-anchor" href="#props" aria-label="Permalink to &quot;props?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>props</strong>: <a href="./NodeProps.html"><code>NodeProps</code></a></p></blockquote><p>组件属性， 当 name 为 slot 时 props 是 插槽的参数</p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:35</p><hr><h3 id="slot" tabindex="-1">slot? <a class="header-anchor" href="#slot" aria-label="Permalink to &quot;slot?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>slot</strong>: <code>string</code> | <a href="./NodeSlot.html"><code>NodeSlot</code></a></p></blockquote><p>放置在组件的插槽</p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/node.ts:55</p>',65),i=[t];function d(c,s,l,h,p,f){return a(),o("div",null,i)}const u=e(n,[["render",d]]);export{b as __pageData,u as default};
