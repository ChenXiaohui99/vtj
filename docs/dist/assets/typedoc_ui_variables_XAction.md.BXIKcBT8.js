import{_ as e,c as o,o as t,a6 as a}from"./chunks/framework.CX3W3h5X.js";const q=JSON.parse('{"title":"Variable: XAction","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/ui/variables/XAction.md","filePath":"typedoc/ui/variables/XAction.md"}'),c={name:"typedoc/ui/variables/XAction.md"},d=a('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">ui</a> / XAction</p><h1 id="variable-xaction" tabindex="-1">Variable: XAction <a class="header-anchor" href="#variable-xaction" aria-label="Permalink to &quot;Variable: XAction&quot;">​</a></h1><blockquote><p><code>const</code> <strong>XAction</strong>: <code>DefineComponent</code>&lt;<code>object</code>, <code>object</code>, <code>unknown</code>, <code>object</code>, <code>object</code>, <code>ComponentOptionsMixin</code>, <code>ComponentOptionsMixin</code>, <code>object</code>, <code>string</code>, <code>PublicProps</code>, <code>Readonly</code>&lt;<code>ExtractPropTypes</code>&lt;<code>object</code>&gt;&gt; &amp; <code>object</code>, <code>object</code>, <code>object</code>&gt;</p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="background" tabindex="-1">background <a class="header-anchor" href="#background" aria-label="Permalink to &quot;background&quot;">​</a></h3><blockquote><p><strong>background</strong>: <code>object</code></p></blockquote><h3 id="background-default" tabindex="-1">background.default <a class="header-anchor" href="#background-default" aria-label="Permalink to &quot;background.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="background-type" tabindex="-1">background.type <a class="header-anchor" href="#background-type" aria-label="Permalink to &quot;background.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>&quot;always&quot;</code> | <code>&quot;hover&quot;</code> | <code>&quot;none&quot;</code>&gt;</p></blockquote><h3 id="badge" tabindex="-1">badge <a class="header-anchor" href="#badge" aria-label="Permalink to &quot;badge&quot;">​</a></h3><blockquote><p><strong>badge</strong>: <code>object</code></p></blockquote><h3 id="badge-type" tabindex="-1">badge.type <a class="header-anchor" href="#badge-type" aria-label="Permalink to &quot;badge.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>string</code> | <code>number</code> | <code>Partial</code>&lt;<code>BadgeProps</code>&gt;&gt;</p></blockquote><h3 id="button" tabindex="-1">button <a class="header-anchor" href="#button" aria-label="Permalink to &quot;button&quot;">​</a></h3><blockquote><p><strong>button</strong>: <code>object</code></p></blockquote><h3 id="button-type" tabindex="-1">button.type <a class="header-anchor" href="#button-type" aria-label="Permalink to &quot;button.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>Partial</code>&lt;<code>ButtonProps</code>&gt;&gt;</p></blockquote><h3 id="circle" tabindex="-1">circle <a class="header-anchor" href="#circle" aria-label="Permalink to &quot;circle&quot;">​</a></h3><blockquote><p><strong>circle</strong>: <code>object</code></p></blockquote><h3 id="circle-type" tabindex="-1">circle.type <a class="header-anchor" href="#circle-type" aria-label="Permalink to &quot;circle.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="disabled" tabindex="-1">disabled <a class="header-anchor" href="#disabled" aria-label="Permalink to &quot;disabled&quot;">​</a></h3><blockquote><p><strong>disabled</strong>: <code>object</code></p></blockquote><h3 id="disabled-type" tabindex="-1">disabled.type <a class="header-anchor" href="#disabled-type" aria-label="Permalink to &quot;disabled.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>boolean</code> | () =&gt; <code>boolean</code>&gt;</p></blockquote><h3 id="draggable" tabindex="-1">draggable <a class="header-anchor" href="#draggable" aria-label="Permalink to &quot;draggable&quot;">​</a></h3><blockquote><p><strong>draggable</strong>: <code>object</code></p></blockquote><h3 id="draggable-type" tabindex="-1">draggable.type <a class="header-anchor" href="#draggable-type" aria-label="Permalink to &quot;draggable.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h3 id="dropdown" tabindex="-1">dropdown <a class="header-anchor" href="#dropdown" aria-label="Permalink to &quot;dropdown&quot;">​</a></h3><blockquote><p><strong>dropdown</strong>: <code>object</code></p></blockquote><h3 id="dropdown-type" tabindex="-1">dropdown.type <a class="header-anchor" href="#dropdown-type" aria-label="Permalink to &quot;dropdown.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/ActionDropdown.html"><code>ActionDropdown</code></a>&gt;</p></blockquote><h3 id="icon" tabindex="-1">icon <a class="header-anchor" href="#icon" aria-label="Permalink to &quot;icon&quot;">​</a></h3><blockquote><p><strong>icon</strong>: <code>object</code></p></blockquote><h3 id="icon-type" tabindex="-1">icon.type <a class="header-anchor" href="#icon-type" aria-label="Permalink to &quot;icon.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/IconParam.html"><code>IconParam</code></a>&gt;</p></blockquote><h3 id="label" tabindex="-1">label <a class="header-anchor" href="#label" aria-label="Permalink to &quot;label&quot;">​</a></h3><blockquote><p><strong>label</strong>: <code>object</code></p></blockquote><h3 id="label-type" tabindex="-1">label.type <a class="header-anchor" href="#label-type" aria-label="Permalink to &quot;label.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>StringConstructor</code></p></blockquote><h3 id="menus" tabindex="-1">menus <a class="header-anchor" href="#menus" aria-label="Permalink to &quot;menus&quot;">​</a></h3><blockquote><p><strong>menus</strong>: <code>object</code></p></blockquote><h3 id="menus-type" tabindex="-1">menus.type <a class="header-anchor" href="#menus-type" aria-label="Permalink to &quot;menus.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../interfaces/ActionMenuItem.html"><code>ActionMenuItem</code></a>[]&gt;</p></blockquote><h3 id="mode" tabindex="-1">mode <a class="header-anchor" href="#mode" aria-label="Permalink to &quot;mode&quot;">​</a></h3><blockquote><p><strong>mode</strong>: <code>object</code></p></blockquote><h3 id="mode-default" tabindex="-1">mode.default <a class="header-anchor" href="#mode-default" aria-label="Permalink to &quot;mode.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="mode-type" tabindex="-1">mode.type <a class="header-anchor" href="#mode-type" aria-label="Permalink to &quot;mode.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/ActionMode.html"><code>ActionMode</code></a>&gt;</p></blockquote><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><blockquote><p><strong>name</strong>: <code>object</code></p></blockquote><h3 id="name-type" tabindex="-1">name.type <a class="header-anchor" href="#name-type" aria-label="Permalink to &quot;name.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>StringConstructor</code></p></blockquote><h3 id="size" tabindex="-1">size <a class="header-anchor" href="#size" aria-label="Permalink to &quot;size&quot;">​</a></h3><blockquote><p><strong>size</strong>: <code>object</code></p></blockquote><h3 id="size-default" tabindex="-1">size.default <a class="header-anchor" href="#size-default" aria-label="Permalink to &quot;size.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="size-type" tabindex="-1">size.type <a class="header-anchor" href="#size-type" aria-label="Permalink to &quot;size.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/BaseSize.html"><code>BaseSize</code></a>&gt;</p></blockquote><h3 id="tooltip" tabindex="-1">tooltip <a class="header-anchor" href="#tooltip" aria-label="Permalink to &quot;tooltip&quot;">​</a></h3><blockquote><p><strong>tooltip</strong>: <code>object</code></p></blockquote><h3 id="tooltip-type" tabindex="-1">tooltip.type <a class="header-anchor" href="#tooltip-type" aria-label="Permalink to &quot;tooltip.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>string</code> | <code>Partial</code>&lt;<code>ElTooltipProps</code>&gt;&gt;</p></blockquote><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>object</code></p></blockquote><h3 id="type-type" tabindex="-1">type.type <a class="header-anchor" href="#type-type" aria-label="Permalink to &quot;type.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/BaseType.html"><code>BaseType</code></a>&gt;</p></blockquote><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h3><blockquote><p><strong>value</strong>: <code>object</code></p></blockquote><h3 id="value-type" tabindex="-1">value.type <a class="header-anchor" href="#value-type" aria-label="Permalink to &quot;value.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>unknown</code>&gt;</p></blockquote><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p>packages/ui/types/components/action/Action.d.ts:7</p>',78),r=[d];function l(n,i,p,s,b,u){return t(),o("div",null,r)}const g=e(c,[["render",l]]);export{q as __pageData,g as default};
