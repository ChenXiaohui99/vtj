import{_ as e,c as t,o,a6 as a}from"./chunks/framework.CX3W3h5X.js";const q=JSON.parse('{"title":"Variable: XInputUnit","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/ui/variables/XInputUnit.md","filePath":"typedoc/ui/variables/XInputUnit.md"}'),n={name:"typedoc/ui/variables/XInputUnit.md"},c=a('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">ui</a> / XInputUnit</p><h1 id="variable-xinputunit" tabindex="-1">Variable: XInputUnit <a class="header-anchor" href="#variable-xinputunit" aria-label="Permalink to &quot;Variable: XInputUnit&quot;">​</a></h1><blockquote><p><code>const</code> <strong>XInputUnit</strong>: <code>DefineComponent</code>&lt;<code>object</code>, <code>object</code>, <code>unknown</code>, <code>object</code>, <code>object</code>, <code>ComponentOptionsMixin</code>, <code>ComponentOptionsMixin</code>, <code>object</code>, <code>string</code>, <code>PublicProps</code>, <code>Readonly</code>&lt;<code>ExtractPropTypes</code>&lt;<code>object</code>&gt;&gt; &amp; <code>object</code>, <code>object</code>, <code>object</code>&gt;</p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="appendwidth" tabindex="-1">appendWidth <a class="header-anchor" href="#appendwidth" aria-label="Permalink to &quot;appendWidth&quot;">​</a></h3><blockquote><p><strong>appendWidth</strong>: <code>object</code></p></blockquote><h3 id="appendwidth-default" tabindex="-1">appendWidth.default <a class="header-anchor" href="#appendwidth-default" aria-label="Permalink to &quot;appendWidth.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>number</code></p></blockquote><h3 id="appendwidth-type" tabindex="-1">appendWidth.type <a class="header-anchor" href="#appendwidth-type" aria-label="Permalink to &quot;appendWidth.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>NumberConstructor</code></p></blockquote><h3 id="format" tabindex="-1">format <a class="header-anchor" href="#format" aria-label="Permalink to &quot;format&quot;">​</a></h3><blockquote><p><strong>format</strong>: <code>object</code></p></blockquote><h3 id="format-type" tabindex="-1">format.type <a class="header-anchor" href="#format-type" aria-label="Permalink to &quot;format.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>StringConstructor</code></p></blockquote><h3 id="modelvalue" tabindex="-1">modelValue <a class="header-anchor" href="#modelvalue" aria-label="Permalink to &quot;modelValue&quot;">​</a></h3><blockquote><p><strong>modelValue</strong>: <code>object</code></p></blockquote><h3 id="modelvalue-type" tabindex="-1">modelValue.type <a class="header-anchor" href="#modelvalue-type" aria-label="Permalink to &quot;modelValue.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: (<code>StringConstructor</code> | <code>NumberConstructor</code>)[]</p></blockquote><h3 id="selectprops" tabindex="-1">selectProps <a class="header-anchor" href="#selectprops" aria-label="Permalink to &quot;selectProps&quot;">​</a></h3><blockquote><p><strong>selectProps</strong>: <code>object</code></p></blockquote><h3 id="selectprops-type" tabindex="-1">selectProps.type <a class="header-anchor" href="#selectprops-type" aria-label="Permalink to &quot;selectProps.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;&gt;</p></blockquote><h3 id="unit" tabindex="-1">unit <a class="header-anchor" href="#unit" aria-label="Permalink to &quot;unit&quot;">​</a></h3><blockquote><p><strong>unit</strong>: <code>object</code></p></blockquote><h3 id="unit-type" tabindex="-1">unit.type <a class="header-anchor" href="#unit-type" aria-label="Permalink to &quot;unit.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>StringConstructor</code></p></blockquote><h3 id="units" tabindex="-1">units <a class="header-anchor" href="#units" aria-label="Permalink to &quot;units&quot;">​</a></h3><blockquote><p><strong>units</strong>: <code>object</code></p></blockquote><h3 id="units-type" tabindex="-1">units.type <a class="header-anchor" href="#units-type" aria-label="Permalink to &quot;units.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;(<code>string</code> | <a href="./../interfaces/InputUnitOption.html"><code>InputUnitOption</code></a>)[]&gt;</p></blockquote><h3 id="withunit" tabindex="-1">withUnit <a class="header-anchor" href="#withunit" aria-label="Permalink to &quot;withUnit&quot;">​</a></h3><blockquote><p><strong>withUnit</strong>: <code>object</code></p></blockquote><h3 id="withunit-default" tabindex="-1">withUnit.default <a class="header-anchor" href="#withunit-default" aria-label="Permalink to &quot;withUnit.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>boolean</code></p></blockquote><h3 id="withunit-type" tabindex="-1">withUnit.type <a class="header-anchor" href="#withunit-type" aria-label="Permalink to &quot;withUnit.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>BooleanConstructor</code></p></blockquote><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p>packages/ui/types/components/input-unit/InputUnit.d.ts:3</p>',40),r=[c];function d(i,l,p,u,s,h){return o(),t("div",null,r)}const m=e(n,[["render",d]]);export{q as __pageData,m as default};
