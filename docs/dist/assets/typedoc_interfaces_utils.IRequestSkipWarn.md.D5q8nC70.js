import{_ as e,c as a,o as t,ah as o}from"./chunks/framework.2_X6kT0O.js";const m=JSON.parse('{"title":"Interface: IRequestSkipWarn","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/interfaces/utils.IRequestSkipWarn.md","filePath":"typedoc/interfaces/utils.IRequestSkipWarn.md"}'),r={name:"typedoc/interfaces/utils.IRequestSkipWarn.md"},d=o('<p><a href="./../README.html">@vtj</a> / <a href="./../modules.html">Modules</a> / <a href="./../modules/utils.html">utils</a> / IRequestSkipWarn</p><h1 id="interface-irequestskipwarn" tabindex="-1">Interface: IRequestSkipWarn <a class="header-anchor" href="#interface-irequestskipwarn" aria-label="Permalink to &quot;Interface: IRequestSkipWarn&quot;">​</a></h1><p><a href="./../modules/utils.html">utils</a>.IRequestSkipWarn</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./utils.IRequestSkipWarn.html#callback">callback</a></li><li><a href="./utils.IRequestSkipWarn.html#code">code</a></li><li><a href="./utils.IRequestSkipWarn.html#complete">complete</a></li><li><a href="./utils.IRequestSkipWarn.html#executor">executor</a></li><li><a href="./utils.IRequestSkipWarn.html#name">name</a></li></ul><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="callback" tabindex="-1">callback <a class="header-anchor" href="#callback" aria-label="Permalink to &quot;callback&quot;">​</a></h3><p>• <code>Optional</code> <strong>callback</strong>: (<code>res</code>: <code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;) =&gt; <code>void</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>res</code>): <code>void</code></p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>res</code></td><td style="text-align:left;"><code>AxiosResponse</code>&lt;<code>any</code>, <code>any</code>&gt;</td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/utils/src/request.ts:35</p><hr><h3 id="code" tabindex="-1">code <a class="header-anchor" href="#code" aria-label="Permalink to &quot;code&quot;">​</a></h3><p>• <strong>code</strong>: <code>string</code> | <code>number</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/utils/src/request.ts:31</p><hr><h3 id="complete" tabindex="-1">complete <a class="header-anchor" href="#complete" aria-label="Permalink to &quot;complete&quot;">​</a></h3><p>• <code>Optional</code> <strong>complete</strong>: () =&gt; <code>void</code></p><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (): <code>void</code></p><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/utils/src/request.ts:37</p><hr><h3 id="executor" tabindex="-1">executor <a class="header-anchor" href="#executor" aria-label="Permalink to &quot;executor&quot;">​</a></h3><p>• <strong>executor</strong>: (<code>resolve</code>: (<code>value</code>: <code>unknown</code>) =&gt; <code>void</code>, <code>reject</code>: (<code>reason?</code>: <code>any</code>) =&gt; <code>void</code>) =&gt; <code>void</code></p><h4 id="type-declaration-2" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-2" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>resolve</code>, <code>reject</code>): <code>void</code></p><h5 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>resolve</code></td><td style="text-align:left;">(<code>value</code>: <code>unknown</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>reject</code></td><td style="text-align:left;">(<code>reason?</code>: <code>any</code>) =&gt; <code>void</code></td></tr></tbody></table><h5 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/utils/src/request.ts:26</p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><p>• <code>Optional</code> <strong>name</strong>: <code>string</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/utils/src/request.ts:33</p>',47),i=[d];function n(c,l,s,h,u,p){return t(),a("div",null,i)}const q=e(r,[["render",n]]);export{m as __pageData,q as default};
