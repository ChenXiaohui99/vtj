import{_ as e,c as t,o as a,a6 as o}from"./chunks/framework.CX3W3h5X.js";const g=JSON.parse('{"title":"Variable: listProps","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/ui/variables/listProps.md","filePath":"typedoc/ui/variables/listProps.md"}'),r={name:"typedoc/ui/variables/listProps.md"},i=o('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">ui</a> / listProps</p><h1 id="variable-listprops" tabindex="-1">Variable: listProps <a class="header-anchor" href="#variable-listprops" aria-label="Permalink to &quot;Variable: listProps&quot;">​</a></h1><blockquote><p><code>const</code> <strong>listProps</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data&quot;">​</a></h3><blockquote><p><strong>data</strong>: <code>object</code></p></blockquote><h3 id="data-type" tabindex="-1">data.type <a class="header-anchor" href="#data-type" aria-label="Permalink to &quot;data.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<a href="./../type-aliases/DataLoader.html"><code>DataLoader</code></a>&lt;<a href="./../interfaces/ListData.html"><code>ListData</code></a>, <a href="./../interfaces/ListState.html"><code>ListState</code></a>&gt;&gt;</p></blockquote><h3 id="data-default" tabindex="-1">data.default() <a class="header-anchor" href="#data-default" aria-label="Permalink to &quot;data.default()&quot;">​</a></h3><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>never</code>[]</p><h3 id="datakey" tabindex="-1">dataKey <a class="header-anchor" href="#datakey" aria-label="Permalink to &quot;dataKey&quot;">​</a></h3><blockquote><p><strong>dataKey</strong>: <code>object</code></p></blockquote><h3 id="datakey-type" tabindex="-1">dataKey.type <a class="header-anchor" href="#datakey-type" aria-label="Permalink to &quot;dataKey.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>StringConstructor</code></p></blockquote><h3 id="height" tabindex="-1">height <a class="header-anchor" href="#height" aria-label="Permalink to &quot;height&quot;">​</a></h3><blockquote><p><strong>height</strong>: <code>object</code></p></blockquote><h3 id="height-default" tabindex="-1">height.default <a class="header-anchor" href="#height-default" aria-label="Permalink to &quot;height.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="height-type" tabindex="-1">height.type <a class="header-anchor" href="#height-type" aria-label="Permalink to &quot;height.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: (<code>StringConstructor</code> | <code>NumberConstructor</code>)[]</p></blockquote><h3 id="infinitescroll" tabindex="-1">infiniteScroll <a class="header-anchor" href="#infinitescroll" aria-label="Permalink to &quot;infiniteScroll&quot;">​</a></h3><blockquote><p><strong>infiniteScroll</strong>: <code>object</code></p></blockquote><h3 id="infinitescroll-type" tabindex="-1">infiniteScroll.type <a class="header-anchor" href="#infinitescroll-type" aria-label="Permalink to &quot;infiniteScroll.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>boolean</code> | <a href="./../interfaces/ListInfiniteScroll.html"><code>ListInfiniteScroll</code></a>&gt;</p></blockquote><h3 id="itemheight" tabindex="-1">itemHeight <a class="header-anchor" href="#itemheight" aria-label="Permalink to &quot;itemHeight&quot;">​</a></h3><blockquote><p><strong>itemHeight</strong>: <code>object</code></p></blockquote><p>设置 itemHeight 即自动开启虚拟滚动</p><h3 id="itemheight-type" tabindex="-1">itemHeight.type <a class="header-anchor" href="#itemheight-type" aria-label="Permalink to &quot;itemHeight.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>number</code> | (<code>index</code>) =&gt; <code>number</code>&gt;</p></blockquote><h3 id="page" tabindex="-1">page <a class="header-anchor" href="#page" aria-label="Permalink to &quot;page&quot;">​</a></h3><blockquote><p><strong>page</strong>: <code>object</code></p></blockquote><h3 id="page-default" tabindex="-1">page.default <a class="header-anchor" href="#page-default" aria-label="Permalink to &quot;page.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>number</code></p></blockquote><h3 id="page-type" tabindex="-1">page.type <a class="header-anchor" href="#page-type" aria-label="Permalink to &quot;page.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>NumberConstructor</code></p></blockquote><h3 id="pagesize" tabindex="-1">pageSize <a class="header-anchor" href="#pagesize" aria-label="Permalink to &quot;pageSize&quot;">​</a></h3><blockquote><p><strong>pageSize</strong>: <code>object</code></p></blockquote><h3 id="pagesize-default" tabindex="-1">pageSize.default <a class="header-anchor" href="#pagesize-default" aria-label="Permalink to &quot;pageSize.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>number</code></p></blockquote><h3 id="pagesize-type" tabindex="-1">pageSize.type <a class="header-anchor" href="#pagesize-type" aria-label="Permalink to &quot;pageSize.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>NumberConstructor</code></p></blockquote><h3 id="pager" tabindex="-1">pager <a class="header-anchor" href="#pager" aria-label="Permalink to &quot;pager&quot;">​</a></h3><blockquote><p><strong>pager</strong>: <code>object</code></p></blockquote><h3 id="pager-type" tabindex="-1">pager.type <a class="header-anchor" href="#pager-type" aria-label="Permalink to &quot;pager.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: <code>PropType</code>&lt;<code>boolean</code> | <code>Partial</code>&lt;<code>PaginationProps</code>&gt;&gt;</p></blockquote><h3 id="width" tabindex="-1">width <a class="header-anchor" href="#width" aria-label="Permalink to &quot;width&quot;">​</a></h3><blockquote><p><strong>width</strong>: <code>object</code></p></blockquote><h3 id="width-default" tabindex="-1">width.default <a class="header-anchor" href="#width-default" aria-label="Permalink to &quot;width.default&quot;">​</a></h3><blockquote><p><strong>default</strong>: <code>string</code></p></blockquote><h3 id="width-type" tabindex="-1">width.type <a class="header-anchor" href="#width-type" aria-label="Permalink to &quot;width.type&quot;">​</a></h3><blockquote><p><strong>type</strong>: (<code>StringConstructor</code> | <code>NumberConstructor</code>)[]</p></blockquote><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p>packages/ui/types/components/list/types.d.ts:19</p>',56),l=[i];function d(c,n,h,s,p,u){return a(),t("div",null,l)}const q=e(r,[["render",d]]);export{g as __pageData,q as default};
