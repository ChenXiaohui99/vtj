import{_ as e,c as t,o,a6 as a}from"./chunks/framework.CX3W3h5X.js";const _=JSON.parse('{"title":"Function: omit()","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/base/functions/omit.md","filePath":"typedoc/base/functions/omit.md"}'),r={name:"typedoc/base/functions/omit.md"},n=a('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">base</a> / omit</p><h1 id="function-omit" tabindex="-1">Function: omit() <a class="header-anchor" href="#function-omit" aria-label="Permalink to &quot;Function: omit()&quot;">​</a></h1><blockquote><p><strong>omit</strong>&lt;<code>T</code>, <code>K</code>&gt;(<code>target</code>, <code>keys</code>): <code>K</code></p></blockquote><p>对象排除属性</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><p>• <strong>K</strong> <em>extends</em> <code>Record</code>&lt;<code>string</code>, <code>any</code>&gt;</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>target</strong>: <code>T</code></p><p>需要处理的对象</p><p>• <strong>keys</strong>: <code>string</code>[] | (<code>k</code>, <code>v</code>) =&gt; <code>boolean</code></p><p>需要排除的属性名称</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>K</code></p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p>packages/base/src/data.ts:115</p>',18),c=[n];function d(s,i,p,m,l,h){return o(),t("div",null,c)}const f=e(r,[["render",d]]);export{_ as __pageData,f as default};
