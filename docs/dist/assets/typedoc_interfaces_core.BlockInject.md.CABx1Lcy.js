import{_ as e,c as a,o,ah as t}from"./chunks/framework.C19k0Mdk.js";const u=JSON.parse('{"title":"Interface: BlockInject","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/interfaces/core.BlockInject.md","filePath":"typedoc/interfaces/core.BlockInject.md"}'),r={name:"typedoc/interfaces/core.BlockInject.md"},c=t('<p><a href="./../README.html">@vtj</a> / <a href="./../modules.html">Modules</a> / <a href="./../modules/core.html">core</a> / BlockInject</p><h1 id="interface-blockinject" tabindex="-1">Interface: BlockInject <a class="header-anchor" href="#interface-blockinject" aria-label="Permalink to &quot;Interface: BlockInject&quot;">​</a></h1><p><a href="./../modules/core.html">core</a>.BlockInject</p><p>注入描述</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./core.BlockInject.html#default">default</a></li><li><a href="./core.BlockInject.html#from">from</a></li><li><a href="./core.BlockInject.html#name">name</a></li></ul><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="default" tabindex="-1">default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;default&quot;">​</a></h3><p>• <code>Optional</code> <strong>default</strong>: <a href="./../modules/core.html#jsonvalue"><code>JSONValue</code></a> | <a href="./core.JSExpression.html"><code>JSExpression</code></a></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/block.ts:103</p><hr><h3 id="from" tabindex="-1">from <a class="header-anchor" href="#from" aria-label="Permalink to &quot;from&quot;">​</a></h3><p>• <code>Optional</code> <strong>from</strong>: <code>string</code> | <a href="./core.JSExpression.html"><code>JSExpression</code></a></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/block.ts:102</p><hr><h3 id="name" tabindex="-1">name <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name&quot;">​</a></h3><p>• <strong>name</strong>: <code>string</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/block.ts:101</p>',22),n=[c];function l(i,s,d,h,f,p){return o(),a("div",null,n)}const k=e(r,[["render",l]]);export{u as __pageData,k as default};
