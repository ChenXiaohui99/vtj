import{_ as e,c as a,o as r,a6 as t}from"./chunks/framework.CX3W3h5X.js";const f=JSON.parse('{"title":"Interface: ProvideAdapter","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/renderer/interfaces/ProvideAdapter.md","filePath":"typedoc/renderer/interfaces/ProvideAdapter.md"}'),o={name:"typedoc/renderer/interfaces/ProvideAdapter.md"},d=t('<p><a href="./../../README.html"><strong>@vtj</strong></a> • <strong>Docs</strong></p><hr><p><a href="./../../modules.html">@vtj</a> / <a href="./../README.html">renderer</a> / ProvideAdapter</p><h1 id="interface-provideadapter" tabindex="-1">Interface: ProvideAdapter <a class="header-anchor" href="#interface-provideadapter" aria-label="Permalink to &quot;Interface: ProvideAdapter&quot;">​</a></h1><h2 id="indexable" tabindex="-1">Indexable <a class="header-anchor" href="#indexable" aria-label="Permalink to &quot;Indexable&quot;">​</a></h2><p>[<code>index</code>: <code>string</code>]: <code>any</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="jsonp" tabindex="-1">jsonp() <a class="header-anchor" href="#jsonp" aria-label="Permalink to &quot;jsonp()&quot;">​</a></h3><blockquote><p><strong>jsonp</strong>: &lt;<code>T</code>&gt;(<code>url</code>, <code>options</code>?) =&gt; <code>Promise</code>&lt;<code>T</code>&gt;</p></blockquote><h4 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h4><p>• <strong>T</strong> = <code>any</code></p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>url</strong>: <code>string</code></p><p>• <strong>options?</strong>: <code>FetchJsonpOptions</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/renderer/types/provider/provider.d.ts:25</p><hr><h3 id="metaquery" tabindex="-1">metaQuery()? <a class="header-anchor" href="#metaquery" aria-label="Permalink to &quot;metaQuery()?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>metaQuery</strong>: (...<code>args</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt;</p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• ...<strong>args</strong>: <code>any</code>[]</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>any</code>&gt;</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/renderer/types/provider/provider.d.ts:26</p><hr><h3 id="request" tabindex="-1">request <a class="header-anchor" href="#request" aria-label="Permalink to &quot;request&quot;">​</a></h3><blockquote><p><strong>request</strong>: <code>IStaticRequest</code></p></blockquote><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/renderer/types/provider/provider.d.ts:24</p>',32),n=[d];function i(s,c,p,l,h,u){return r(),a("div",null,n)}const q=e(o,[["render",i]]);export{f as __pageData,q as default};
