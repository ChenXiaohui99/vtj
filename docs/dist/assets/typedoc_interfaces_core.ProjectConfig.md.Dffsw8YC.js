import{_ as e,c as o,o as a,ah as t}from"./chunks/framework.BMXGz-QH.js";const g=JSON.parse('{"title":"Interface: ProjectConfig","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/interfaces/core.ProjectConfig.md","filePath":"typedoc/interfaces/core.ProjectConfig.md"}'),r={name:"typedoc/interfaces/core.ProjectConfig.md"},i=t('<p><a href="./../README.html">@vtj</a> / <a href="./../modules.html">Modules</a> / <a href="./../modules/core.html">core</a> / ProjectConfig</p><h1 id="interface-projectconfig" tabindex="-1">Interface: ProjectConfig <a class="header-anchor" href="#interface-projectconfig" aria-label="Permalink to &quot;Interface: ProjectConfig&quot;">​</a></h1><p><a href="./../modules/core.html">core</a>.ProjectConfig</p><p>项目配置信息</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./core.ProjectConfig.html#logo">logo</a></li><li><a href="./core.ProjectConfig.html#mock">mock</a></li><li><a href="./core.ProjectConfig.html#themeswitchable">themeSwitchable</a></li><li><a href="./core.ProjectConfig.html#title">title</a></li></ul><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="logo" tabindex="-1">logo <a class="header-anchor" href="#logo" aria-label="Permalink to &quot;logo&quot;">​</a></h3><p>• <code>Optional</code> <strong>logo</strong>: <code>string</code></p><p>logo</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/project.ts:88</p><hr><h3 id="mock" tabindex="-1">mock <a class="header-anchor" href="#mock" aria-label="Permalink to &quot;mock&quot;">​</a></h3><p>• <code>Optional</code> <strong>mock</strong>: <code>boolean</code></p><p>开启模拟数据</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/project.ts:73</p><hr><h3 id="themeswitchable" tabindex="-1">themeSwitchable <a class="header-anchor" href="#themeswitchable" aria-label="Permalink to &quot;themeSwitchable&quot;">​</a></h3><p>• <code>Optional</code> <strong>themeSwitchable</strong>: <code>boolean</code></p><p>开启主题切换</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/project.ts:78</p><hr><h3 id="title" tabindex="-1">title <a class="header-anchor" href="#title" aria-label="Permalink to &quot;title&quot;">​</a></h3><p>• <code>Optional</code> <strong>title</strong>: <code>string</code></p><p>站点标题</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>packages/core/src/protocols/schemas/project.ts:83</p>',31),c=[i];function n(l,h,s,d,p,f){return a(),o("div",null,c)}const b=e(r,[["render",n]]);export{g as __pageData,b as default};
